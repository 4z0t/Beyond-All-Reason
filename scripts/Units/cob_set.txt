Binary file armada_sweeper.cob matches
armada_advancedbotlab.bos:    set YARD_OPEN to 1;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 1;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set YARD_OPEN to 0;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 0;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 1;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 0;
armada_advancedbotlab.bos:    set-signal-mask SIG_ACTIVATE;
armada_advancedbotlab.bos:    set-signal-mask 0;
armada_advancedbotlab.bos:Killed(severity, corpsetype)
armada_advancedbotlab.bos:            corpsetype = 1 ;
armada_advancedbotlab.bos:            return(corpsetype);
armada_advancedbotlab.bos:            corpsetype = 2 ;
armada_advancedbotlab.bos:            return(corpsetype);
armada_advancedbotlab.bos:            corpsetype = 3 ;
armada_advancedbotlab.bos:            return(corpsetype);
armada_advancedbotlab.bos:    corpsetype = 3 ;
armada_advancedbotlab.bos:    return corpsetype;
armada_rattlesnake.bos:     set ARMORED to 0;
armada_rattlesnake.bos:     set ARMORED to 1;
armada_rattlesnake.bos:     set-signal-mask 0;
armada_rattlesnake.bos:SetStunned(State)
armada_rattlesnake.bos:     set-signal-mask SIG_AIM;
armada_rattlesnake.bos:     set-signal-mask 2;
armada_rattlesnake.bos:/*SetMaxReloadTime(Func_Var_1)
armada_rattlesnake.bos:Killed(severity, corpsetype)
armada_rattlesnake.bos:             corpsetype = 1 ;
armada_rattlesnake.bos:             return(corpsetype);
armada_rattlesnake.bos:             corpsetype = 2 ;
armada_rattlesnake.bos:             return(corpsetype);
armada_rattlesnake.bos:             corpsetype = 3 ;
armada_rattlesnake.bos:             return(corpsetype);
armada_rattlesnake.bos:     corpsetype = 3 ;
armada_rattlesnake.bos:     return corpsetype;
Binary file armada_rattlesnake.cob matches
armada_citadel.bos:// OffsetToScriptCodeIndexArray        f64
armada_citadel.bos:// OffsetToScriptNameOffsetArray       fa8
armada_citadel.bos:// OffsetToPieceNameOffsetArray        fec
armada_citadel.bos:// OffsetToScriptCode                  2c
armada_citadel.bos:// OffsetToNameArray                   1010
armada_citadel.bos:// OffsetToFirstName                   1010
armada_citadel.bos:SetMaxReloadTime(Func_Var_1)
armada_citadel.bos:/*   1d4:*/  set-signal-mask SIG_AIM;
armada_citadel.bos:Killed(severity, corpsetype)
armada_citadel.bos:/*   271:*/          corpsetype = 1;
armada_citadel.bos:/*   2b4:*/          return (corpsetype);
armada_citadel.bos:/*   2be:*/          corpsetype = 2;
armada_citadel.bos:/*   301:*/          return (corpsetype);
armada_citadel.bos:/*   30b:*/          corpsetype = 3;
armada_citadel.bos:/*   369:*/          return (corpsetype);
armada_citadel.bos:/*   36c:*/  corpsetype = 3;
armada_citadel.bos:/*   3cd:*/  return (corpsetype);
Binary file armada_citadel.cob matches
armada_twilight.bos:    set ARMORED to 0;
armada_twilight.bos:    set ARMORED to 1;
armada_twilight.bos:SetStunned(State)
armada_twilight.bos:SetSpeed(Func_Var_1)
armada_twilight.bos:    set-signal-mask 2;
armada_twilight.bos:    set ACTIVATION to 0;
armada_twilight.bos:    set ACTIVATION to 100;
armada_twilight.bos:Killed(severity, corpsetype)
armada_twilight.bos:            corpsetype = 1 ;
armada_twilight.bos:            return(corpsetype);
armada_twilight.bos:            corpsetype = 2 ;
armada_twilight.bos:            return(corpsetype);
armada_twilight.bos:            corpsetype = 3 ;
armada_twilight.bos:            return(corpsetype);
armada_twilight.bos:    corpsetype = 3 ;
armada_twilight.bos:    return corpsetype;
Binary file armada_twilight.cob matches
armada_amphibiousbot.bos:    set-signal-mask SIG_MOVE;
armada_amphibiousbot.bos:setSFXoccupy(Func_Var_1)
armada_amphibiousbot.bos:SetMaxReloadTime(Func_Var_1)
armada_amphibiousbot.bos:    set-signal-mask 0;
armada_amphibiousbot.bos:SetStunned(State)
armada_amphibiousbot.bos:    set-signal-mask SIG_AIM;
armada_amphibiousbot.bos:Killed(severity, corpsetype)
armada_amphibiousbot.bos:            corpsetype = 1 ;
armada_amphibiousbot.bos:            return(corpsetype);
armada_amphibiousbot.bos:            corpsetype = 2 ;
armada_amphibiousbot.bos:            return(corpsetype);
armada_amphibiousbot.bos:            corpsetype = 3 ;
armada_amphibiousbot.bos:            return(corpsetype);
armada_amphibiousbot.bos:    corpsetype = 3 ;
armada_amphibiousbot.bos:    return corpsetype;
Binary file armada_amphibiousbot.cob matches
armada_amphibiouscomplex.bos:   set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 1;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 0;
armada_amphibiouscomplex.bos:   set-signal-mask SIG_ACTIVATE;
armada_amphibiouscomplex.bos:   set-signal-mask 0;
armada_amphibiouscomplex.bos:Killed(severity, corpsetype)
armada_amphibiouscomplex.bos:           corpsetype = 1 ;
armada_amphibiouscomplex.bos:           return(corpsetype);
armada_amphibiouscomplex.bos:           corpsetype = 2 ;
armada_amphibiouscomplex.bos:           return(corpsetype);
armada_amphibiouscomplex.bos:           corpsetype = 3 ;
armada_amphibiouscomplex.bos:           return(corpsetype);
armada_amphibiouscomplex.bos:   corpsetype = 3 ;
armada_amphibiouscomplex.bos:   return corpsetype;
armada_crocodile.bos:            // Set values for tilt
armada_crocodile.bos:    set-signal-mask SIG_MOVE;
armada_crocodile.bos:setSFXoccupy(Func_Var_1)
armada_crocodile.bos:SetMaxReloadTime(Func_Var_1)
armada_crocodile.bos:SetStunned(State)
armada_crocodile.bos:    set-signal-mask SIG_AIM;
armada_crocodile.bos:Killed(severity, corpsetype)
armada_crocodile.bos:            corpsetype = 1 ;
armada_crocodile.bos:            return(corpsetype);
armada_crocodile.bos:            corpsetype = 2 ;
armada_crocodile.bos:            return(corpsetype);
armada_crocodile.bos:            corpsetype = 3 ;
armada_crocodile.bos:            return(corpsetype);
armada_crocodile.bos:    corpsetype = 3 ;
armada_crocodile.bos:    return corpsetype;
Binary file armada_crocodile.cob matches
armada_pulsar.bos:    set ARMORED to 0;
armada_pulsar.bos:    set ARMORED to 1;
armada_pulsar.bos:SetMaxReloadTime(Func_Var_1)
armada_pulsar.bos:    set-signal-mask SIG_AIM;
armada_pulsar.bos:Killed(severity, corpsetype)
armada_pulsar.bos:            corpsetype = 1 ;
armada_pulsar.bos:            return(corpsetype);
armada_pulsar.bos:            corpsetype = 2 ;
armada_pulsar.bos:            return(corpsetype);
armada_pulsar.bos:            corpsetype = 3 ;
armada_pulsar.bos:            return(corpsetype);
armada_pulsar.bos:    corpsetype = 3 ;
armada_pulsar.bos:    return corpsetype;
Binary file armada_pulsar.cob matches
armada_aircraftplant.bos:      set YARD_OPEN to 1;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 1;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set YARD_OPEN to 0;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 0;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set INBUILDSTANCE to 1;
armada_aircraftplant.bos:      set INBUILDSTANCE to 0;
armada_aircraftplant.bos:      set-signal-mask SIG_ACTIVATE;
armada_aircraftplant.bos:      set-signal-mask 0;
armada_aircraftplant.bos:Killed(severity, corpsetype)
armada_aircraftplant.bos:              corpsetype = 1 ;
armada_aircraftplant.bos:              return(corpsetype);
armada_aircraftplant.bos:              corpsetype = 2 ;
armada_aircraftplant.bos:              return(corpsetype);
armada_aircraftplant.bos:              corpsetype = 3 ;
armada_aircraftplant.bos:              return(corpsetype);
armada_aircraftplant.bos:      corpsetype = 3 ;
armada_aircraftplant.bos:      return corpsetype;
armada_advancedradartower.bos:Killed(severity, corpsetype)
armada_advancedradartower.bos:            corpsetype = 1 ;
armada_advancedradartower.bos:            return(corpsetype);
armada_advancedradartower.bos:            corpsetype = 2 ;
armada_advancedradartower.bos:            return(corpsetype);
armada_advancedradartower.bos:            corpsetype = 3 ;
armada_advancedradartower.bos:            return(corpsetype);
armada_advancedradartower.bos:    corpsetype = 3 ;
armada_advancedradartower.bos:    return corpsetype;
armada_shellshocker.bos:SetMaxReloadTime(Func_Var_1)
armada_shellshocker.bos:SetStunned(State)
armada_shellshocker.bos:     set-signal-mask SIG_AIM;
armada_shellshocker.bos:Killed(severity, corpsetype)
armada_shellshocker.bos:             corpsetype = 1 ;
armada_shellshocker.bos:             return(corpsetype);
armada_shellshocker.bos:             corpsetype = 2 ;
armada_shellshocker.bos:             return(corpsetype);
armada_shellshocker.bos:             corpsetype = 3 ;
armada_shellshocker.bos:             return(corpsetype);
armada_shellshocker.bos:     corpsetype = 3 ;
armada_shellshocker.bos:     return corpsetype;
Binary file armada_shellshocker.cob matches
armada_radarjammerbot.bos:SetStunned(State)
armada_radarjammerbot.bos:    //set-signal-mask SIG_WALK;
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:    set-signal-mask SIG_ACTIVATE;
armada_radarjammerbot.bos:    set-signal-mask SIG_ACTIVATE;
armada_radarjammerbot.bos:            set-signal-mask 4;
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 100;
armada_radarjammerbot.bos:Killed(severity, corpsetype)
armada_radarjammerbot.bos:            corpsetype = 1 ;
armada_radarjammerbot.bos:            return(corpsetype);
armada_radarjammerbot.bos:            corpsetype = 2 ;
armada_radarjammerbot.bos:            return(corpsetype);
armada_radarjammerbot.bos:            corpsetype = 3 ;
armada_radarjammerbot.bos:            return(corpsetype);
armada_radarjammerbot.bos:    corpsetype = 3 ;
armada_radarjammerbot.bos:    return corpsetype;
Binary file armada_radarjammerbot.cob matches
armada_advancedsonarstation.bos:Killed(severity, corpsetype)
armada_advancedsonarstation.bos:            corpsetype = 1 ;
armada_advancedsonarstation.bos:            return(corpsetype);
armada_advancedsonarstation.bos:            corpsetype = 2 ;
armada_advancedsonarstation.bos:            return(corpsetype);
armada_advancedsonarstation.bos:            corpsetype = 3 ;
armada_advancedsonarstation.bos:            return(corpsetype);
armada_advancedsonarstation.bos:    corpsetype = 3 ;
armada_advancedsonarstation.bos:    return corpsetype;
armada_airrepairpad.bos:Killed(severity, corpsetype)
armada_airrepairpad.bos:             corpsetype = 1 ;
armada_airrepairpad.bos:             return(corpsetype);
armada_airrepairpad.bos:             corpsetype = 2 ;
armada_airrepairpad.bos:             return(corpsetype);
armada_airrepairpad.bos:             corpsetype = 3 ;
armada_airrepairpad.bos:             return(corpsetype);
armada_airrepairpad.bos:     corpsetype = 3 ;
armada_airrepairpad.bos:     return corpsetype;
armada_advancedshipyard.bos:     set YARD_OPEN to 1;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 1;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set YARD_OPEN to 0;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 0;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 1;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 0;
armada_advancedshipyard.bos:     set-signal-mask SIG_ACTIVATE;
armada_advancedshipyard.bos:     set-signal-mask 0;
armada_advancedshipyard.bos:Killed(severity, corpsetype)
armada_advancedshipyard.bos:             corpsetype = 1 ;
armada_advancedshipyard.bos:             return(corpsetype);
armada_advancedshipyard.bos:             corpsetype = 2 ;
armada_advancedshipyard.bos:             return(corpsetype);
armada_advancedshipyard.bos:             corpsetype = 3 ;
armada_advancedshipyard.bos:             return(corpsetype);
armada_advancedshipyard.bos:     corpsetype = 3 ;
armada_advancedshipyard.bos:     return corpsetype;
armada_moray.bos:SetStunned(State)
armada_moray.bos:     set-signal-mask SIG_AIM;
armada_moray.bos:Killed(severity, corpsetype)
armada_moray.bos:             corpsetype = 1 ;
armada_moray.bos:             return(corpsetype);
armada_moray.bos:             corpsetype = 2 ;
armada_moray.bos:             return(corpsetype);
armada_moray.bos:             corpsetype = 3 ;
armada_moray.bos:             return(corpsetype);
armada_moray.bos:     corpsetype = 3 ;
armada_moray.bos:     return corpsetype;
Binary file armada_moray.cob matches
armada_stork.bos:SetSFXOccupy(terraintype){
armada_stork.bos:Killed(severity, corpsetype)
armada_stork.bos:           corpsetype = 1;
armada_stork.bos:           return (corpsetype);
armada_stork.bos:           corpsetype = 2;
armada_stork.bos:           return (corpsetype);
armada_stork.bos:           corpsetype = 3;
armada_stork.bos:           return (corpsetype);
armada_stork.bos:   corpsetype = 3;
armada_stork.bos:   return corpsetype;
armada_advancedvehicleplant.bos:     set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 1;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 0;
armada_advancedvehicleplant.bos:     set-signal-mask SIG_ACTIVATE;
armada_advancedvehicleplant.bos:     set-signal-mask 0;
armada_advancedvehicleplant.bos:Killed(severity, corpsetype)
armada_advancedvehicleplant.bos:             corpsetype = 1 ;
armada_advancedvehicleplant.bos:             return(corpsetype);
armada_advancedvehicleplant.bos:             corpsetype = 2 ;
armada_advancedvehicleplant.bos:             return(corpsetype);
armada_advancedvehicleplant.bos:             corpsetype = 3 ;
armada_advancedvehicleplant.bos:             return(corpsetype);
armada_advancedvehicleplant.bos:     corpsetype = 3 ;
armada_advancedvehicleplant.bos:     return corpsetype;
armada_oracle.bos:Killed(severity, corpsetype)
armada_oracle.bos:            corpsetype = 1 ;
armada_oracle.bos:            return(corpsetype);
armada_oracle.bos:            corpsetype = 2 ;
armada_oracle.bos:            return(corpsetype);
armada_oracle.bos:            corpsetype = 3 ;
armada_oracle.bos:            return(corpsetype);
armada_oracle.bos:    corpsetype = 3 ;
armada_oracle.bos:    return corpsetype;
armada_titan.bos:SetMaxReloadTime(Func_Var_1)
armada_titan.bos:SetStunned(State)
armada_titan.bos:   set-signal-mask SIG_AIM;
armada_titan.bos:Killed(severity, corpsetype)
armada_titan.bos:           corpsetype = 1 ;
armada_titan.bos:           return(corpsetype);
armada_titan.bos:           corpsetype = 2 ;
armada_titan.bos:           return(corpsetype);
armada_titan.bos:           corpsetype = 3 ;
armada_titan.bos:           return(corpsetype);
armada_titan.bos:   corpsetype = 3 ;
armada_titan.bos:   return corpsetype;
Binary file armada_titan.cob matches
armada_dreadnought.bos:SetDirection(heading)
armada_dreadnought.bos:SetMaxReloadTime(Func_Var_1)
armada_dreadnought.bos:    set-signal-mask SIG_MOVE;
armada_dreadnought.bos:    set-signal-mask SIG_AIM;
armada_dreadnought.bos:    set-signal-mask SIG_AIM_2;
armada_dreadnought.bos:Killed(severity, corpsetype)
armada_dreadnought.bos:            corpsetype = 1 ;
armada_dreadnought.bos:            return(corpsetype);
armada_dreadnought.bos:            corpsetype = 2 ;
armada_dreadnought.bos:            return(corpsetype);
armada_dreadnought.bos:            corpsetype = 3 ;
armada_dreadnought.bos:            return(corpsetype);
armada_dreadnought.bos:    corpsetype = 3 ;
armada_dreadnought.bos:    return corpsetype;
Binary file armada_dreadnought.cob matches
armada_beamer.bos:  set-signal-mask SIG_AIM;
armada_beamer.bos:Killed(severity, corpsetype)
armada_beamer.bos:          corpsetype = 1 ;
armada_beamer.bos:          return(corpsetype);
armada_beamer.bos:          corpsetype = 2 ;
armada_beamer.bos:          return(corpsetype);
armada_beamer.bos:          corpsetype = 3 ;
armada_beamer.bos:          return(corpsetype);
armada_beamer.bos:  corpsetype = 3 ;
armada_beamer.bos:  return corpsetype;
armada_beaver.bos:  set INBUILDSTANCE to 0;
armada_beaver.bos:  set INBUILDSTANCE to 1;
armada_beaver.bos:  set-signal-mask SIG_BUILD;
armada_beaver.bos:  set-signal-mask 0;
armada_beaver.bos:Killed(severity, corpsetype)
armada_beaver.bos:          corpsetype = 1 ;
armada_beaver.bos:          return(corpsetype);
armada_beaver.bos:          corpsetype = 2 ;
armada_beaver.bos:          return(corpsetype);
armada_beaver.bos:          corpsetype = 3 ;
armada_beaver.bos:          return(corpsetype);
armada_beaver.bos:  corpsetype = 3 ;
armada_beaver.bos:  return corpsetype;
armada_hornet.bos:   set-signal-mask SIG_MOVE;
armada_hornet.bos:   set-signal-mask SIG_MOVE;
armada_hornet.bos:   set-signal-mask SIG_MOVE;
armada_hornet.bos:Killed(severity, corpsetype)
armada_hornet.bos:           corpsetype = 1 ;
armada_hornet.bos:           return(corpsetype);
armada_hornet.bos:           corpsetype = 2 ;
armada_hornet.bos:           return(corpsetype);
armada_hornet.bos:           corpsetype = 3 ;
armada_hornet.bos:           return(corpsetype);
armada_hornet.bos:   corpsetype = 3 ;
armada_hornet.bos:   return corpsetype;
armada_roughneck.bos:SetStunned(State)
armada_roughneck.bos:   set-signal-mask SIG_AIM;
armada_roughneck.bos:Killed(severity, corpsetype)
armada_roughneck.bos:           corpsetype = 1 ;
armada_roughneck.bos:           return(corpsetype);
armada_roughneck.bos:           corpsetype = 2 ;
armada_roughneck.bos:           return(corpsetype);
armada_roughneck.bos:           corpsetype = 3 ;
armada_roughneck.bos:           return(corpsetype);
armada_roughneck.bos:   corpsetype = 3 ;
armada_roughneck.bos:   return corpsetype;
Binary file armada_roughneck.cob matches
armada_basilica.bos:   set-signal-mask SIG_AIM;
armada_basilica.bos:Killed(severity, corpsetype)
armada_basilica.bos:           corpsetype = 1 ;
armada_basilica.bos:           return(corpsetype);
armada_basilica.bos:           corpsetype = 2 ;
armada_basilica.bos:           return(corpsetype);
armada_basilica.bos:           corpsetype = 3 ;
armada_basilica.bos:           return(corpsetype);
armada_basilica.bos:   corpsetype = 3 ;
armada_basilica.bos:   return corpsetype;
armada_bull.bos:setSFXoccupy(state)
armada_bull.bos:SetMaxReloadTime(Func_Var_1)
armada_bull.bos:    set-signal-mask 0;
armada_bull.bos:SetStunned(State)
armada_bull.bos:    set-signal-mask SIG_AIM;
armada_bull.bos:Killed(severity, corpsetype)
armada_bull.bos:            corpsetype = 1 ;
armada_bull.bos:            return(corpsetype);
armada_bull.bos:            corpsetype = 2 ;
armada_bull.bos:            return(corpsetype);
armada_bull.bos:            corpsetype = 3 ;
armada_bull.bos:            return(corpsetype);
armada_bull.bos:    corpsetype = 3 ;
armada_bull.bos:    return corpsetype;
Binary file armada_bull.cob matches
armada_constructionaircraft.bos:      set INBUILDSTANCE to 1;
armada_constructionaircraft.bos:      set-signal-mask SIG_BUILD;
armada_constructionaircraft.bos:      set-signal-mask 0;
armada_constructionaircraft.bos:      set INBUILDSTANCE to 0;
armada_constructionaircraft.bos:Killed(severity, corpsetype)
armada_constructionaircraft.bos:              corpsetype = 1 ;
armada_constructionaircraft.bos:              return(corpsetype);
armada_constructionaircraft.bos:              corpsetype = 2 ;
armada_constructionaircraft.bos:              return(corpsetype);
armada_constructionaircraft.bos:              corpsetype = 3 ;
armada_constructionaircraft.bos:              return(corpsetype);
armada_constructionaircraft.bos:      corpsetype = 3 ;
armada_constructionaircraft.bos:      return corpsetype;
armada_haven.bos:SetDirection(heading)
armada_haven.bos:   set-signal-mask 0;
armada_haven.bos:SetStunned(State)
armada_haven.bos:   set-signal-mask SIG_MOVE;
armada_haven.bos:   set-signal-mask SIG_AIM_2;
armada_haven.bos:Killed(severity, corpsetype)
armada_haven.bos:           corpsetype = 1 ;
armada_haven.bos:           return(corpsetype);
armada_haven.bos:           corpsetype = 2 ;
armada_haven.bos:           return(corpsetype);
armada_haven.bos:           corpsetype = 3 ;
armada_haven.bos:           return(corpsetype);
armada_haven.bos:   corpsetype = 3 ;
armada_haven.bos:   return corpsetype;
Binary file armada_haven.cob matches
armada_constructionhovercraft.bos:              // Set values for tilt
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 0;
armada_constructionhovercraft.bos:      set-signal-mask SIG_MOVE;
armada_constructionhovercraft.bos:setSFXoccupy(state)
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 1;
armada_constructionhovercraft.bos:      set-signal-mask SIG_BUILD;
armada_constructionhovercraft.bos:      set-signal-mask 0;
armada_constructionhovercraft.bos:Killed(severity, corpsetype)
armada_constructionhovercraft.bos:              corpsetype = 1 ;
armada_constructionhovercraft.bos:              return(corpsetype);
armada_constructionhovercraft.bos:              corpsetype = 2 ;
armada_constructionhovercraft.bos:              return(corpsetype);
armada_constructionhovercraft.bos:              corpsetype = 3 ;
armada_constructionhovercraft.bos:              return(corpsetype);
armada_constructionhovercraft.bos:      corpsetype = 3 ;
armada_constructionhovercraft.bos:      return corpsetype;
Binary file armada_constructionhovercraft.cob matches
armada_chainsaw.bos:SetStunned(State)
armada_chainsaw.bos:     set-signal-mask SIG_AIM;
armada_chainsaw.bos:Killed(severity, corpsetype)
armada_chainsaw.bos:             corpsetype = 1 ;
armada_chainsaw.bos:             return(corpsetype);
armada_chainsaw.bos:             corpsetype = 2 ;
armada_chainsaw.bos:             return(corpsetype);
armada_chainsaw.bos:             corpsetype = 3 ;
armada_chainsaw.bos:             return(corpsetype);
armada_chainsaw.bos:     corpsetype = 3 ;
armada_chainsaw.bos:     return corpsetype;
Binary file armada_chainsaw.cob matches
armada_constructionbot.bos:      set-signal-mask SIG_WALK;
armada_constructionbot.bos:      set INBUILDSTANCE to 0;
armada_constructionbot.bos:      set INBUILDSTANCE to 1;
armada_constructionbot.bos:      set-signal-mask SIG_BUILD;
armada_constructionbot.bos:      set-signal-mask 0;
armada_constructionbot.bos:Killed(severity, corpsetype)
armada_constructionbot.bos:              corpsetype = 1 ;
armada_constructionbot.bos:              return(corpsetype);
armada_constructionbot.bos:              corpsetype = 2 ;
armada_constructionbot.bos:              return(corpsetype);
armada_constructionbot.bos:              corpsetype = 3 ;
armada_constructionbot.bos:              return(corpsetype);
armada_constructionbot.bos:      corpsetype = 3 ;
armada_constructionbot.bos:      return corpsetype;
armada_cloakablefusionreactor.bos:   set ARMORED to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 0;
armada_cloakablefusionreactor.bos:Killed(severity, corpsetype)
armada_cloakablefusionreactor.bos:           corpsetype = 1 ;
armada_cloakablefusionreactor.bos:           return(corpsetype);
armada_cloakablefusionreactor.bos:           corpsetype = 2 ;
armada_cloakablefusionreactor.bos:           return(corpsetype);
armada_cloakablefusionreactor.bos:           corpsetype = 3 ;
armada_cloakablefusionreactor.bos:           return(corpsetype);
armada_cloakablefusionreactor.bos:   corpsetype = 3 ;
armada_cloakablefusionreactor.bos:   return corpsetype;
armada_dragonsclaw.bos:    set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 1;
armada_dragonsclaw.bos:    set-signal-mask 0;
armada_dragonsclaw.bos:SetStunned(State)
armada_dragonsclaw.bos:SetMaxReloadTime(Func_Var_1)
armada_dragonsclaw.bos:    set-signal-mask SIG_AIM;
armada_dragonsclaw.bos:Killed(severity, corpsetype)
armada_dragonsclaw.bos:            corpsetype = 1 ;
armada_dragonsclaw.bos:            return(corpsetype);
armada_dragonsclaw.bos:            corpsetype = 2 ;
armada_dragonsclaw.bos:            return(corpsetype);
armada_dragonsclaw.bos:            corpsetype = 3 ;
armada_dragonsclaw.bos:            return(corpsetype);
armada_dragonsclaw.bos:    corpsetype = 3 ;
armada_dragonsclaw.bos:    return corpsetype;
Binary file armada_dragonsclaw.cob matches
armada_commander.bos:     set-signal-mask SIG_WALK;
armada_commander.bos:     set-signal-mask SIG_AIM;
armada_commander.bos:     set-signal-mask SIG_AIM;
armada_commander.bos:     set-signal-mask SIG_AIM;
armada_commander.bos:     set-signal-mask SIG_AIM;
armada_commander.bos:     set-signal-mask SIG_AIM;
armada_commander.bos:     //set-signal-mask SIG_AIM;
armada_commander.bos:     set INBUILDSTANCE to 1;
armada_commander.bos:     set-signal-mask SIG_AIM;
armada_commander.bos:     set INBUILDSTANCE to 0;
armada_commander.bos:     set-signal-mask SIG_AIM;
armada_commander.bos:Killed( severity, corpsetype )
armada_commander.bos:     corpsetype = 1;
armada_commander.bos:     return(corpsetype);
armada_commander_lus.lua: SetSignalMask(SIG_AIM)
armada_commander_lus.lua:                 SetSignalMask(SIG_AIM)
armada_commander_lus.lua:                 SetSignalMask(SIG_AIM)
armada_commander_lus.lua: Spring.UnitScript.SetUnitValue(COB.INBUILDSTANCE, true)
armada_commander_lus.lua: Spring.UnitScript.SetUnitValue(COB.INBUILDSTANCE, false)
armada_commander_lus.lua: SetSignalMask(SIG_AIM)
armada_commander_lus.lua: SetSignalMask(SIG_AIM)
armada_commanderboss.bos: set-signal-mask SIG_WALK;
armada_commanderboss.bos: set-signal-mask SIG_AIM;
armada_commanderboss.bos: set-signal-mask SIG_AIM;
armada_commanderboss.bos: set-signal-mask SIG_AIM;
armada_commanderboss.bos: set-signal-mask SIG_AIM;
armada_commanderboss.bos: set-signal-mask SIG_AIM;
armada_commanderboss.bos: //set-signal-mask SIG_AIM;
armada_commanderboss.bos: set INBUILDSTANCE to 1;
armada_commanderboss.bos: set-signal-mask SIG_AIM;
armada_commanderboss.bos: set INBUILDSTANCE to 0;
armada_commanderboss.bos: set-signal-mask SIG_AIM;
armada_commanderboss.bos:Killed( severity, corpsetype )
armada_commanderboss.bos: corpsetype = 1;
armada_commanderboss.bos: return(corpsetype);
armada_consul.bos:  set INBUILDSTANCE to 1;
armada_consul.bos:  set INBUILDSTANCE to 0;
armada_consul.bos:Killed(severity, corpsetype)
armada_consul.bos:          corpsetype = 1 ;
armada_consul.bos:          return(corpsetype);
armada_consul.bos:          corpsetype = 2 ;
armada_consul.bos:          return(corpsetype);
armada_consul.bos:          corpsetype = 3 ;
armada_consul.bos:          return(corpsetype);
armada_consul.bos:  corpsetype = 3 ;
armada_consul.bos:  return corpsetype;
armada_turtle.bos:SetMaxReloadTime(Func_Var_1)
armada_turtle.bos:SetStunned(State)
armada_turtle.bos:    set-signal-mask SIG_AIM;
armada_turtle.bos:Killed(severity, corpsetype)
armada_turtle.bos:            corpsetype = 1 ;
armada_turtle.bos:            return(corpsetype);
armada_turtle.bos:            corpsetype = 2 ;
armada_turtle.bos:            return(corpsetype);
armada_turtle.bos:            corpsetype = 3 ;
armada_turtle.bos:            return(corpsetype);
armada_turtle.bos:    corpsetype = 3 ;
armada_turtle.bos:    return corpsetype;
Binary file armada_turtle.cob matches
armada_paladin.bos:SetDirection(heading)
armada_paladin.bos:    set-signal-mask 16;
armada_paladin.bos:SetMaxReloadTime(Func_Var_1)
armada_paladin.bos:    set-signal-mask 0;
armada_paladin.bos:SetStunned(State)
armada_paladin.bos:    set-signal-mask 0;
armada_paladin.bos:    set-signal-mask SIG_MOVE;
armada_paladin.bos:    set-signal-mask SIG_AIM_2;
armada_paladin.bos:    set-signal-mask SIG_AIM;
armada_paladin.bos:Killed(severity, corpsetype)
armada_paladin.bos:            corpsetype = 1 ;
armada_paladin.bos:            return(corpsetype);
armada_paladin.bos:            corpsetype = 2 ;
armada_paladin.bos:            return(corpsetype);
armada_paladin.bos:            corpsetype = 3 ;
armada_paladin.bos:            return(corpsetype);
armada_paladin.bos:    corpsetype = 3 ;
armada_paladin.bos:    return corpsetype;
Binary file armada_paladin.cob matches
armada_constructionship.bos:      set INBUILDSTANCE to 0;
armada_constructionship.bos:SetDirection(heading)
armada_constructionship.bos:      set-signal-mask SIG_MOVE;
armada_constructionship.bos:      set INBUILDSTANCE to 1;
armada_constructionship.bos:      set-signal-mask SIG_BUILD;
armada_constructionship.bos:      set-signal-mask 0;
armada_constructionship.bos:Killed(severity, corpsetype)
armada_constructionship.bos:              corpsetype = 1 ;
armada_constructionship.bos:              return(corpsetype);
armada_constructionship.bos:              corpsetype = 2 ;
armada_constructionship.bos:              return(corpsetype);
armada_constructionship.bos:              corpsetype = 3 ;
armada_constructionship.bos:              return(corpsetype);
armada_constructionship.bos:      corpsetype = 3 ;
armada_constructionship.bos:      return corpsetype;
Binary file armada_constructionship.cob matches
armada_constructionseaplane.bos:     set-signal-mask SIG_MOVE;
armada_constructionseaplane.bos:     set INBUILDSTANCE to 1;
armada_constructionseaplane.bos:     set INBUILDSTANCE to 0;
armada_constructionseaplane.bos:Killed(severity, corpsetype)
armada_constructionseaplane.bos:     corpsetype = 1 ;
armada_constructionseaplane.bos:     return(corpsetype);
armada_constructionseaplane.bos:     corpsetype = 2 ;
armada_constructionseaplane.bos:     return(corpsetype);
armada_constructionseaplane.bos:     corpsetype = 3 ;
armada_constructionseaplane.bos:     return(corpsetype);
armada_constructionseaplane.bos:     corpsetype = 3 ;
armada_constructionseaplane.bos:     return corpsetype;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 1;
armada_constructionvehicle.bos:      set-signal-mask SIG_BUILD;
armada_constructionvehicle.bos:      set-signal-mask 0;
armada_constructionvehicle.bos:Killed(severity, corpsetype)
armada_constructionvehicle.bos:              corpsetype = 1 ;
armada_constructionvehicle.bos:              return(corpsetype);
armada_constructionvehicle.bos:              corpsetype = 2 ;
armada_constructionvehicle.bos:              return(corpsetype);
armada_constructionvehicle.bos:              corpsetype = 3 ;
armada_constructionvehicle.bos:              return(corpsetype);
armada_constructionvehicle.bos:      corpsetype = 3 ;
armada_constructionvehicle.bos:      return corpsetype;
armada_dolphin.bos:SetDirection(heading)
armada_dolphin.bos:SetMaxReloadTime(Func_Var_1)
armada_dolphin.bos:SetStunned(State)
armada_dolphin.bos:  set-signal-mask SIG_MOVE;
armada_dolphin.bos:  set-signal-mask SIG_AIM;
armada_dolphin.bos:  set-signal-mask SIG_AIM_2;
armada_dolphin.bos:Killed(severity, corpsetype)
armada_dolphin.bos:          corpsetype = 1 ;
armada_dolphin.bos:          return(corpsetype);
armada_dolphin.bos:          corpsetype = 2 ;
armada_dolphin.bos:          return(corpsetype);
armada_dolphin.bos:          corpsetype = 3 ;
armada_dolphin.bos:          return(corpsetype);
armada_dolphin.bos:  corpsetype = 3 ;
armada_dolphin.bos:  return corpsetype;
Binary file armada_dolphin.cob matches
armada_decoycommander.lua:   Spring.SetUnitNanoPieces( unitID, {nano} )
armada_decoycommander.lua:   SetSignalMask(SIG_AIM)
armada_decoycommander.lua:Spring.SetUnitNanoPieces( unitID, {nano} )
armada_decoycommander.lua:   SetUnitValue(COB.INBUILDSTANCE, 1)
armada_decoycommander.lua:   SetUnitValue(COB.INBUILDSTANCE, 0)
armada_decoycommander.lua:   -- reset parts
armada_decoyfusionreactor.bos:      set ARMORED to 1;
armada_decoyfusionreactor.bos:      set ARMORED to 0;
armada_decoyfusionreactor.bos:Killed(severity, corpsetype)
armada_decoyfusionreactor.bos:              corpsetype = 1;
armada_decoyfusionreactor.bos:              return (corpsetype);
armada_decoyfusionreactor.bos:              corpsetype = 2;
armada_decoyfusionreactor.bos:              return (corpsetype);
armada_decoyfusionreactor.bos:              corpsetype = 3;
armada_decoyfusionreactor.bos:              return (corpsetype);
armada_decoyfusionreactor.bos:      corpsetype = 3;
armada_decoyfusionreactor.bos:      return (corpsetype);
armada_abductor.bos:Killed(severity, corpsetype)
armada_abductor.bos:            corpsetype = 1;
armada_abductor.bos:            return (corpsetype);
armada_abductor.bos:            corpsetype = 2;
armada_abductor.bos:            return (corpsetype);
armada_abductor.bos:            corpsetype = 3;
armada_abductor.bos:            return (corpsetype);
armada_abductor.bos:    corpsetype = 3;
armada_abductor.bos:    return corpsetype;
armada_anemone.bos:      set-signal-mask SIG_AIM;
armada_anemone.bos:Killed(severity, corpsetype)
armada_anemone.bos:              corpsetype = 1 ;
armada_anemone.bos:              return(corpsetype);
armada_anemone.bos:              corpsetype = 2 ;
armada_anemone.bos:              return(corpsetype);
armada_anemone.bos:              corpsetype = 3 ;
armada_anemone.bos:              return(corpsetype);
armada_anemone.bos:      corpsetype = 3 ;
armada_anemone.bos:      return corpsetype;
armada_paralyzer.bos:SetMaxReloadTime(Func_Var_1)
armada_paralyzer.bos:     set-signal-mask 0;
armada_paralyzer.bos:SetStunned(State)
armada_paralyzer.bos:     set-signal-mask SIG_AIM;
armada_paralyzer.bos:Killed(severity, corpsetype)
armada_paralyzer.bos:             corpsetype = 1 ;
armada_paralyzer.bos:             return(corpsetype);
armada_paralyzer.bos:             corpsetype = 2 ;
armada_paralyzer.bos:             return(corpsetype);
armada_paralyzer.bos:             corpsetype = 3 ;
armada_paralyzer.bos:             return(corpsetype);
armada_paralyzer.bos:     corpsetype = 3 ;
armada_paralyzer.bos:     return corpsetype;
Binary file armada_paralyzer.cob matches
armada_epoch.bos:SetDirection(heading)
armada_epoch.bos:   set ARMORED to 1;
armada_epoch.bos:SetMaxReloadTime(Func_Var_1)
armada_epoch.bos:SetStunned(State)
armada_epoch.bos:   set-signal-mask SIG_MOVE;
armada_epoch.bos:   set-signal-mask 2;
armada_epoch.bos:   set-signal-mask 4;
armada_epoch.bos:   set-signal-mask 8;
armada_epoch.bos:   set-signal-mask 16;
armada_epoch.bos:   set-signal-mask 32;
armada_epoch.bos:   set-signal-mask 64;
armada_epoch.bos:   set-signal-mask 128;
armada_epoch.bos:Killed(severity, corpsetype)
armada_epoch.bos:           corpsetype = 1 ;
armada_epoch.bos:           return(corpsetype);
armada_epoch.bos:           corpsetype = 2 ;
armada_epoch.bos:           return(corpsetype);
armada_epoch.bos:           corpsetype = 3 ;
armada_epoch.bos:           return(corpsetype);
armada_epoch.bos:   corpsetype = 3 ;
armada_epoch.bos:   return corpsetype;
Binary file armada_epoch.cob matches
armada_energystorage.bos:Killed(severity, corpsetype)
armada_energystorage.bos:           corpsetype = 1 ;
armada_energystorage.bos:           return(corpsetype);
armada_energystorage.bos:           corpsetype = 2 ;
armada_energystorage.bos:           return(corpsetype);
armada_energystorage.bos:           corpsetype = 3 ;
armada_energystorage.bos:           return(corpsetype);
armada_energystorage.bos:   corpsetype = 3 ;
armada_energystorage.bos:   return corpsetype;
armada_beholder.bos:Killed(severity, corpsetype)
armada_beholder.bos:            corpsetype = 1 ;
armada_beholder.bos:            return(corpsetype);
armada_beholder.bos:            corpsetype = 2 ;
armada_beholder.bos:            return(corpsetype);
armada_beholder.bos:            corpsetype = 3 ;
armada_beholder.bos:            return(corpsetype);
armada_beholder.bos:    corpsetype = 3 ;
armada_beholder.bos:    return corpsetype;
armada_butler.bos:    set INBUILDSTANCE to 0;
armada_butler.bos:    set-signal-mask SIG_BUILD;
armada_butler.bos:    set INBUILDSTANCE to 1;
armada_butler.bos:    set-signal-mask SIG_BUILD;
armada_butler.bos:Killed(severity, corpsetype)
armada_butler.bos:            corpsetype = 1 ;
armada_butler.bos:            return(corpsetype);
armada_butler.bos:            corpsetype = 2 ;
armada_butler.bos:            return(corpsetype);
armada_butler.bos:            corpsetype = 3 ;
armada_butler.bos:            return(corpsetype);
armada_butler.bos:    corpsetype = 3 ;
armada_butler.bos:    return corpsetype;
armada_sprinter.bos:SetMaxReloadTime(Func_Var_1)
armada_sprinter.bos:SetStunned(State)
armada_sprinter.bos:    set-signal-mask SIG_AIM;
armada_sprinter.bos:Killed(severity, corpsetype)
armada_sprinter.bos:            corpsetype = 1 ;
armada_sprinter.bos:            return(corpsetype);
armada_sprinter.bos:            corpsetype = 2 ;
armada_sprinter.bos:            return(corpsetype);
armada_sprinter.bos:            corpsetype = 3 ;
armada_sprinter.bos:            return(corpsetype);
armada_sprinter.bos:    corpsetype = 3 ;
armada_sprinter.bos:    return corpsetype;
Binary file armada_sprinter.cob matches
armada_navalpinpointer.bos:Killed(severity, corpsetype)
armada_navalpinpointer.bos:            corpsetype = 1 ;
armada_navalpinpointer.bos:            return(corpsetype);
armada_navalpinpointer.bos:            corpsetype = 2 ;
armada_navalpinpointer.bos:            return(corpsetype);
armada_navalpinpointer.bos:            corpsetype = 3 ;
armada_navalpinpointer.bos:            return(corpsetype);
armada_navalpinpointer.bos:    corpsetype = 3 ;
armada_navalpinpointer.bos:    return corpsetype;
armada_rover.bos:     set-signal-mask SIG_MOVE;
armada_rover.bos:SetMaxReloadTime(Func_Var_1)
armada_rover.bos:SetStunned(State)
armada_rover.bos:     set-signal-mask SIG_AIM;
armada_rover.bos:Killed(severity, corpsetype)
armada_rover.bos:             corpsetype = 1 ;
armada_rover.bos:             return(corpsetype);
armada_rover.bos:             corpsetype = 2 ;
armada_rover.bos:             return(corpsetype);
armada_rover.bos:             corpsetype = 3 ;
armada_rover.bos:             return(corpsetype);
armada_rover.bos:     corpsetype = 3 ;
armada_rover.bos:     return corpsetype;
Binary file armada_rover.cob matches
armada_fatboy.bos:    //set-signal-mask SIG_WALK;
armada_fatboy.bos:SetMaxReloadTime(Func_Var_1)
armada_fatboy.bos:SetStunned(State)
armada_fatboy.bos:    set-signal-mask SIG_AIM;
armada_fatboy.bos:Killed(severity, corpsetype)
armada_fatboy.bos:            corpsetype = 1 ;
armada_fatboy.bos:            return(corpsetype);
armada_fatboy.bos:            corpsetype = 2 ;
armada_fatboy.bos:            return(corpsetype);
armada_fatboy.bos:            corpsetype = 3 ;
armada_fatboy.bos:            return(corpsetype);
armada_fatboy.bos:    corpsetype = 3 ;
armada_fatboy.bos:    return corpsetype;
Binary file armada_fatboy.cob matches
armada_ferret.bos:  set ARMORED to 0;
armada_ferret.bos:  set ARMORED to 1;
armada_ferret.bos:  set-signal-mask 0;
armada_ferret.bos:SetStunned(State)
armada_ferret.bos:  set-signal-mask SIG_AIM;
armada_ferret.bos:SetMaxReloadTime(Func_Var_1)
armada_ferret.bos:  set-signal-mask SIG_AIM;
armada_ferret.bos:Killed(severity, corpsetype)
armada_ferret.bos:          corpsetype = 1 ;
armada_ferret.bos:          return(corpsetype);
armada_ferret.bos:          corpsetype = 2 ;
armada_ferret.bos:          return(corpsetype);
armada_ferret.bos:          corpsetype = 3 ;
armada_ferret.bos:          return(corpsetype);
armada_ferret.bos:  corpsetype = 3 ;
armada_ferret.bos:  return corpsetype;
Binary file armada_ferret.cob matches
armada_navalarbalest.bos:SetStunned(State)
armada_navalarbalest.bos:   set-signal-mask SIG_AIM;
armada_navalarbalest.bos:Killed(severity, corpsetype)
armada_navalarbalest.bos:           corpsetype = 1 ;
armada_navalarbalest.bos:           return(corpsetype);
armada_navalarbalest.bos:           corpsetype = 2 ;
armada_navalarbalest.bos:           return(corpsetype);
armada_navalarbalest.bos:           corpsetype = 3 ;
armada_navalarbalest.bos:           return(corpsetype);
armada_navalarbalest.bos:   corpsetype = 3 ;
armada_navalarbalest.bos:   return corpsetype;
Binary file armada_navalarbalest.cob matches
armada_aurora.bos:Killed(severity, corpsetype)
armada_aurora.bos:           corpsetype = 1 ;
armada_aurora.bos:           return(corpsetype);
armada_aurora.bos:           corpsetype = 2 ;
armada_aurora.bos:           return(corpsetype);
armada_aurora.bos:           corpsetype = 3 ;
armada_aurora.bos:           return(corpsetype);
armada_aurora.bos:   corpsetype = 3 ;
armada_aurora.bos:   return corpsetype;
armada_manta.bos:    set-signal-mask SIG_AIM;
armada_manta.bos:Killed(severity, corpsetype)
armada_manta.bos:            corpsetype = 1 ;
armada_manta.bos:            return(corpsetype);
armada_manta.bos:            corpsetype = 2 ;
armada_manta.bos:            return(corpsetype);
armada_manta.bos:            corpsetype = 3 ;
armada_manta.bos:            return(corpsetype);
armada_manta.bos:    corpsetype = 3 ;
armada_manta.bos:    return corpsetype;
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 1;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 0;
armada_navalhovercraftplatform.bos:     set-signal-mask SIG_ACTIVATE;
armada_navalhovercraftplatform.bos:     set-signal-mask 0;
armada_navalhovercraftplatform.bos:Killed(severity, corpsetype)
armada_navalhovercraftplatform.bos:             corpsetype = 1 ;
armada_navalhovercraftplatform.bos:             return(corpsetype);
armada_navalhovercraftplatform.bos:             corpsetype = 2 ;
armada_navalhovercraftplatform.bos:             return(corpsetype);
armada_navalhovercraftplatform.bos:             corpsetype = 3 ;
armada_navalhovercraftplatform.bos:             return(corpsetype);
armada_navalhovercraftplatform.bos:     corpsetype = 3 ;
armada_navalhovercraftplatform.bos:     return corpsetype;
armada_hound.bos:    //set-signal-mask SIG_WALK;
armada_hound.bos:    set-signal-mask 0;
armada_hound.bos:SetStunned(State)
armada_hound.bos:    set-signal-mask SIG_AIM;
armada_hound.bos:SetMaxReloadTime(Func_Var_1)
armada_hound.bos:Killed(severity, corpsetype)
armada_hound.bos:            corpsetype = 1;
armada_hound.bos:            return (corpsetype);
armada_hound.bos:            corpsetype = 2;
armada_hound.bos:            return (corpsetype);
armada_hound.bos:            corpsetype = 3;
armada_hound.bos:            return (corpsetype);
armada_hound.bos:    corpsetype = 3;
armada_hound.bos:    return corpsetype;
Binary file armada_hound.cob matches
armada_falcon.bos:Killed(severity, corpsetype)
armada_falcon.bos:             corpsetype = 1 ;
armada_falcon.bos:             return(corpsetype);
armada_falcon.bos:             corpsetype = 2 ;
armada_falcon.bos:             return(corpsetype);
armada_falcon.bos:             corpsetype = 3 ;
armada_falcon.bos:             return(corpsetype);
armada_falcon.bos:     corpsetype = 3 ;
armada_falcon.bos:     return corpsetype;
armada_arbalest.bos:SetStunned(State)
armada_arbalest.bos:    set-signal-mask SIG_AIM;
armada_arbalest.bos:Killed(severity, corpsetype)
armada_arbalest.bos:            corpsetype = 1 ;
armada_arbalest.bos:            return(corpsetype);
armada_arbalest.bos:            corpsetype = 2 ;
armada_arbalest.bos:            return(corpsetype);
armada_arbalest.bos:            corpsetype = 3 ;
armada_arbalest.bos:            return(corpsetype);
armada_arbalest.bos:    corpsetype = 3 ;
armada_arbalest.bos:    return corpsetype;
Binary file armada_arbalest.cob matches
armada_blitz.bos:SetMaxReloadTime(Func_Var_1)
armada_blitz.bos:SetStunned(State)
armada_blitz.bos:   set-signal-mask SIG_AIM;
armada_blitz.bos:Killed(severity, corpsetype)
armada_blitz.bos:           corpsetype = 1 ;
armada_blitz.bos:           return(corpsetype);
armada_blitz.bos:           corpsetype = 2 ;
armada_blitz.bos:           return(corpsetype);
armada_blitz.bos:           corpsetype = 3 ;
armada_blitz.bos:           return(corpsetype);
armada_blitz.bos:   corpsetype = 3 ;
armada_blitz.bos:   return corpsetype;
Binary file armada_blitz.cob matches
armada_tick.bos:    set-signal-mask SIG_WALK;
armada_tick.bos:SetMaxReloadTime(Func_Var_1)
armada_tick.bos:SetStunned(State)
armada_tick.bos:    set-signal-mask SIG_AIM;
armada_tick.bos:Killed(severity, corpsetype)
armada_tick.bos:            corpsetype = 1 ;
armada_tick.bos:            return(corpsetype);
armada_tick.bos:            corpsetype = 2 ;
armada_tick.bos:            return(corpsetype);
armada_tick.bos:            corpsetype = 3 ;
armada_tick.bos:            return(corpsetype);
armada_tick.bos:    corpsetype = 3 ;
armada_tick.bos:    return corpsetype;
Binary file armada_tick.cob matches
armada_navalenergyconverter.bos:Killed(severity, corpsetype)
armada_navalenergyconverter.bos:            corpsetype = 1 ;
armada_navalenergyconverter.bos:            return(corpsetype);
armada_navalenergyconverter.bos:            corpsetype = 2 ;
armada_navalenergyconverter.bos:            return(corpsetype);
armada_navalenergyconverter.bos:            corpsetype = 3 ;
armada_navalenergyconverter.bos:            return(corpsetype);
armada_navalenergyconverter.bos:    corpsetype = 3 ;
armada_navalenergyconverter.bos:    return corpsetype;
armada_navalradarsonar.bos:Killed(severity, corpsetype)
armada_navalradarsonar.bos:            corpsetype = 1 ;
armada_navalradarsonar.bos:            return(corpsetype);
armada_navalradarsonar.bos:            corpsetype = 2 ;
armada_navalradarsonar.bos:            return(corpsetype);
armada_navalradarsonar.bos:            corpsetype = 3 ;
armada_navalradarsonar.bos:            return(corpsetype);
armada_navalradarsonar.bos:    corpsetype = 3 ;
armada_navalradarsonar.bos:    return corpsetype;
armada_scumbag.bos:   set-signal-mask SIG_AIM;
armada_scumbag.bos:Killed(severity, corpsetype)
armada_scumbag.bos:           corpsetype = 1;
armada_scumbag.bos:           return (corpsetype);
armada_scumbag.bos:           corpsetype = 2;
armada_scumbag.bos:           return (corpsetype);
armada_scumbag.bos:           corpsetype = 3;
armada_scumbag.bos:           return (corpsetype);
armada_scumbag.bos:   corpsetype = 3;
armada_scumbag.bos:   return (corpsetype);
armada_navalnettle.bos:SetStunned(State)
armada_navalnettle.bos:     set-signal-mask SIG_AIM;
armada_navalnettle.bos:Killed(severity, corpsetype)
armada_navalnettle.bos:             corpsetype = 1 ;
armada_navalnettle.bos:             return(corpsetype);
armada_navalnettle.bos:             corpsetype = 2 ;
armada_navalnettle.bos:             return(corpsetype);
armada_navalnettle.bos:             corpsetype = 3 ;
armada_navalnettle.bos:             return(corpsetype);
armada_navalnettle.bos:     corpsetype = 3 ;
armada_navalnettle.bos:     return corpsetype;
Binary file armada_navalnettle.cob matches
armada_fusionreactor.bos:     set ARMORED to 1;
armada_fusionreactor.bos:     set ARMORED to 0;
armada_fusionreactor.bos:Killed(severity, corpsetype)
armada_fusionreactor.bos:             corpsetype = 1 ;
armada_fusionreactor.bos:             return(corpsetype);
armada_fusionreactor.bos:             corpsetype = 2 ;
armada_fusionreactor.bos:             return(corpsetype);
armada_fusionreactor.bos:             corpsetype = 3 ;
armada_fusionreactor.bos:             return(corpsetype);
armada_fusionreactor.bos:     corpsetype = 3 ;
armada_fusionreactor.bos:     return corpsetype;
armada_keeper.bos:Killed(severity, corpsetype)
armada_keeper.bos:            corpsetype = 1 ;
armada_keeper.bos:            return(corpsetype);
armada_keeper.bos:            corpsetype = 2 ;
armada_keeper.bos:            return(corpsetype);
armada_keeper.bos:            corpsetype = 3 ;
armada_keeper.bos:            return(corpsetype);
armada_keeper.bos:    corpsetype = 3 ;
armada_keeper.bos:    return corpsetype;
armada_geothermalpowerplant.bos:Killed(severity, corpsetype)
armada_geothermalpowerplant.bos:             corpsetype = 1 ;
armada_geothermalpowerplant.bos:             return(corpsetype);
armada_geothermalpowerplant.bos:             corpsetype = 2 ;
armada_geothermalpowerplant.bos:             return(corpsetype);
armada_geothermalpowerplant.bos:             corpsetype = 3 ;
armada_geothermalpowerplant.bos:             return(corpsetype);
armada_geothermalpowerplant.bos:     corpsetype = 3 ;
armada_geothermalpowerplant.bos:     return corpsetype;
armada_prude.bos:     set-signal-mask 2;
armada_prude.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 1;
armada_prude.bos:Killed(severity, corpsetype)
armada_prude.bos:             corpsetype = 1 ;
armada_prude.bos:             return(corpsetype);
armada_prude.bos:             corpsetype = 2 ;
armada_prude.bos:             return(corpsetype);
armada_prude.bos:             corpsetype = 3 ;
armada_prude.bos:             return(corpsetype);
armada_prude.bos:     corpsetype = 3 ;
armada_prude.bos:     return corpsetype;
armada_gunplatform.bos:SetMaxReloadTime(Func_Var_1)
armada_gunplatform.bos:SetStunned(State)
armada_gunplatform.bos:   set-signal-mask SIG_AIM;
armada_gunplatform.bos:Killed(severity, corpsetype)
armada_gunplatform.bos:           corpsetype = 1 ;
armada_gunplatform.bos:           return(corpsetype);
armada_gunplatform.bos:           corpsetype = 2 ;
armada_gunplatform.bos:           return(corpsetype);
armada_gunplatform.bos:           corpsetype = 3 ;
armada_gunplatform.bos:           return(corpsetype);
armada_gunplatform.bos:   corpsetype = 3 ;
armada_gunplatform.bos:   return corpsetype;
Binary file armada_gunplatform.cob matches
armada_gremlin.bos:SetMaxReloadTime(Func_Var_1)
armada_gremlin.bos: set-signal-mask 0;
armada_gremlin.bos:SetStunned(State)
armada_gremlin.bos: set-signal-mask SIG_AIM;
armada_gremlin.bos:Killed(severity, corpsetype)
armada_gremlin.bos:         corpsetype = 1 ;
armada_gremlin.bos:         return(corpsetype);
armada_gremlin.bos:         corpsetype = 2 ;
armada_gremlin.bos:         return(corpsetype);
armada_gremlin.bos:         corpsetype = 3 ;
armada_gremlin.bos:         return(corpsetype);
armada_gremlin.bos: corpsetype = 3 ;
armada_gremlin.bos: return corpsetype;
Binary file armada_gremlin.cob matches
armada_gauntlet.bos:Killed(severity, corpsetype)
armada_gauntlet.bos:           corpsetype = 1 ;
armada_gauntlet.bos:           return(corpsetype);
armada_gauntlet.bos:           corpsetype = 2 ;
armada_gauntlet.bos:           return(corpsetype);
armada_gauntlet.bos:           corpsetype = 3 ;
armada_gauntlet.bos:           return(corpsetype);
armada_gauntlet.bos:   corpsetype = 3 ;
armada_gauntlet.bos:   return corpsetype;
armada_mace.bos:     set-signal-mask SIG_WALK;
armada_mace.bos:SetMaxReloadTime(Func_Var_1)
armada_mace.bos:    set-signal-mask 0;
armada_mace.bos:SetStunned(State)
armada_mace.bos:     set-signal-mask SIG_AIM;
armada_mace.bos:Killed(severity, corpsetype)
armada_mace.bos:             corpsetype = 1 ;
armada_mace.bos:             return(corpsetype);
armada_mace.bos:             corpsetype = 2 ;
armada_mace.bos:             return(corpsetype);
armada_mace.bos:             corpsetype = 3 ;
armada_mace.bos:             return(corpsetype);
armada_mace.bos:     corpsetype = 3 ;
armada_mace.bos:     return corpsetype;
Binary file armada_mace.cob matches
armada_highwind.bos:Killed(severity, corpsetype)
armada_highwind.bos:            corpsetype = 1 ;
armada_highwind.bos:            return(corpsetype);
armada_highwind.bos:            corpsetype = 2 ;
armada_highwind.bos:            return(corpsetype);
armada_highwind.bos:            corpsetype = 3 ;
armada_highwind.bos:            return(corpsetype);
armada_highwind.bos:    corpsetype = 3 ;
armada_highwind.bos:    return corpsetype;
armada_overwatch.bos:     set-signal-mask SIG_AIM;
armada_overwatch.bos:Killed(severity, corpsetype)
armada_overwatch.bos:             corpsetype = 1 ;
armada_overwatch.bos:             return(corpsetype);
armada_overwatch.bos:             corpsetype = 2 ;
armada_overwatch.bos:             return(corpsetype);
armada_overwatch.bos:             corpsetype = 3 ;
armada_overwatch.bos:             return(corpsetype);
armada_overwatch.bos:     corpsetype = 3 ;
armada_overwatch.bos:     return corpsetype;
armada_hovercraftplatform.bos:      set YARD_OPEN to 1;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 1;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set YARD_OPEN to 0;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 0;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 1;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 0;
armada_hovercraftplatform.bos:      set-signal-mask SIG_ACTIVATE;
armada_hovercraftplatform.bos:      set-signal-mask 0;
armada_hovercraftplatform.bos:Killed(severity, corpsetype)
armada_hovercraftplatform.bos:              corpsetype = 1 ;
armada_hovercraftplatform.bos:              return(corpsetype);
armada_hovercraftplatform.bos:              corpsetype = 2 ;
armada_hovercraftplatform.bos:              return(corpsetype);
armada_hovercraftplatform.bos:              corpsetype = 3 ;
armada_hovercraftplatform.bos:              return(corpsetype);
armada_hovercraftplatform.bos:      corpsetype = 3 ;
armada_hovercraftplatform.bos:      return corpsetype;
armada_umbra.bos:             // Set values for tilt
armada_umbra.bos:             // Set Values for differential system
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set-signal-mask 2;
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 100;
armada_umbra.bos:Killed(severity, corpsetype)
armada_umbra.bos:             corpsetype = 1 ;
armada_umbra.bos:             return(corpsetype);
armada_umbra.bos:             corpsetype = 2 ;
armada_umbra.bos:             return(corpsetype);
armada_umbra.bos:             corpsetype = 3 ;
armada_umbra.bos:             return(corpsetype);
armada_umbra.bos:     corpsetype = 3 ;
armada_umbra.bos:     return corpsetype;
armada_sneakypete.bos:Killed(severity, corpsetype)
armada_sneakypete.bos:            corpsetype = 1 ;
armada_sneakypete.bos:            return(corpsetype);
armada_sneakypete.bos:            corpsetype = 2 ;
armada_sneakypete.bos:            return(corpsetype);
armada_sneakypete.bos:            corpsetype = 3 ;
armada_sneakypete.bos:            return(corpsetype);
armada_sneakypete.bos:    corpsetype = 3 ;
armada_sneakypete.bos:    return corpsetype;
armada_janus.bos:SetMaxReloadTime(Func_Var_1)
armada_janus.bos:SetStunned(State)
armada_janus.bos:   set-signal-mask SIG_AIM;
armada_janus.bos:   set-signal-mask SIG_AIM_2;
armada_janus.bos:Killed(severity, corpsetype)
armada_janus.bos:           corpsetype = 1 ;
armada_janus.bos:           return(corpsetype);
armada_janus.bos:           corpsetype = 2 ;
armada_janus.bos:           return(corpsetype);
armada_janus.bos:           corpsetype = 3 ;
armada_janus.bos:           return(corpsetype);
armada_janus.bos:   corpsetype = 3 ;
armada_janus.bos:   return corpsetype;
Binary file armada_janus.cob matches
armada_crossbow.bos:    set-signal-mask SIG_WALK;
armada_crossbow.bos:SetMaxReloadTime(Func_Var_1)
armada_crossbow.bos:    set-signal-mask 0;
armada_crossbow.bos:SetStunned(State)
armada_crossbow.bos:    set-signal-mask SIG_AIM_3;
armada_crossbow.bos:Killed(severity, corpsetype)
armada_crossbow.bos:            corpsetype = 1 ;
armada_crossbow.bos:            return(corpsetype);
armada_crossbow.bos:            corpsetype = 2 ;
armada_crossbow.bos:            return(corpsetype);
armada_crossbow.bos:            corpsetype = 3 ;
armada_crossbow.bos:            return(corpsetype);
armada_crossbow.bos:    corpsetype = 3 ;
armada_crossbow.bos:    return corpsetype;
Binary file armada_crossbow.cob matches
armada_juno.bos:SetMaxReloadTime(Func_Var_1)
armada_juno.bos:    set-signal-mask 0;
armada_juno.bos:SetStunned(State)
armada_juno.bos:    set-signal-mask SIG_AIM;
armada_juno.bos:Killed(severity, corpsetype)
armada_juno.bos:            corpsetype = 1 ;
armada_juno.bos:            return(corpsetype);
armada_juno.bos:            corpsetype = 2 ;
armada_juno.bos:            return(corpsetype);
armada_juno.bos:            corpsetype = 3 ;
armada_juno.bos:            return(corpsetype);
armada_juno.bos:    corpsetype = 3 ;
armada_juno.bos:    return corpsetype;
Binary file armada_juno.cob matches
armada_banshee.bos:SetStunned(State)
armada_banshee.bos:     set-signal-mask SIG_MOVE;
armada_banshee.bos:     set-signal-mask SIG_MOVE;
armada_banshee.bos:     set-signal-mask SIG_MOVE;
armada_banshee.bos:     set-signal-mask SIG_MOVE;
armada_banshee.bos:     set-signal-mask SIG_MOVE;
armada_banshee.bos:     set-signal-mask SIG_MOVE;
armada_banshee.bos:Killed(severity, corpsetype)
armada_banshee.bos:             corpsetype = 1 ;
armada_banshee.bos:             return(corpsetype);
armada_banshee.bos:             corpsetype = 2 ;
armada_banshee.bos:             return(corpsetype);
armada_banshee.bos:             corpsetype = 3 ;
armada_banshee.bos:             return(corpsetype);
armada_banshee.bos:     corpsetype = 3 ;
armada_banshee.bos:    return(corpsetype);
armada_banshee.bos:     return corpsetype;
Binary file armada_banshee.cob matches
armada_botlab.bos:     set YARD_OPEN to 1;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 1;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set YARD_OPEN to 0;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 0;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set INBUILDSTANCE to 1;
armada_botlab.bos:     set INBUILDSTANCE to 0;
armada_botlab.bos:     set-signal-mask SIG_ACTIVATE;
armada_botlab.bos:     set-signal-mask 0;
armada_botlab.bos:Killed(severity, corpsetype)
armada_botlab.bos:             corpsetype = 1 ;
armada_botlab.bos:             return(corpsetype);
armada_botlab.bos:             corpsetype = 2 ;
armada_botlab.bos:             return(corpsetype);
armada_botlab.bos:             corpsetype = 3 ;
armada_botlab.bos:             return(corpsetype);
armada_botlab.bos:     corpsetype = 3 ;
armada_botlab.bos:     return corpsetype;
armada_cormorant.bos:Killed(severity, corpsetype)
armada_cormorant.bos:           corpsetype = 1 ;
armada_cormorant.bos:           return(corpsetype);
armada_cormorant.bos:           corpsetype = 2 ;
armada_cormorant.bos:           return(corpsetype);
armada_cormorant.bos:           corpsetype = 3 ;
armada_cormorant.bos:           return(corpsetype);
armada_cormorant.bos:   corpsetype = 3 ;
armada_cormorant.bos:   return corpsetype;
armada_jaguar.bos:SetMaxReloadTime(Func_Var_1)
armada_jaguar.bos:   set-signal-mask 0;
armada_jaguar.bos:SetStunned(State)
armada_jaguar.bos:   set-signal-mask SIG_AIM;
armada_jaguar.bos:   set-signal-mask SIG_AIM_3;
armada_jaguar.bos:Killed(severity, corpsetype)
armada_jaguar.bos:           corpsetype = 1 ;
armada_jaguar.bos:           return(corpsetype);
armada_jaguar.bos:           corpsetype = 2 ;
armada_jaguar.bos:           return(corpsetype);
armada_jaguar.bos:           corpsetype = 3 ;
armada_jaguar.bos:           return(corpsetype);
armada_jaguar.bos:   corpsetype = 3 ;
armada_jaguar.bos:   return corpsetype;
Binary file armada_jaguar.cob matches
armada_liche.bos:Killed(severity, corpsetype)
armada_liche.bos:           corpsetype = 1;
armada_liche.bos:           return (corpsetype);
armada_liche.bos:           corpsetype = 2;
armada_liche.bos:           return (corpsetype);
armada_liche.bos:           corpsetype = 3;
armada_liche.bos:           return (corpsetype);
armada_liche.bos:   corpsetype = 3;
armada_liche.bos:   return corpsetype;
armada_sentry.bos:     set-signal-mask SIG_AIM;
armada_sentry.bos:Killed(severity, corpsetype)
armada_sentry.bos:             corpsetype = 1 ;
armada_sentry.bos:             return(corpsetype);
armada_sentry.bos:             corpsetype = 2 ;
armada_sentry.bos:             return(corpsetype);
armada_sentry.bos:             corpsetype = 3 ;
armada_sentry.bos:             return(corpsetype);
armada_sentry.bos:     corpsetype = 3 ;
armada_sentry.bos:     return corpsetype;
armada_lunkhead.bos:     set-signal-mask SIG_MOVE;
armada_lunkhead.bos:setSFXoccupy(state)
armada_lunkhead.bos:SetMaxReloadTime(Func_Var_1)
armada_lunkhead.bos:SetStunned(State)
armada_lunkhead.bos:     set-signal-mask SIG_AIM;
armada_lunkhead.bos:     set-signal-mask SIG_AIM_2;
armada_lunkhead.bos:Killed(severity, corpsetype)
armada_lunkhead.bos:                     corpsetype = 2;
armada_lunkhead.bos:                     return (corpsetype);
armada_lunkhead.bos:             corpsetype = 3;
armada_lunkhead.bos:             return (corpsetype);
armada_lunkhead.bos:                     corpsetype = 2;
armada_lunkhead.bos:                     return (corpsetype);
armada_lunkhead.bos:             corpsetype = 3;
armada_lunkhead.bos:             return (corpsetype);
armada_lunkhead.bos:             corpsetype = 1;
armada_lunkhead.bos:             return (corpsetype);
armada_lunkhead.bos:             corpsetype = 2;
armada_lunkhead.bos:             return (corpsetype);
armada_lunkhead.bos:             corpsetype = 3;
armada_lunkhead.bos:             return (corpsetype);
armada_lunkhead.bos:     corpsetype = 3;
armada_lunkhead.bos:     return (corpsetype);
Binary file armada_lunkhead.cob matches
armada_energyconverter.bos:Killed(severity, corpsetype)
armada_energyconverter.bos:            corpsetype = 1 ;
armada_energyconverter.bos:            return(corpsetype);
armada_energyconverter.bos:            corpsetype = 2 ;
armada_energyconverter.bos:            return(corpsetype);
armada_energyconverter.bos:            corpsetype = 3 ;
armada_energyconverter.bos:            return(corpsetype);
armada_energyconverter.bos:    corpsetype = 3 ;
armada_energyconverter.bos:    return corpsetype;
armada_starlight.bos:SetMaxReloadTime(Func_Var_1)
armada_starlight.bos:SetStunned(State)
armada_starlight.bos:   set-signal-mask SIG_AIM;
armada_starlight.bos:Killed(severity, corpsetype)
armada_starlight.bos:           corpsetype = 1 ;
armada_starlight.bos:           return(corpsetype);
armada_starlight.bos:           corpsetype = 2 ;
armada_starlight.bos:           return(corpsetype);
armada_starlight.bos:           corpsetype = 3 ;
armada_starlight.bos:           return(corpsetype);
armada_starlight.bos:   corpsetype = 3 ;
armada_starlight.bos:   return corpsetype;
Binary file armada_starlight.cob matches
armada_marauder.bos:SetMaxReloadTime(Func_Var_1)
armada_marauder.bos:SetStunned(State)
armada_marauder.bos:     set-signal-mask SIG_AIM;
armada_marauder.bos:Killed(severity, corpsetype)
armada_marauder.bos:             corpsetype = 1 ;
armada_marauder.bos:             return(corpsetype);
armada_marauder.bos:             corpsetype = 2 ;
armada_marauder.bos:             return(corpsetype);
armada_marauder.bos:             corpsetype = 3 ;
armada_marauder.bos:             return(corpsetype);
armada_marauder.bos:     corpsetype = 3 ;
armada_marauder.bos:     return corpsetype;
Binary file armada_marauder.cob matches
fgrep: armada_marauder_lus: Is a directory
armada_marauder_lus.lua:include("units/"..unitName.."_lus/setup.lua")
armada_marauder_lus.lua: InitialPiecesSetup()
armada_marauder_lus.lua: SetSignalMask(2)
armada_marauder_lus.lua: SetWantedAim(weaponID, heading, pitch)
armada_compass.bos:    set-signal-mask SIG_WALK; //you might need this
armada_compass.bos:    set-signal-mask SIG_ACTIVATE;
armada_compass.bos:    set-signal-mask SIG_ACTIVATE;
armada_compass.bos:SetStunned(State)
armada_compass.bos:Killed(severity, corpsetype)
armada_compass.bos:            corpsetype = 1 ;
armada_compass.bos:            return(corpsetype);
armada_compass.bos:            corpsetype = 2 ;
armada_compass.bos:            return(corpsetype);
armada_compass.bos:            corpsetype = 3 ;
armada_compass.bos:            return(corpsetype);
armada_compass.bos:    corpsetype = 3 ;
armada_compass.bos:    return corpsetype;
Binary file armada_compass.cob matches
armada_mauser.bos:SetMaxReloadTime(Func_Var_1)
armada_mauser.bos:SetStunned(State)
armada_mauser.bos:    set-signal-mask SIG_AIM;
armada_mauser.bos:Killed(severity, corpsetype)
armada_mauser.bos:            corpsetype = 1 ;
armada_mauser.bos:            return(corpsetype);
armada_mauser.bos:            corpsetype = 2 ;
armada_mauser.bos:            return(corpsetype);
armada_mauser.bos:            corpsetype = 3 ;
armada_mauser.bos:            return(corpsetype);
armada_mauser.bos:    corpsetype = 3 ;
armada_mauser.bos:    return corpsetype;
Binary file armada_mauser.cob matches
armada_gunslinger.bos:     //set-signal-mask SIG_WALK;
armada_gunslinger.bos:SetMaxReloadTime(Func_Var_1)
armada_gunslinger.bos:     set-signal-mask 0;
armada_gunslinger.bos:SetStunned(State)
armada_gunslinger.bos:     set-signal-mask SIG_AIM;
armada_gunslinger.bos:Killed(severity, corpsetype)
armada_gunslinger.bos:             corpsetype = 1 ;
armada_gunslinger.bos:             return(corpsetype);
armada_gunslinger.bos:             corpsetype = 2 ;
armada_gunslinger.bos:             return(corpsetype);
armada_gunslinger.bos:             corpsetype = 3 ;
armada_gunslinger.bos:             return(corpsetype);
armada_gunslinger.bos:     corpsetype = 3 ;
armada_gunslinger.bos:     return corpsetype;
Binary file armada_gunslinger.cob matches
armada_mercury.bos:SetStunned(State)
armada_mercury.bos: set-signal-mask SIG_AIM;
armada_mercury.bos: set DELAY_UNIT_VAR to 0;
armada_mercury.bos:Killed(severity, corpsetype)
armada_mercury.bos:         corpsetype = 1 ;
armada_mercury.bos:         return(corpsetype);
armada_mercury.bos:         corpsetype = 2 ;
armada_mercury.bos:         return(corpsetype);
armada_mercury.bos:         corpsetype = 3 ;
armada_mercury.bos:         return(corpsetype);
armada_mercury.bos: corpsetype = 3 ;
armada_mercury.bos: return corpsetype;
Binary file armada_mercury.cob matches
armada_ambassador.bos:    set ARMORED to 1;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:SetMaxReloadTime(Func_Var_1)
armada_ambassador.bos:    set-signal-mask 0;
armada_ambassador.bos:SetStunned(State)
armada_ambassador.bos:    set-signal-mask SIG_RESTORE;
armada_ambassador.bos:    set-signal-mask SIG_AIM;
armada_ambassador.bos:Killed(severity, corpsetype)
armada_ambassador.bos:            corpsetype = 1 ;
armada_ambassador.bos:            return(corpsetype);
armada_ambassador.bos:            corpsetype = 2 ;
armada_ambassador.bos:            return(corpsetype);
armada_ambassador.bos:            corpsetype = 3 ;
armada_ambassador.bos:            return(corpsetype);
armada_ambassador.bos:    corpsetype = 3 ;
armada_ambassador.bos:    return corpsetype;
Binary file armada_ambassador.cob matches
armada_metalextractor.bos:SetStunned(State)
armada_metalextractor.bos:SetSpeed(Func_Var_1)
armada_metalextractor.bos:Killed(severity, corpsetype)
armada_metalextractor.bos:             corpsetype = 1 ;
armada_metalextractor.bos:             return(corpsetype);
armada_metalextractor.bos:             corpsetype = 2 ;
armada_metalextractor.bos:             return(corpsetype);
armada_metalextractor.bos:             corpsetype = 3 ;
armada_metalextractor.bos:             return(corpsetype);
armada_metalextractor.bos:     corpsetype = 3 ;
armada_metalextractor.bos:     return corpsetype;
Binary file armada_metalextractor.cob matches
armada_possum.bos:              // Set values for tilt
armada_possum.bos:      set-signal-mask SIG_MOVE;
armada_possum.bos:setSFXoccupy(Func_Var_1)
armada_possum.bos:SetMaxReloadTime(Func_Var_1)
armada_possum.bos:      set-signal-mask 0;
armada_possum.bos:SetStunned(State)
armada_possum.bos:      set-signal-mask SIG_RESTORE;
armada_possum.bos:      set-signal-mask SIG_AIM;
armada_possum.bos:Killed(severity, corpsetype)
armada_possum.bos:              corpsetype = 1 ;
armada_possum.bos:              return(corpsetype);
armada_possum.bos:              corpsetype = 2 ;
armada_possum.bos:              return(corpsetype);
armada_possum.bos:              corpsetype = 3 ;
armada_possum.bos:              return(corpsetype);
armada_possum.bos:      corpsetype = 3 ;
armada_possum.bos:      return corpsetype;
Binary file armada_possum.cob matches
armada_voyager.bos:SetDirection(heading)
armada_voyager.bos:     set INBUILDSTANCE to 1;
armada_voyager.bos:     set INBUILDSTANCE to 0;
armada_voyager.bos:     set-signal-mask SIG_MOVE;
armada_voyager.bos:Killed(severity, corpsetype)
armada_voyager.bos:             corpsetype = 1 ;
armada_voyager.bos:             return(corpsetype);
armada_voyager.bos:             corpsetype = 2 ;
armada_voyager.bos:             return(corpsetype);
armada_voyager.bos:             corpsetype = 3 ;
armada_voyager.bos:             return(corpsetype);
armada_voyager.bos:     corpsetype = 3 ;
armada_voyager.bos:     return corpsetype;
Binary file armada_voyager.cob matches
armada_groundhog.bos:     set-signal-mask SIG_MOVE;
armada_groundhog.bos:     set INBUILDSTANCE to 1;
armada_groundhog.bos:     set-signal-mask SIG_BUILD;
armada_groundhog.bos:     set-signal-mask 0;
armada_groundhog.bos:     set INBUILDSTANCE to 0;
armada_groundhog.bos:Killed(severity, corpsetype)
armada_groundhog.bos:             corpsetype = 1 ;
armada_groundhog.bos:             return(corpsetype);
armada_groundhog.bos:             corpsetype = 2 ;
armada_groundhog.bos:             return(corpsetype);
armada_groundhog.bos:             corpsetype = 3 ;
armada_groundhog.bos:             return(corpsetype);
armada_groundhog.bos:     corpsetype = 3 ;
armada_groundhog.bos:     return corpsetype;
armada_advancedenergyconverter.bos:    set ARMORED to 0; //Not needed as MM in BAR have no damage modif
yer tag set
armada_advancedenergyconverter.bos:    set ARMORED to 1;
armada_advancedenergyconverter.bos:Killed(severity, corpsetype)
armada_advancedenergyconverter.bos:            corpsetype = 1 ;
armada_advancedenergyconverter.bos:            return(corpsetype);
armada_advancedenergyconverter.bos:            corpsetype = 2 ;
armada_advancedenergyconverter.bos:            return(corpsetype);
armada_advancedenergyconverter.bos:            corpsetype = 3 ;
armada_advancedenergyconverter.bos:            return(corpsetype);
armada_advancedenergyconverter.bos:    corpsetype = 3 ;
armada_advancedenergyconverter.bos:    return corpsetype;
armada_advancedmetalextractor.bos:SetStunned(State)
armada_advancedmetalextractor.bos:SetSpeed(Func_Var_1)
armada_advancedmetalextractor.bos:Killed(severity, corpsetype)
armada_advancedmetalextractor.bos:            corpsetype = 1 ;
armada_advancedmetalextractor.bos:            return(corpsetype);
armada_advancedmetalextractor.bos:            corpsetype = 2 ;
armada_advancedmetalextractor.bos:            return(corpsetype);
armada_advancedmetalextractor.bos:            corpsetype = 3 ;
armada_advancedmetalextractor.bos:            return(corpsetype);
armada_advancedmetalextractor.bos:    corpsetype = 3 ;
armada_advancedmetalextractor.bos:    return corpsetype;
Binary file armada_advancedmetalextractor.cob matches
armada_longbow.bos:SetDirection(heading)
armada_longbow.bos:SetMaxReloadTime(Func_Var_1)
armada_longbow.bos:SetStunned(State)
armada_longbow.bos:   set-signal-mask SIG_MOVE;
armada_longbow.bos:   set-signal-mask SIG_AIM;
armada_longbow.bos:   set-signal-mask SIG_AIM_3;
armada_longbow.bos:Killed(severity, corpsetype)
armada_longbow.bos:           corpsetype = 1 ;
armada_longbow.bos:           return(corpsetype);
armada_longbow.bos:           corpsetype = 2 ;
armada_longbow.bos:           return(corpsetype);
armada_longbow.bos:           corpsetype = 3 ;
armada_longbow.bos:           return(corpsetype);
armada_longbow.bos:   corpsetype = 3 ;
armada_longbow.bos:   return corpsetype;
Binary file armada_longbow.cob matches
armada_metalstorage.bos:Killed(severity, corpsetype)
armada_metalstorage.bos:           corpsetype = 1 ;
armada_metalstorage.bos:           return(corpsetype);
armada_metalstorage.bos:           corpsetype = 2 ;
armada_metalstorage.bos:           return(corpsetype);
armada_metalstorage.bos:           corpsetype = 3 ;
armada_metalstorage.bos:           return(corpsetype);
armada_metalstorage.bos:   corpsetype = 3 ;
armada_metalstorage.bos:   return corpsetype;
armada_constructionturret.bos:  set INBUILDSTANCE to 1;
armada_constructionturret.bos:  set INBUILDSTANCE to 0;
armada_constructionturret.bos:SetStunned(State)
armada_constructionturret.bos:Killed(severity, corpsetype)
armada_constructionturret.bos:          corpsetype = 1 ;
armada_constructionturret.bos:          return(corpsetype);
armada_constructionturret.bos:          corpsetype = 2 ;
armada_constructionturret.bos:          return(corpsetype);
armada_constructionturret.bos:          corpsetype = 3 ;
armada_constructionturret.bos:          return(corpsetype);
armada_constructionturret.bos:  corpsetype = 3 ;
armada_constructionturret.bos:  return corpsetype;
Binary file armada_constructionturret.cob matches
armada_navalconstructionturret.bos:      set INBUILDSTANCE to 1;
armada_navalconstructionturret.bos:      set INBUILDSTANCE to 0;
armada_navalconstructionturret.bos:SetStunned(State)
armada_navalconstructionturret.bos:Killed(severity, corpsetype)
armada_navalconstructionturret.bos:              corpsetype = 1 ;
armada_navalconstructionturret.bos:              return(corpsetype);
armada_navalconstructionturret.bos:              corpsetype = 2 ;
armada_navalconstructionturret.bos:              return(corpsetype);
armada_navalconstructionturret.bos:              corpsetype = 3 ;
armada_navalconstructionturret.bos:              return(corpsetype);
armada_navalconstructionturret.bos:      corpsetype = 3 ;
armada_navalconstructionturret.bos:      return corpsetype;
Binary file armada_navalconstructionturret.cob matches
armnukevader.bos:       set-signal-mask SIG_MOVE;
armnukevader.bos:Killed(severity, corpsetype)
armnukevader.bos:               corpsetype = 1 ;
armnukevader.bos:               return(corpsetype);
armnukevader.bos:               corpsetype = 2 ;
armnukevader.bos:               return(corpsetype);
armnukevader.bos:               corpsetype = 3 ;
armnukevader.bos:               return(corpsetype);
armnukevader.bos:       corpsetype = 3 ;
armnukevader.bos:       return corpsetype;
armada_pitbull.bos:      set ARMORED to 0;
armada_pitbull.bos:      set ARMORED to 1;
armada_pitbull.bos:      set-signal-mask 0;
armada_pitbull.bos:SetStunned(State)
armada_pitbull.bos:      set-signal-mask SIG_RESTORE;
armada_pitbull.bos:SetMaxReloadTime(Func_Var_1)
armada_pitbull.bos:      set-signal-mask SIG_AIM;
armada_pitbull.bos:Killed(severity, corpsetype)
armada_pitbull.bos:              corpsetype = 1 ;
armada_pitbull.bos:              return(corpsetype);
armada_pitbull.bos:              corpsetype = 2 ;
armada_pitbull.bos:              return(corpsetype);
armada_pitbull.bos:              corpsetype = 3 ;
armada_pitbull.bos:              return(corpsetype);
armada_pitbull.bos:      corpsetype = 3 ;
armada_pitbull.bos:      return corpsetype;
Binary file armada_pitbull.cob matches
armada_blink.bos:Killed(severity, corpsetype)
armada_blink.bos:            corpsetype = 1 ;
armada_blink.bos:            return(corpsetype);
armada_blink.bos:            corpsetype = 2 ;
armada_blink.bos:            return(corpsetype);
armada_blink.bos:            corpsetype = 3 ;
armada_blink.bos:            return(corpsetype);
armada_blink.bos:    corpsetype = 3 ;
armada_blink.bos:    return corpsetype;
armada_pincer.bos:SetMaxReloadTime(Func_Var_1)
armada_pincer.bos:SetStunned(State)
armada_pincer.bos:  set-signal-mask SIG_AIM;
armada_pincer.bos:Killed(severity, corpsetype)
armada_pincer.bos:          corpsetype = 1 ;
armada_pincer.bos:          return(corpsetype);
armada_pincer.bos:          corpsetype = 2 ;
armada_pincer.bos:          return(corpsetype);
armada_pincer.bos:          corpsetype = 3 ;
armada_pincer.bos:          return(corpsetype);
armada_pincer.bos:  corpsetype = 3 ;
armada_pincer.bos:  return corpsetype;
Binary file armada_pincer.cob matches
armada_seaplaneplatform.bos:    set ARMORED to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
armada_seaplaneplatform.bos:    set YARD_OPEN to 1;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 1;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set YARD_OPEN to 0;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 0;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 1;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
armada_seaplaneplatform.bos:    set-signal-mask SIG_ACTIVATE;
armada_seaplaneplatform.bos:    set-signal-mask 0;
armada_seaplaneplatform.bos:Killed(severity, corpsetype)
armada_seaplaneplatform.bos:            corpsetype = 1 ;
armada_seaplaneplatform.bos:            return(corpsetype);
armada_seaplaneplatform.bos:            corpsetype = 2 ;
armada_seaplaneplatform.bos:            return(corpsetype);
armada_seaplaneplatform.bos:            corpsetype = 3 ;
armada_seaplaneplatform.bos:            return(corpsetype);
armada_seaplaneplatform.bos:    corpsetype = 3 ;
armada_seaplaneplatform.bos:    return corpsetype;
armada_blizzard.bos:Killed(severity, corpsetype)
armada_blizzard.bos:            corpsetype = 1 ;
armada_blizzard.bos:            return(corpsetype);
armada_blizzard.bos:            corpsetype = 2 ;
armada_blizzard.bos:            return(corpsetype);
armada_blizzard.bos:            corpsetype = 3 ;
armada_blizzard.bos:            return(corpsetype);
armada_blizzard.bos:    corpsetype = 3 ;
armada_blizzard.bos:    return corpsetype;
armada_ellysaw.bos:SetDirection(heading)
armada_ellysaw.bos:   set-signal-mask 4096;
armada_ellysaw.bos:SetMaxReloadTime(Func_Var_1)
armada_ellysaw.bos:   set-signal-mask 0;
armada_ellysaw.bos:SetStunned(State)
armada_ellysaw.bos:   set-signal-mask SIG_MOVE;
armada_ellysaw.bos:   set-signal-mask SIG_AIM;
armada_ellysaw.bos:   set-signal-mask SIG_AIM_2;
armada_ellysaw.bos:Killed(severity, corpsetype)
armada_ellysaw.bos:           corpsetype = 1;
armada_ellysaw.bos:           return (corpsetype);
armada_ellysaw.bos:           corpsetype = 2;
armada_ellysaw.bos:           return (corpsetype);
armada_ellysaw.bos:   corpsetype = 3;
armada_ellysaw.bos:   return corpsetype;
Binary file armada_ellysaw.cob matches
armada_skater.bos:SetDirection(heading)
armada_skater.bos:SetMaxReloadTime(Func_Var_1)
armada_skater.bos:      set-signal-mask 0;
armada_skater.bos:SetStunned(State)
armada_skater.bos:      set-signal-mask SIG_MOVE;
armada_skater.bos:      set-signal-mask SIG_AIM_3;
armada_skater.bos:      set-signal-mask SIG_AIM;
armada_skater.bos:Killed(severity, corpsetype)
armada_skater.bos:              corpsetype = 1 ;
armada_skater.bos:              return(corpsetype);
armada_skater.bos:              corpsetype = 2 ;
armada_skater.bos:              return(corpsetype);
armada_skater.bos:              corpsetype = 3 ;
armada_skater.bos:              return(corpsetype);
armada_skater.bos:      corpsetype = 3 ;
armada_skater.bos:      return corpsetype;
Binary file armada_skater.cob matches
armada_harpoon2.bos:SetStunned(State)
armada_harpoon2.bos:     set-signal-mask SIG_AIM;
armada_harpoon2.bos:Killed(severity, corpsetype)
armada_harpoon2.bos:             corpsetype = 1 ;
armada_harpoon2.bos:             return(corpsetype);
armada_harpoon2.bos:             corpsetype = 2 ;
armada_harpoon2.bos:             return(corpsetype);
armada_harpoon2.bos:             corpsetype = 3 ;
armada_harpoon2.bos:             return(corpsetype);
armada_harpoon2.bos:     corpsetype = 3 ;
armada_harpoon2.bos:     return corpsetype;
Binary file armada_harpoon2.cob matches
armada_pawn.bos:      set-signal-mask SIG_MOVE;
armada_pawn.bos:              set-signal-mask (SIG_AIM | SIG_MOVE);
armada_pawn.bos:              bAnimate = TRUE; // this sets animation started, so that
 StopAnimate knows that it should restore state quickly
armada_pawn.bos:      start-script InitialSetup1();
armada_pawn.bos:SetMaxReloadTime(Func_Var_1)
armada_pawn.bos:SetStunned(State)
armada_pawn.bos:      set-signal-mask SIG_AIM;
armada_pawn.bos:      start-script Weapon1SetWtdAim(heading, pitch);
armada_pawn.bos:Killed(severity, corpsetype)
armada_pawn.bos:              corpsetype = 1;
armada_pawn.bos:              return (corpsetype);
armada_pawn.bos:              corpsetype = 2;
armada_pawn.bos:              return (corpsetype);
armada_pawn.bos:              corpsetype = 3;
armada_pawn.bos:              return (corpsetype);
armada_pawn.bos:      corpsetype = 3;
armada_pawn.bos:      return corpsetype;
Binary file armada_pawn.cob matches
armada_radartower.bos:Killed(severity, corpsetype)
armada_radartower.bos:             corpsetype = 1 ;
armada_radartower.bos:             return(corpsetype);
armada_radartower.bos:             corpsetype = 2 ;
armada_radartower.bos:             return(corpsetype);
armada_radartower.bos:             corpsetype = 3 ;
armada_radartower.bos:             return(corpsetype);
armada_radartower.bos:     corpsetype = 3 ;
armada_radartower.bos:     return corpsetype;
armada_razorback.bos:     set-signal-mask 16;
armada_razorback.bos:     set-signal-mask SIG_AIM;
armada_razorback.bos:Killed(severity, corpsetype)
armada_razorback.bos:             corpsetype = 1 ;
armada_razorback.bos:             corpsetype = 2 ;
armada_razorback.bos:             corpsetype = 3 ;
armada_razorback.bos:     corpsetype = 3 ;
armada_grimreaper.bos:    set INBUILDSTANCE to 1;
armada_grimreaper.bos:    set INBUILDSTANCE to 0;
armada_grimreaper.bos:Killed(severity, corpsetype)
armada_grimreaper.bos:            corpsetype = 1 ;
armada_grimreaper.bos:            return(corpsetype);
armada_grimreaper.bos:            corpsetype = 2 ;
armada_grimreaper.bos:            return(corpsetype);
armada_grimreaper.bos:            corpsetype = 3 ;
armada_grimreaper.bos:            return(corpsetype);
armada_grimreaper.bos:    corpsetype = 3 ;
armada_grimreaper.bos:    return corpsetype;
armada_lazarus.bos:   //set-signal-mask SIG_WALK;
armada_lazarus.bos:   set-signal-mask SIG_BUILD;
armada_lazarus.bos:   set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 1;
armada_lazarus.bos:   set-signal-mask SIG_BUILD;
armada_lazarus.bos:   set-signal-mask 0;
armada_lazarus.bos:Killed(severity, corpsetype)
armada_lazarus.bos:           corpsetype = 1 ;
armada_lazarus.bos:           return(corpsetype);
armada_lazarus.bos:           corpsetype = 2 ;
armada_lazarus.bos:           return(corpsetype);
armada_lazarus.bos:           corpsetype = 3 ;
armada_lazarus.bos:           return(corpsetype);
armada_lazarus.bos:   corpsetype = 3 ;
armada_lazarus.bos:   return corpsetype;
armrectrt4.bos: //set-signal-mask SIG_WALK;
armrectrt4.bos: set-signal-mask SIG_BUILD;
armrectrt4.bos: set INBUILDSTANCE to 0;
armrectrt4.bos: set INBUILDSTANCE to 1;
armrectrt4.bos: set-signal-mask SIG_BUILD;
armrectrt4.bos: set-signal-mask 0;
armrectrt4.bos:Killed(severity, corpsetype)
armrectrt4.bos:         corpsetype = 1 ;
armrectrt4.bos:         return(corpsetype);
armrectrt4.bos:         corpsetype = 2 ;
armrectrt4.bos:         return(corpsetype);
armrectrt4.bos:         corpsetype = 3 ;
armrectrt4.bos:         return(corpsetype);
armrectrt4.bos: corpsetype = 3 ;
armrectrt4.bos: return corpsetype;
armada_nettle.bos:SetStunned(State)
armada_nettle.bos:      set-signal-mask SIG_AIM;
armada_nettle.bos:Killed(severity, corpsetype)
armada_nettle.bos:              corpsetype = 1 ;
armada_nettle.bos:              return(corpsetype);
armada_nettle.bos:              corpsetype = 2 ;
armada_nettle.bos:              return(corpsetype);
armada_nettle.bos:              corpsetype = 3 ;
armada_nettle.bos:              return(corpsetype);
armada_nettle.bos:      corpsetype = 3 ;
armada_nettle.bos:      return corpsetype;
Binary file armada_nettle.cob matches
armada_rocketeer.bos:    set-signal-mask SIG_WALK;
armada_rocketeer.bos:SetMaxReloadTime(Func_Var_1)
armada_rocketeer.bos:SetStunned(State)
armada_rocketeer.bos:    set-signal-mask SIG_AIM;
armada_rocketeer.bos:Killed(severity, corpsetype)
armada_rocketeer.bos:            corpsetype = 1 ;
armada_rocketeer.bos:            return(corpsetype);
armada_rocketeer.bos:            corpsetype = 2 ;
armada_rocketeer.bos:            return(corpsetype);
armada_rocketeer.bos:            corpsetype = 3 ;
armada_rocketeer.bos:            return(corpsetype);
armada_rocketeer.bos:    corpsetype = 3 ;
armada_rocketeer.bos:    return corpsetype;
Binary file armada_rocketeer.cob matches
armada_corsair.bos:     set-signal-mask SIG_ROCK;
armada_corsair.bos:SetDirection(heading)
armada_corsair.bos:SetMaxReloadTime(Func_Var_1)
armada_corsair.bos:     set-signal-mask 0;
armada_corsair.bos:SetStunned(State)
armada_corsair.bos:     set-signal-mask SIG_MOVE;
armada_corsair.bos:     set-signal-mask SIG_AIM;
armada_corsair.bos:Killed(severity, corpsetype)
armada_corsair.bos:             corpsetype = 1 ;
armada_corsair.bos:             return(corpsetype);
armada_corsair.bos:             corpsetype = 2 ;
armada_corsair.bos:             return(corpsetype);
armada_corsair.bos:             corpsetype = 3 ;
armada_corsair.bos:             return(corpsetype);
armada_corsair.bos:     corpsetype = 3 ;
armada_corsair.bos:     return corpsetype;
Binary file armada_corsair.cob matches
armada_sabre.bos:   set-signal-mask 0;
armada_sabre.bos:SetStunned(State)
armada_sabre.bos:setSFXoccupy(Func_Var_1)
armada_sabre.bos:Killed(severity, corpsetype)
armada_sabre.bos:           corpsetype = 1 ;
armada_sabre.bos:           return(corpsetype);
armada_sabre.bos:           corpsetype = 2 ;
armada_sabre.bos:           return(corpsetype);
armada_sabre.bos:           corpsetype = 3 ;
armada_sabre.bos:           return(corpsetype);
armada_sabre.bos:   corpsetype = 3 ;
armada_sabre.bos:   return corpsetype;
Binary file armada_sabre.cob matches
armada_whistler.bos:SetMaxReloadTime(Func_Var_1)
armada_whistler.bos:SetStunned(State)
armada_whistler.bos:     set-signal-mask SIG_AIM;
armada_whistler.bos:Killed(severity, corpsetype)
armada_whistler.bos:             corpsetype = 1 ;
armada_whistler.bos:             return(corpsetype);
armada_whistler.bos:             corpsetype = 2 ;
armada_whistler.bos:             return(corpsetype);
armada_whistler.bos:             corpsetype = 3 ;
armada_whistler.bos:             return(corpsetype);
armada_whistler.bos:     corpsetype = 3 ;
armada_whistler.bos:     return corpsetype;
Binary file armada_whistler.cob matches
armada_tsunami.bos:setSFXoccupy(Func_Var_1)
armada_tsunami.bos:Killed(severity, corpsetype)
armada_tsunami.bos:              corpsetype = 1 ;
armada_tsunami.bos:              return(corpsetype);
armada_tsunami.bos:              corpsetype = 2 ;
armada_tsunami.bos:              return(corpsetype);
armada_tsunami.bos:              corpsetype = 3 ;
armada_tsunami.bos:              return(corpsetype);
armada_tsunami.bos:      corpsetype = 3 ;
armada_tsunami.bos:      return corpsetype;
Binary file armada_tsunami.cob matches
armada_umbrella.bos:    //set-signal-mask SIG_WALK;
armada_umbrella.bos:    set-signal-mask 0;
armada_umbrella.bos:SetStunned(State)
armada_umbrella.bos:    set-signal-mask SIG_AIM;
armada_umbrella.bos:Killed(severity, corpsetype)
armada_umbrella.bos:            corpsetype = 1 ;
armada_umbrella.bos:            return(corpsetype);
armada_umbrella.bos:            corpsetype = 2 ;
armada_umbrella.bos:            return(corpsetype);
armada_umbrella.bos:            corpsetype = 3 ;
armada_umbrella.bos:            return(corpsetype);
armada_umbrella.bos:    corpsetype = 3 ;
armada_umbrella.bos:    return corpsetype;
Binary file armada_umbrella.cob matches
armada_tracer.bos:Killed(severity, corpsetype)
armada_tracer.bos:              corpsetype = 1 ;
armada_tracer.bos:              return(corpsetype);
armada_tracer.bos:              corpsetype = 2 ;
armada_tracer.bos:              return(corpsetype);
armada_tracer.bos:              corpsetype = 3 ;
armada_tracer.bos:              return(corpsetype);
armada_tracer.bos:      corpsetype = 3 ;
armada_tracer.bos:      return corpsetype;
armada_puffin.bos:    set-signal-mask SIG_MOVE;
armada_puffin.bos:Killed(severity, corpsetype)
armada_puffin.bos:            corpsetype = 1 ;
armada_puffin.bos:            return(corpsetype);
armada_puffin.bos:            corpsetype = 2 ;
armada_puffin.bos:            return(corpsetype);
armada_puffin.bos:            corpsetype = 3 ;
armada_puffin.bos:            return(corpsetype);
armada_puffin.bos:    corpsetype = 3 ;
armada_puffin.bos:    return corpsetype;
armada_prophet.bos:    set-signal-mask SIG_ACTIVATE;
armada_prophet.bos:    set-signal-mask SIG_ACTIVATE;
armada_prophet.bos:SetStunned(State)
armada_prophet.bos:Killed(severity, corpsetype)
armada_prophet.bos:            corpsetype = 1 ;
armada_prophet.bos:            return(corpsetype);
armada_prophet.bos:            corpsetype = 2 ;
armada_prophet.bos:            return(corpsetype);
armada_prophet.bos:            corpsetype = 3 ;
armada_prophet.bos:            return(corpsetype);
armada_prophet.bos:    corpsetype = 3 ;
armada_prophet.bos:    return corpsetype;
Binary file armada_prophet.cob matches
armada_horizon.bos:   set-signal-mask SIG_MOVE;
armada_horizon.bos:setSFXoccupy(Func_Var_1)
armada_horizon.bos:Killed(severity, corpsetype)
armada_horizon.bos:           corpsetype = 1 ;
armada_horizon.bos:           return(corpsetype);
armada_horizon.bos:           corpsetype = 2 ;
armada_horizon.bos:           return(corpsetype);
armada_horizon.bos:           corpsetype = 3 ;
armada_horizon.bos:           return(corpsetype);
armada_horizon.bos:   corpsetype = 3 ;
armada_horizon.bos:   return corpsetype;
Binary file armada_horizon.cob matches
armada_serpent.bos:            // Set values for tilt
armada_serpent.bos:    set-signal-mask SIG_MOVE;
armada_serpent.bos:    set-signal-mask SIG_MOVE;
armada_serpent.bos:SetStunned(State)
armada_serpent.bos:    set-signal-mask SIG_AIM;
armada_serpent.bos:Killed(severity, corpsetype)
armada_serpent.bos:            corpsetype = 1 ;
armada_serpent.bos:            return(corpsetype);
armada_serpent.bos:            corpsetype = 2 ;
armada_serpent.bos:            return(corpsetype);
armada_serpent.bos:            corpsetype = 3 ;
armada_serpent.bos:            return(corpsetype);
armada_serpent.bos:    corpsetype = 3 ;
armada_serpent.bos:    return corpsetype;
Binary file armada_serpent.cob matches
armada_cyclone.bos:    set-signal-mask SIG_MOVE;
armada_cyclone.bos:Killed(severity, corpsetype)
armada_cyclone.bos:            corpsetype = 1 ;
armada_cyclone.bos:            return(corpsetype);
armada_cyclone.bos:            corpsetype = 2 ;
armada_cyclone.bos:            return(corpsetype);
armada_cyclone.bos:            corpsetype = 3 ;
armada_cyclone.bos:            return(corpsetype);
armada_cyclone.bos:    corpsetype = 3 ;
armada_cyclone.bos:    return corpsetype;
armada_seeker.bos:              // Set values for tilt
armada_seeker.bos:      set-signal-mask SIG_MOVE;
armada_seeker.bos:setSFXoccupy(Func_Var_1)
armada_seeker.bos:SetMaxReloadTime(Func_Var_1)
armada_seeker.bos:      set-signal-mask 0;
armada_seeker.bos:SetStunned(State)
armada_seeker.bos:      set-signal-mask SIG_AIM;
armada_seeker.bos:Killed(severity, corpsetype)
armada_seeker.bos:              corpsetype = 1 ;
armada_seeker.bos:              return(corpsetype);
armada_seeker.bos:              corpsetype = 2 ;
armada_seeker.bos:              return(corpsetype);
armada_seeker.bos:              corpsetype = 3 ;
armada_seeker.bos:              return(corpsetype);
armada_seeker.bos:      corpsetype = 3 ;
armada_seeker.bos:      return corpsetype;
Binary file armada_seeker.cob matches
armada_experimentalgantry.bos:   set YARD_OPEN to 1;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 1;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set YARD_OPEN to 0;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 0;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 1;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 0;
armada_experimentalgantry.bos:   set-signal-mask SIG_ACTIVATE;
armada_experimentalgantry.bos:   set-signal-mask 0;
armada_experimentalgantry.bos:Killed(severity, corpsetype)
armada_experimentalgantry.bos:           corpsetype = 1 ;
armada_experimentalgantry.bos:           return(corpsetype);
armada_experimentalgantry.bos:           corpsetype = 2 ;
armada_experimentalgantry.bos:           return(corpsetype);
armada_experimentalgantry.bos:           corpsetype = 3 ;
armada_experimentalgantry.bos:           return(corpsetype);
armada_experimentalgantry.bos:   corpsetype = 3 ;
armada_experimentalgantry.bos:   return corpsetype;
armada_armageddon.bos:// OffsetToScriptCodeIndexArray        c08
armada_armageddon.bos:// OffsetToScriptNameOffsetArray       c4c
armada_armageddon.bos:// OffsetToPieceNameOffsetArray        c90
armada_armageddon.bos:// OffsetToScriptCode                  2c
armada_armageddon.bos:// OffsetToNameArray                   ca4
armada_armageddon.bos:// OffsetToFirstName                   ca4
armada_armageddon.bos:SetMaxReloadTime(Func_Var_1)
armada_armageddon.bos:/*   217:*/ set-signal-mask 0;
armada_armageddon.bos:/*   22c:*/ set-signal-mask SIG_AIM;
armada_armageddon.bos:Killed(severity, corpsetype)
armada_armageddon.bos:            corpsetype = 1 ;
armada_armageddon.bos:            return(corpsetype);
armada_armageddon.bos:            corpsetype = 2 ;
armada_armageddon.bos:            return(corpsetype);
armada_armageddon.bos:            corpsetype = 3 ;
armada_armageddon.bos:            return(corpsetype);
armada_armageddon.bos:    corpsetype = 3 ;
armada_armageddon.bos:    return corpsetype;
Binary file armada_armageddon.cob matches
armada_bermuda.bos:SetDirection(heading)
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set-signal-mask 4;
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 100;
armada_bermuda.bos:    set-signal-mask SIG_MOVE;
armada_bermuda.bos:Killed(severity, corpsetype)
armada_bermuda.bos:            corpsetype = 1 ;
armada_bermuda.bos:            return(corpsetype);
armada_bermuda.bos:            corpsetype = 2 ;
armada_bermuda.bos:            return(corpsetype);
armada_bermuda.bos:            corpsetype = 3 ;
armada_bermuda.bos:            return(corpsetype);
armada_bermuda.bos:    corpsetype = 3 ;
armada_bermuda.bos:    return corpsetype;
Binary file armada_bermuda.cob matches
armada_sharpshooter.bos:   //set-signal-mask SIG_WALK;
armada_sharpshooter.bos:SetMaxReloadTime(Func_Var_1)
armada_sharpshooter.bos:   set-signal-mask 0;
armada_sharpshooter.bos:SetStunned(State)
armada_sharpshooter.bos:   set-signal-mask SIG_AIM;
armada_sharpshooter.bos:Killed(severity, corpsetype)
armada_sharpshooter.bos:           corpsetype = 1 ;
armada_sharpshooter.bos:           return(corpsetype);
armada_sharpshooter.bos:           corpsetype = 2 ;
armada_sharpshooter.bos:           return(corpsetype);
armada_sharpshooter.bos:           corpsetype = 3 ;
armada_sharpshooter.bos:           return(corpsetype);
armada_sharpshooter.bos:   corpsetype = 3 ;
armada_sharpshooter.bos:   return corpsetype;
Binary file armada_sharpshooter.cob matches
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 1;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 0;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:   set ARMORED to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:   set ARMORED to 1;
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set-signal-mask 2;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 100;
armada_solarcollector.bos:Killed(severity, corpsetype)
armada_solarcollector.bos:           corpsetype = 1 ;
armada_solarcollector.bos:           return(corpsetype);
armada_solarcollector.bos:           corpsetype = 2 ;
armada_solarcollector.bos:           return(corpsetype);
armada_solarcollector.bos:           corpsetype = 3 ;
armada_solarcollector.bos:           return(corpsetype);
armada_solarcollector.bos:   corpsetype = 3 ;
armada_solarcollector.bos:   return corpsetype;
armada_sonarstation.bos:Killed(severity, corpsetype)
armada_sonarstation.bos:           corpsetype = 1 ;
armada_sonarstation.bos:           return(corpsetype);
armada_sonarstation.bos:           corpsetype = 2 ;
armada_sonarstation.bos:           return(corpsetype);
armada_sonarstation.bos:           corpsetype = 3 ;
armada_sonarstation.bos:           return(corpsetype);
armada_sonarstation.bos:   corpsetype = 3 ;
armada_sonarstation.bos:   return corpsetype;
armada_webber.bos:    //set-signal-mask SIG_WALK;
armada_webber.bos:SetMaxReloadTime(t)
armada_webber.bos:SetStunned(State)
armada_webber.bos:    set-signal-mask SIG_AIM;
armada_webber.bos:Killed(severity, corpsetype)
armada_webber.bos:            corpsetype = 1 ;
armada_webber.bos:            return(corpsetype);
armada_webber.bos:            corpsetype = 2 ;
armada_webber.bos:            return(corpsetype);
armada_webber.bos:            corpsetype = 3 ;
armada_webber.bos:            return(corpsetype);
armada_webber.bos:    corpsetype = 3 ;
armada_webber.bos:    return corpsetype;
Binary file armada_webber.cob matches
armada_recluse.bos:    //set-signal-mask SIG_WALK;
armada_recluse.bos:SetMaxReloadTime(t)
armada_recluse.bos:    set-signal-mask SIG_FIRE1;
armada_recluse.bos:    set-signal-mask 0;
armada_recluse.bos:SetStunned(State)
armada_recluse.bos:    set-signal-mask SIG_AIM;
armada_recluse.bos:Killed(severity, corpsetype)
armada_recluse.bos:            corpsetype = 1 ;
armada_recluse.bos:            return(corpsetype);
armada_recluse.bos:            corpsetype = 2 ;
armada_recluse.bos:            return(corpsetype);
armada_recluse.bos:            corpsetype = 3 ;
armada_recluse.bos:            return(corpsetype);
armada_recluse.bos:    corpsetype = 3 ;
armada_recluse.bos:    return corpsetype;
Binary file armada_recluse.cob matches
armada_ghost.bos:     //set-signal-mask SIG_WALK;
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:     set-signal-mask SIG_ACTIVATE;
armada_ghost.bos:     set INBUILDSTANCE to 1;
armada_ghost.bos:     set INBUILDSTANCE to 0;
armada_ghost.bos:     set-signal-mask SIG_ACTIVATE;
armada_ghost.bos:             set-signal-mask 4;
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:             set ACTIVATION to 100;
armada_ghost.bos:Killed(severity, corpsetype)
armada_ghost.bos:             corpsetype = 1 ;
armada_ghost.bos:             return(corpsetype);
armada_ghost.bos:             corpsetype = 2 ;
armada_ghost.bos:             return(corpsetype);
armada_ghost.bos:             corpsetype = 3 ;
armada_ghost.bos:             return(corpsetype);
armada_ghost.bos:     corpsetype = 3 ;
armada_ghost.bos:     return corpsetype;
armada_stiletto.bos:Killed(severity, corpsetype)
armada_stiletto.bos:            corpsetype = 1 ;
armada_stiletto.bos:            return(corpsetype);
armada_stiletto.bos:            corpsetype = 2 ;
armada_stiletto.bos:            return(corpsetype);
armada_stiletto.bos:            corpsetype = 3 ;
armada_stiletto.bos:            return(corpsetype);
armada_stiletto.bos:    corpsetype = 3 ;
armada_stiletto.bos:    return corpsetype;
armada_stout.bos:SetMaxReloadTime(Func_Var_1)
armada_stout.bos:SetStunned(State)
armada_stout.bos:   set-signal-mask SIG_AIM;
armada_stout.bos:Killed(severity, corpsetype)
armada_stout.bos:           corpsetype = 1 ;
armada_stout.bos:           return(corpsetype);
armada_stout.bos:           corpsetype = 2 ;
armada_stout.bos:           return(corpsetype);
armada_stout.bos:           corpsetype = 3 ;
armada_stout.bos:           return(corpsetype);
armada_stout.bos:   corpsetype = 3 ;
armada_stout.bos:   return corpsetype;
Binary file armada_stout.cob matches
armada_eel.bos:     set-signal-mask SIG_MOVE;
armada_eel.bos:SetStunned(State)
armada_eel.bos:     set-signal-mask SIG_AIM;
armada_eel.bos:Killed(severity, corpsetype)
armada_eel.bos:             corpsetype = 1 ;
armada_eel.bos:             return(corpsetype);
armada_eel.bos:             corpsetype = 2 ;
armada_eel.bos:             return(corpsetype);
armada_eel.bos:             corpsetype = 3 ;
armada_eel.bos:             return(corpsetype);
armada_eel.bos:     corpsetype = 3 ;
armada_eel.bos:     return corpsetype;
Binary file armada_eel.cob matches
armada_barracuda.bos:    set-signal-mask SIG_MOVE;
armada_barracuda.bos:Killed(severity, corpsetype)
armada_barracuda.bos:            corpsetype = 1 ;
armada_barracuda.bos:            return(corpsetype);
armada_barracuda.bos:            corpsetype = 2 ;
armada_barracuda.bos:            return(corpsetype);
armada_barracuda.bos:            corpsetype = 3 ;
armada_barracuda.bos:            return(corpsetype);
armada_barracuda.bos:    corpsetype = 3 ;
armada_barracuda.bos:    return corpsetype;
armada_shipyard.bos:      set YARD_OPEN to 1;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 1;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set YARD_OPEN to 0;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 0;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set INBUILDSTANCE to 1;
armada_shipyard.bos:      set INBUILDSTANCE to 0;
armada_shipyard.bos:      set-signal-mask SIG_ACTIVATE;
armada_shipyard.bos:      set-signal-mask 0;
armada_shipyard.bos:Killed(severity, corpsetype)
armada_shipyard.bos:              corpsetype = 1 ;
armada_shipyard.bos:              return(corpsetype);
armada_shipyard.bos:              corpsetype = 2 ;
armada_shipyard.bos:              return(corpsetype);
armada_shipyard.bos:              corpsetype = 3 ;
armada_shipyard.bos:              return(corpsetype);
armada_shipyard.bos:      corpsetype = 3 ;
armada_shipyard.bos:      return corpsetype;
armada_pinpointer.bos:    set ARMORED to 1;
armada_pinpointer.bos:    set-signal-mask 2;
armada_pinpointer.bos:    set ACTIVATION to 0;
armada_pinpointer.bos:    set ACTIVATION to 1;
armada_pinpointer.bos:Killed(severity, corpsetype)
armada_pinpointer.bos:            corpsetype = 1 ;
armada_pinpointer.bos:            return(corpsetype);
armada_pinpointer.bos:            corpsetype = 2 ;
armada_pinpointer.bos:            return(corpsetype);
armada_pinpointer.bos:            corpsetype = 3 ;
armada_pinpointer.bos:            return(corpsetype);
armada_pinpointer.bos:    corpsetype = 3 ;
armada_pinpointer.bos:    return corpsetype;
armada_bearer.bos:           // Set values for tilt
armada_bearer.bos:   set-signal-mask SIG_MOVE;
armada_bearer.bos:setSFXoccupy(Func_Var_1)
armada_bearer.bos:   set-signal-mask 4;
armada_bearer.bos:BoomReset()
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           call-script BoomReset();
armada_bearer.bos:           set BUSY to 0;
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           call-script BoomReset();
armada_bearer.bos:           set BUSY to 0;
armada_bearer.bos:Killed(severity, corpsetype)
armada_bearer.bos:           corpsetype = 1 ;
armada_bearer.bos:           return(corpsetype);
armada_bearer.bos:           corpsetype = 2 ;
armada_bearer.bos:           return(corpsetype);
armada_bearer.bos:           corpsetype = 3 ;
armada_bearer.bos:           return(corpsetype);
armada_bearer.bos:   corpsetype = 3 ;
armada_bearer.bos:   return corpsetype;
Binary file armada_bearer.cob matches
armada_stormbringer.bos:Killed(severity, corpsetype)
armada_stormbringer.bos:           corpsetype = 1 ;
armada_stormbringer.bos:           return(corpsetype);
armada_stormbringer.bos:           corpsetype = 2 ;
armada_stormbringer.bos:           return(corpsetype);
armada_stormbringer.bos:           corpsetype = 3 ;
armada_stormbringer.bos:           return(corpsetype);
armada_stormbringer.bos:   corpsetype = 3 ;
armada_stormbringer.bos:   return corpsetype;
armada_tidalgenerator.bos:Killed(severity, corpsetype)
armada_tidalgenerator.bos:            corpsetype = 1 ;
armada_tidalgenerator.bos:            return(corpsetype);
armada_tidalgenerator.bos:            corpsetype = 2 ;
armada_tidalgenerator.bos:            return(corpsetype);
armada_tidalgenerator.bos:            corpsetype = 3 ;
armada_tidalgenerator.bos:            return(corpsetype);
armada_tidalgenerator.bos:    corpsetype = 3 ;
armada_tidalgenerator.bos:    return corpsetype;
armada_harpoon.bos:SetStunned(State)
armada_harpoon.bos:      set-signal-mask SIG_AIM;
armada_harpoon.bos:Killed(severity, corpsetype)
armada_harpoon.bos:              corpsetype = 1 ;
armada_harpoon.bos:              return(corpsetype);
armada_harpoon.bos:              corpsetype = 2 ;
armada_harpoon.bos:              return(corpsetype);
armada_harpoon.bos:              corpsetype = 3 ;
armada_harpoon.bos:              return(corpsetype);
armada_harpoon.bos:      corpsetype = 3 ;
armada_harpoon.bos:      return corpsetype;
Binary file armada_harpoon.cob matches
armada_convoy.bos:   set-signal-mask SIG_MOVE;
armada_convoy.bos:   set-signal-mask 4;
armada_convoy.bos:BoomReset()
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           call-script BoomReset();
armada_convoy.bos:           set BUSY to 0;
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           call-script BoomReset();
armada_convoy.bos:           set BUSY to 0;
armada_convoy.bos:Killed(severity, corpsetype)
armada_convoy.bos:           corpsetype = 1 ;
armada_convoy.bos:           return(corpsetype);
armada_convoy.bos:           corpsetype = 2 ;
armada_convoy.bos:           return(corpsetype);
armada_convoy.bos:           corpsetype = 3 ;
armada_convoy.bos:           return(corpsetype);
armada_convoy.bos:   corpsetype = 3 ;
armada_convoy.bos:   return corpsetype;
Binary file armada_convoy.cob matches
armada_hardenedenergystorage.bos:Killed(severity, corpsetype)
armada_hardenedenergystorage.bos:         corpsetype = 1 ;
armada_hardenedenergystorage.bos:         return(corpsetype);
armada_hardenedenergystorage.bos:         corpsetype = 2 ;
armada_hardenedenergystorage.bos:         return(corpsetype);
armada_hardenedenergystorage.bos:         corpsetype = 3 ;
armada_hardenedenergystorage.bos:         return(corpsetype);
armada_hardenedenergystorage.bos: corpsetype = 3 ;
armada_hardenedenergystorage.bos: return corpsetype;
armada_hardenedmetalstorage.bos:Killed(severity, corpsetype)
armada_hardenedmetalstorage.bos:         corpsetype = 1 ;
armada_hardenedmetalstorage.bos:         return(corpsetype);
armada_hardenedmetalstorage.bos:         corpsetype = 2 ;
armada_hardenedmetalstorage.bos:         return(corpsetype);
armada_hardenedmetalstorage.bos:         corpsetype = 3 ;
armada_hardenedmetalstorage.bos:         return(corpsetype);
armada_hardenedmetalstorage.bos: corpsetype = 3 ;
armada_hardenedmetalstorage.bos: return corpsetype;
armada_navalenergystorage.bos:Killed(severity, corpsetype)
armada_navalenergystorage.bos:            corpsetype = 1 ;
armada_navalenergystorage.bos:            return(corpsetype);
armada_navalenergystorage.bos:            corpsetype = 2 ;
armada_navalenergystorage.bos:            return(corpsetype);
armada_navalenergystorage.bos:            corpsetype = 3 ;
armada_navalenergystorage.bos:            return(corpsetype);
armada_navalenergystorage.bos:    corpsetype = 3 ;
armada_navalenergystorage.bos:    return corpsetype;
armada_navalfusionreactor.bos:Killed(severity, corpsetype)
armada_navalfusionreactor.bos:           corpsetype = 1 ;
armada_navalfusionreactor.bos:           return(corpsetype);
armada_navalfusionreactor.bos:           corpsetype = 2 ;
armada_navalfusionreactor.bos:           return(corpsetype);
armada_navalfusionreactor.bos:           corpsetype = 3 ;
armada_navalfusionreactor.bos:           return(corpsetype);
armada_navalfusionreactor.bos:   corpsetype = 3 ;
armada_navalfusionreactor.bos:   return corpsetype;
armada_navalmetalextractor.bos:   set-signal-mask SIG_ACTIVATE;
armada_navalmetalextractor.bos:SetSpeed(Func_Var_1)
armada_navalmetalextractor.bos:Killed(severity, corpsetype)
armada_navalmetalextractor.bos:           corpsetype = 1 ;
armada_navalmetalextractor.bos:           return(corpsetype);
armada_navalmetalextractor.bos:           corpsetype = 2 ;
armada_navalmetalextractor.bos:           return(corpsetype);
armada_navalmetalextractor.bos:           corpsetype = 3 ;
armada_navalmetalextractor.bos:           return(corpsetype);
armada_navalmetalextractor.bos:   corpsetype = 3 ;
armada_navalmetalextractor.bos:   return corpsetype;
Binary file armada_navalmetalextractor.cob matches
armada_navaladvancedmetalextractor.bos:   set-signal-mask SIG_WORK;
armada_navaladvancedmetalextractor.bos:   set-signal-mask SIG_ACTIVATE;
armada_navaladvancedmetalextractor.bos:SetSpeed(Func_Var_1)
armada_navaladvancedmetalextractor.bos:Killed(severity, corpsetype)
armada_navaladvancedmetalextractor.bos:           corpsetype = 1 ;
armada_navaladvancedmetalextractor.bos:           return(corpsetype);
armada_navaladvancedmetalextractor.bos:           corpsetype = 2 ;
armada_navaladvancedmetalextractor.bos:           return(corpsetype);
armada_navaladvancedmetalextractor.bos:           corpsetype = 3 ;
armada_navaladvancedmetalextractor.bos:           return(corpsetype);
armada_navaladvancedmetalextractor.bos:   corpsetype = 3 ;
armada_navaladvancedmetalextractor.bos:   return corpsetype;
Binary file armada_navaladvancedmetalextractor.cob matches
armada_navaladvancedenergyconverter.bos:Killed(severity, corpsetype)
armada_navaladvancedenergyconverter.bos:           corpsetype = 1 ;
armada_navaladvancedenergyconverter.bos:           return(corpsetype);
armada_navaladvancedenergyconverter.bos:           corpsetype = 2 ;
armada_navaladvancedenergyconverter.bos:           return(corpsetype);
armada_navaladvancedenergyconverter.bos:           corpsetype = 3 ;
armada_navaladvancedenergyconverter.bos:           return(corpsetype);
armada_navaladvancedenergyconverter.bos:   corpsetype = 3 ;
armada_navaladvancedenergyconverter.bos:   return corpsetype;
armada_navalmetalstorage.bos:Killed(severity, corpsetype)
armada_navalmetalstorage.bos:            corpsetype = 1 ;
armada_navalmetalstorage.bos:            return(corpsetype);
armada_navalmetalstorage.bos:            corpsetype = 2 ;
armada_navalmetalstorage.bos:            return(corpsetype);
armada_navalmetalstorage.bos:            corpsetype = 3 ;
armada_navalmetalstorage.bos:            return(corpsetype);
armada_navalmetalstorage.bos:    corpsetype = 3 ;
armada_navalmetalstorage.bos:    return corpsetype;
armada_tumbleweed.bos:   set-signal-mask SIG_MOVE;
armada_tumbleweed.bos:Killed(severity, corpsetype)
armada_tumbleweed.bos:           corpsetype = 1 ;
armada_tumbleweed.bos:           return(corpsetype);
armada_tumbleweed.bos:           corpsetype = 2 ;
armada_tumbleweed.bos:           return(corpsetype);
armada_tumbleweed.bos:           corpsetype = 3 ;
armada_tumbleweed.bos:           return(corpsetype);
armada_tumbleweed.bos:   corpsetype = 3 ;
armada_tumbleweed.bos:   return corpsetype;
armada_vanguard.bos:    set-signal-mask SIG_WALK;
armada_vanguard.bos:SetStunned(State)
armada_vanguard.bos:    set-signal-mask SIG_AIM;
armada_vanguard.bos:Killed(severity, corpsetype)
armada_vanguard.bos:            corpsetype = 1 ;
armada_vanguard.bos:            return(corpsetype);
armada_vanguard.bos:            corpsetype = 2 ;
armada_vanguard.bos:            return(corpsetype);
armada_vanguard.bos:            corpsetype = 3 ;
armada_vanguard.bos:            return(corpsetype);
armada_vanguard.bos:    corpsetype = 3 ;
armada_vanguard.bos:    return corpsetype;
Binary file armada_vanguard.cob matches
armada_veil.bos:Killed(severity, corpsetype)
armada_veil.bos:            corpsetype = 1 ;
armada_veil.bos:            return(corpsetype);
armada_veil.bos:            corpsetype = 2 ;
armada_veil.bos:            return(corpsetype);
armada_veil.bos:            corpsetype = 3 ;
armada_veil.bos:            return(corpsetype);
armada_veil.bos:    corpsetype = 3 ;
armada_veil.bos:    return corpsetype;
armada_vehicleplant.bos:      set ARMORED to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
armada_vehicleplant.bos:      set YARD_OPEN to 1;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 1;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set YARD_OPEN to 0;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 0;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set INBUILDSTANCE to 1;
armada_vehicleplant.bos:      set INBUILDSTANCE to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
armada_vehicleplant.bos:      set-signal-mask SIG_ACTIVATE;
armada_vehicleplant.bos:      set-signal-mask 0;
armada_vehicleplant.bos:Killed(severity, corpsetype)
armada_vehicleplant.bos:              corpsetype = 1 ;
armada_vehicleplant.bos:              return(corpsetype);
armada_vehicleplant.bos:              corpsetype = 2 ;
armada_vehicleplant.bos:              return(corpsetype);
armada_vehicleplant.bos:              corpsetype = 3 ;
armada_vehicleplant.bos:              return(corpsetype);
armada_vehicleplant.bos:      corpsetype = 3 ;
armada_vehicleplant.bos:      return corpsetype;
armada_ragnarok.bos:    set-signal-mask SIG_AIM;
armada_ragnarok.bos:Killed(severity, corpsetype)
armada_ragnarok.bos:            corpsetype = 1 ;
armada_ragnarok.bos:            return(corpsetype);
armada_ragnarok.bos:            corpsetype = 2 ;
armada_ragnarok.bos:            return(corpsetype);
armada_ragnarok.bos:            corpsetype = 3 ;
armada_ragnarok.bos:            return(corpsetype);
armada_ragnarok.bos:    corpsetype = 3 ;
armada_ragnarok.bos:    return corpsetype;
armada_centurion.bos:     set-signal-mask SIG_WALK;
armada_centurion.bos:SetMaxReloadTime(Func_Var_1)
armada_centurion.bos:SetStunned(State)
armada_centurion.bos:     set-signal-mask SIG_AIM;
armada_centurion.bos:Killed(severity, corpsetype)
armada_centurion.bos:             corpsetype = 1 ;
armada_centurion.bos:             return(corpsetype);
armada_centurion.bos:             corpsetype = 2 ;
armada_centurion.bos:             return(corpsetype);
armada_centurion.bos:             corpsetype = 3 ;
armada_centurion.bos:             return(corpsetype);
armada_centurion.bos:     corpsetype = 3 ;
armada_centurion.bos:     return corpsetype;
Binary file armada_centurion.cob matches
armada_windturbine.bos:SetSpeed(windSpd) //called every 450 frames
armada_windturbine.bos:                     set ACTIVATION to 100;
armada_windturbine.bos:SetDirection(windDir) //called every 450 frames
armada_windturbine.bos:SetStunned(State)
armada_windturbine.bos:             set ACTIVATION to 0;
armada_windturbine.bos:             set ACTIVATION to 100;
armada_windturbine.bos:Killed(severity, corpsetype)
armada_windturbine.bos:             corpsetype = 1 ;
armada_windturbine.bos:             return(corpsetype);
armada_windturbine.bos:             corpsetype = 2 ;
armada_windturbine.bos:             return(corpsetype);
armada_windturbine.bos:             corpsetype = 3 ;
armada_windturbine.bos:             return(corpsetype);
armada_windturbine.bos:     corpsetype = 3 ;
armada_windturbine.bos:     return corpsetype;
Binary file armada_windturbine.cob matches
armada_shredder.bos:SetMaxReloadTime(Func_Var_1)
armada_shredder.bos:    set-signal-mask 0;
armada_shredder.bos:SetStunned(State)
armada_shredder.bos:    set-signal-mask SIG_AIM_3;
armada_shredder.bos:Killed(severity, corpsetype)
armada_shredder.bos:            corpsetype = 1 ;
armada_shredder.bos:            return(corpsetype);
armada_shredder.bos:            corpsetype = 2 ;
armada_shredder.bos:            return(corpsetype);
armada_shredder.bos:            corpsetype = 3 ;
armada_shredder.bos:            return(corpsetype);
armada_shredder.bos:    corpsetype = 3 ;
armada_shredder.bos:    return corpsetype;
Binary file armada_shredder.cob matches
armada_welder.bos:SetStunned(State)
armada_welder.bos:    set-signal-mask SIG_AIM;
armada_welder.bos:Killed(severity, corpsetype)
armada_welder.bos:            corpsetype = 1 ;
armada_welder.bos:            return(corpsetype);
armada_welder.bos:            corpsetype = 2 ;
armada_welder.bos:            return(corpsetype);
armada_welder.bos:            corpsetype = 3 ;
armada_welder.bos:            return(corpsetype);
armada_welder.bos:    corpsetype = 3 ;
armada_welder.bos:    return corpsetype;
Binary file armada_welder.cob matches
Binary file cob_file.pyc matches
constants.h:** EXPtype.h -- Explosion Type information and GET/SET constants for
 scripts
constants.h:#define ACTIVATION           1  // set or get
constants.h:#define STANDINGMOVEORDERS   2  // set or get
constants.h:#define STANDINGFIREORDERS   3  // set or get
constants.h:#define INBUILDSTANCE        5  // set or get
constants.h:#define BUSY                 6  // set or get (used by misc. special
 case missions like transport ships)
constants.h:#define YARD_OPEN           18  // set or get (change which plots we
 occupy when building opens and closes)
constants.h:#define BUGGER_OFF          19  // set or get (ask other units to cl
ear the area)
constants.h:#define ARMORED             20  // set or get
constants.h:#define UPRIGHT                   79 // set or get
constants.h:#define LOS_RADIUS                85 // set or get
constants.h:#define AIR_LOS_RADIUS            86 // set or get
constants.h:#define RADAR_RADIUS              87 // set or get
constants.h:#define JAMMER_RADIUS             88 // set or get
constants.h:#define SONAR_RADIUS              89 // set or get
constants.h:#define SONAR_JAM_RADIUS          90 // set or get
constants.h:#define SEISMIC_RADIUS            91 // set or get
constants.h:#define CURRENT_FUEL              93 // set or get
constants.h:#define SHIELD_POWER              95 // set or get
constants.h:#define STEALTH                   96 // set or get
constants.h:#define CRASHING                  97 // set or get, returns whether
aircraft isCrashing state
constants.h:#define CHANGE_TARGET             98 // set, the value it's set to d
etermines the affected weapon
constants.h:#define CEG_DAMAGE                99 // set
constants.h:#define ALPHA_THRESHOLD          103 // set or get
constants.h:#define SET_WEAPON_UNIT_TARGET   106 // get (fake set)
constants.h:#define SET_WEAPON_GROUND_TARGET 107 // get (fake set)
constants.h:#define SONAR_STEALTH            108 // set or get
constants.h:// Indices for SET, GET, and GET_UNIT_VALUE for LUA return values
constants.h:#define FLANK_B_MODE                120 // set or get
constants.h:#define FLANK_B_DIR         121 // set or get, set is through get fo
r multiple args
constants.h:#define FLANK_B_MOBILITY_ADD        122 // set or get
constants.h:#define FLANK_B_MAX_DAMAGE  123 // set or get
constants.h:#define FLANK_B_MIN_DAMAGE  124 // set or get
constants.h:#define WEAPON_RELOADSTATE  125 // get (with fake set)  get WEAPON_R
ELOADSTATE(weaponNum)           for GET
constants.h:#define WEAPON_RELOADTIME   126 // get (with fake set)  get WEAPON_R
ELOADSTATE(-weaponNum,val)      for SET
constants.h:#define WEAPON_ACCURACY             127 // get (with fake set)
constants.h:#define WEAPON_SPRAY                128 // get (with fake set)
constants.h:#define WEAPON_RANGE                129 // get (with fake set)
constants.h:#define WEAPON_PROJECTILE_SPEED     130 // get (with fake set)
constants.h:#define WEAPON_STOCKPILE_COUNT  139 // get (with fake set)
constants.h:#define ENERGY_MAKE             140 // set or get (100*E production)

constants.h:#define METAL_MAKE              141 // set or get (100*M production)

cortex_manticore.bos:     set-signal-mask SIG_WALK;
cortex_manticore.bos:     set-signal-mask 0;
cortex_manticore.bos:     set-signal-mask 2;
cortex_manticore.bos:     set-signal-mask 4;
cortex_manticore.bos:     set-signal-mask 8;
cortex_manticore.bos:     set-signal-mask 16;
cortex_manticore.bos:     set-signal-mask 32;
cortex_manticore.bos:     set-signal-mask 64;
cortex_manticore.bos:     set-signal-mask 128;
cortex_manticore.bos:     set-signal-mask 256;
cortex_manticore.bos:     set-signal-mask 512;
cortex_manticore.bos:Killed(severity, corpsetype)
cortex_manticore.bos:             corpsetype = 1;
cortex_manticore.bos:             return (corpsetype);
cortex_manticore.bos:             corpsetype = 2;
cortex_manticore.bos:             return (corpsetype);
cortex_manticore.bos:             corpsetype = 3;
cortex_manticore.bos:             return (corpsetype);
cortex_manticore.bos:     corpsetype = 3;
cortex_manticore.bos:     return corpsetype;
cortex_manticore.lua_old: SetSignalMask(SIG_WALK)
cortex_manticore.lua_old:local function ResetLegs()
cortex_manticore.lua_old: ResetLegs()
cortex_manticore.lua_old:         SetSignalMask( SIG_AIM2)
cortex_manticore.lua_old:         SetSignalMask(math.pow(2,num))
cortex_manticore.lua_old:         -- SetSignalMask( )
cortex_advancedaircraftplant.bos:     set YARD_OPEN to 1;
cortex_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
cortex_advancedaircraftplant.bos:             set YARD_OPEN to 1;
cortex_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
cortex_advancedaircraftplant.bos:     set YARD_OPEN to 0;
cortex_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
cortex_advancedaircraftplant.bos:             set YARD_OPEN to 0;
cortex_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
cortex_advancedaircraftplant.bos:     set INBUILDSTANCE to 1;
cortex_advancedaircraftplant.bos:     set INBUILDSTANCE to 0;
cortex_advancedaircraftplant.bos:     set-signal-mask SIG_ACTIVATE;
cortex_advancedaircraftplant.bos:     set-signal-mask 0;
cortex_advancedaircraftplant.bos:Killed(severity, corpsetype)
cortex_advancedaircraftplant.bos:             corpsetype = 1 ;
cortex_advancedaircraftplant.bos:             return(corpsetype);
cortex_advancedaircraftplant.bos:             corpsetype = 2 ;
cortex_advancedaircraftplant.bos:             return(corpsetype);
cortex_advancedaircraftplant.bos:             corpsetype = 3 ;
cortex_advancedaircraftplant.bos:             return(corpsetype);
cortex_advancedaircraftplant.bos:     corpsetype = 3 ;
cortex_advancedaircraftplant.bos:     return corpsetype;
cortex_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 1;
cortex_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionaircraft.bos:Killed(severity, corpsetype)
cortex_advancedconstructionaircraft.bos:             corpsetype = 1 ;
cortex_advancedconstructionaircraft.bos:             return(corpsetype);
cortex_advancedconstructionaircraft.bos:             corpsetype = 2 ;
cortex_advancedconstructionaircraft.bos:             return(corpsetype);
cortex_advancedconstructionaircraft.bos:             corpsetype = 3 ;
cortex_advancedconstructionaircraft.bos:             return(corpsetype);
cortex_advancedconstructionaircraft.bos:     corpsetype = 3 ;
cortex_advancedconstructionaircraft.bos:     return corpsetype;
cortex_advancedconstructionbot.bos:     set-signal-mask SIG_WALK;
cortex_advancedconstructionbot.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionbot.bos:     set INBUILDSTANCE to 1;
cortex_advancedconstructionbot.bos:     set-signal-mask SIG_BUILD;
cortex_advancedconstructionbot.bos:     set-signal-mask 0;
cortex_advancedconstructionbot.bos:Killed(severity, corpsetype)
cortex_advancedconstructionbot.bos:             corpsetype = 1 ;
cortex_advancedconstructionbot.bos:             return(corpsetype);
cortex_advancedconstructionbot.bos:             corpsetype = 2 ;
cortex_advancedconstructionbot.bos:             return(corpsetype);
cortex_advancedconstructionbot.bos:             corpsetype = 3 ;
cortex_advancedconstructionbot.bos:             return(corpsetype);
cortex_advancedconstructionbot.bos:     corpsetype = 3 ;
cortex_advancedconstructionbot.bos:     return corpsetype;
cortex_advancedconstructionsub.bos:   set INBUILDSTANCE to 0;
cortex_advancedconstructionsub.bos:   set-signal-mask SIG_MOVE;
cortex_advancedconstructionsub.bos:   set INBUILDSTANCE to 1;
cortex_advancedconstructionsub.bos:   set-signal-mask SIG_BUILD;
cortex_advancedconstructionsub.bos:   set-signal-mask 0;
cortex_advancedconstructionsub.bos:Killed(severity, corpsetype)
cortex_advancedconstructionsub.bos:           corpsetype = 1 ;
cortex_advancedconstructionsub.bos:           return(corpsetype);
cortex_advancedconstructionsub.bos:           corpsetype = 2 ;
cortex_advancedconstructionsub.bos:           return(corpsetype);
cortex_advancedconstructionsub.bos:           corpsetype = 3 ;
cortex_advancedconstructionsub.bos:           return(corpsetype);
cortex_advancedconstructionsub.bos:   corpsetype = 3 ;
cortex_advancedconstructionsub.bos:   return corpsetype;
cortex_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionvehicle.bos:setSFXoccupy(state)
cortex_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 1;
cortex_advancedconstructionvehicle.bos:     set-signal-mask SIG_BUILD;
cortex_advancedconstructionvehicle.bos:     set-signal-mask 0;
cortex_advancedconstructionvehicle.bos:Killed(severity, corpsetype)
cortex_advancedconstructionvehicle.bos:             corpsetype = 1 ;
cortex_advancedconstructionvehicle.bos:             return(corpsetype);
cortex_advancedconstructionvehicle.bos:             corpsetype = 2 ;
cortex_advancedconstructionvehicle.bos:             return(corpsetype);
cortex_advancedconstructionvehicle.bos:             corpsetype = 3 ;
cortex_advancedconstructionvehicle.bos:             return(corpsetype);
cortex_advancedconstructionvehicle.bos:     corpsetype = 3 ;
cortex_advancedconstructionvehicle.bos:     return corpsetype;
Binary file cortex_advancedconstructionvehicle.cob matches
cortex_advancedsolarcollector.bos:// OffsetToScriptCodeIndexArray        54c
cortex_advancedsolarcollector.bos:// OffsetToScriptNameOffsetArray       568
cortex_advancedsolarcollector.bos:// OffsetToPieceNameOffsetArray        584
cortex_advancedsolarcollector.bos:// OffsetToScriptCode                  2c
cortex_advancedsolarcollector.bos:// OffsetToNameArray                   59c
cortex_advancedsolarcollector.bos:// OffsetToFirstName                   59c
cortex_advancedsolarcollector.bos:/*    57:*/       set ARMORED to 0;
cortex_advancedsolarcollector.bos:/*    5f:*/       set ARMORED to 1;
cortex_advancedsolarcollector.bos:/*    78:*/       set-signal-mask 2;
cortex_advancedsolarcollector.bos:/*    7d:*/       set ACTIVATION to 0;
cortex_advancedsolarcollector.bos:/*    85:*/       set ACTIVATION to 100;
cortex_advancedsolarcollector.bos:Killed(severity, corpsetype)
cortex_advancedsolarcollector.bos:          corpsetype = 1 ;
cortex_advancedsolarcollector.bos:          return(corpsetype);
cortex_advancedsolarcollector.bos:          corpsetype = 2 ;
cortex_advancedsolarcollector.bos:          return(corpsetype);
cortex_advancedsolarcollector.bos:          corpsetype = 3 ;
cortex_advancedsolarcollector.bos:          return(corpsetype);
cortex_advancedsolarcollector.bos:  corpsetype = 3 ;
cortex_advancedsolarcollector.bos:  return corpsetype;
cortex_advancedfusionreactor.bos:// OffsetToScriptCodeIndexArray        730
cortex_advancedfusionreactor.bos:// OffsetToScriptNameOffsetArray       758
cortex_advancedfusionreactor.bos:// OffsetToPieceNameOffsetArray        780
cortex_advancedfusionreactor.bos:// OffsetToScriptCode                  2c
cortex_advancedfusionreactor.bos:// OffsetToNameArray                   794
cortex_advancedfusionreactor.bos:// OffsetToFirstName                   794
cortex_advancedfusionreactor.bos:/*    b0:*/ set ARMORED to 1;
cortex_advancedfusionreactor.bos:/*    ba:*/ set ARMORED to 0;
cortex_advancedfusionreactor.bos:Killed(severity, corpsetype)
cortex_advancedfusionreactor.bos:/*   133:*/         corpsetype = 1;
cortex_advancedfusionreactor.bos:/*   14c:*/         return (corpsetype);
cortex_advancedfusionreactor.bos:/*   156:*/         corpsetype = 2;
cortex_advancedfusionreactor.bos:/*   16f:*/         return (corpsetype);
cortex_advancedfusionreactor.bos:/*   179:*/         corpsetype = 3;
cortex_advancedfusionreactor.bos:/*   19b:*/         return (corpsetype);
cortex_advancedfusionreactor.bos:/*   19e:*/ corpsetype = 3;
cortex_advancedfusionreactor.bos:/*   1c0:*/ return (corpsetype);
cortex_advancedgeothermalpowerplant.lua:            return 1 -- corpsetype
cortex_advancedgeothermalpowerplant.lua:            return 2 -- corpsetype
cortex_advancedgeothermalpowerplant.lua:            return 3 -- corpsetype
cortex_birdeater.bos:              // Set values for tilt
cortex_birdeater.bos:      set-signal-mask SIG_MOVE;
cortex_birdeater.bos:setSFXoccupy(Func_Var_1)
cortex_birdeater.bos:SetStunned(State)
cortex_birdeater.bos:      set-signal-mask 2;
cortex_birdeater.bos:Killed(severity, corpsetype)
cortex_birdeater.bos:              corpsetype = 1 ;
cortex_birdeater.bos:              return(corpsetype);
cortex_birdeater.bos:              corpsetype = 2 ;
cortex_birdeater.bos:              return(corpsetype);
cortex_birdeater.bos:              corpsetype = 3 ;
cortex_birdeater.bos:              return(corpsetype);
cortex_birdeater.bos:      corpsetype = 3 ;
cortex_birdeater.bos:      return corpsetype;
Binary file cortex_birdeater.cob matches
cortex_grunt.bos:      set-signal-mask SIG_WALK;
cortex_grunt.bos:      set-signal-mask SIG_WALK | SIG_AIM; //you might need this
cortex_grunt.bos:SetStunned(State)
cortex_grunt.bos:      set-signal-mask SIG_AIM;
cortex_grunt.bos:Killed(severity, corpsetype)
cortex_grunt.bos:              corpsetype = 1 ;
cortex_grunt.bos:              return(corpsetype);
cortex_grunt.bos:              corpsetype = 2 ;
cortex_grunt.bos:              return(corpsetype);
cortex_grunt.bos:              corpsetype = 3 ;
cortex_grunt.bos:              return(corpsetype);
cortex_grunt.bos:      corpsetype = 3 ;
cortex_grunt.bos:      return corpsetype;
Binary file cortex_grunt.cob matches
cortex_advancedbotlab.lua:    UnitScript.SetSignalMask(SIG_OPENCLOSE);
cortex_advancedbotlab.lua:    UnitScript.SetUnitValue(COB.INBUILDSTANCE, 1);
cortex_advancedbotlab.lua:    UnitScript.SetSignalMask(SIG_OPENCLOSE);
cortex_advancedbotlab.lua:    UnitScript.SetUnitValue(COB.INBUILDSTANCE, 0);
cortex_advancedbotlab.lua:    UnitScript.SetSignalMask(SIG_ACTIVATE);
cortex_advancedbotlab.lua:    UnitScript.SetSignalMask(SIG_BUILD);
cortex_advancedbotlab.lua:    local corpsetype;
cortex_advancedbotlab.lua:            corpsetype = 1;
cortex_advancedbotlab.lua:            return corpsetype;
cortex_advancedbotlab.lua:            corpsetype = 2;
cortex_advancedbotlab.lua:            return corpsetype;
cortex_advancedbotlab.lua:            corpsetype = 3;
cortex_advancedbotlab.lua:            return corpsetype;
cortex_advancedbotlab.lua:    corpsetype = 1;
cortex_advancedbotlab.lua:    return corpsetype;
cortex_duck.bos:    set-signal-mask SIG_MOVE;
cortex_duck.bos:SetMaxReloadTime(Func_Var_1)
cortex_duck.bos:SetStunned(State)
cortex_duck.bos:    set-signal-mask SIG_AIM;
cortex_duck.bos:Killed(severity, corpsetype)
cortex_duck.bos:            corpsetype = 1 ;
cortex_duck.bos:            return(corpsetype);
cortex_duck.bos:            corpsetype = 2 ;
cortex_duck.bos:            return(corpsetype);
cortex_duck.bos:            corpsetype = 3 ;
cortex_duck.bos:            return(corpsetype);
cortex_duck.bos:    corpsetype = 3 ;
cortex_duck.bos:    return corpsetype;
Binary file cortex_duck.cob matches
cortex_amphibiouscomplex.bos:// OffsetToScriptCodeIndexArray        bc0
cortex_amphibiouscomplex.bos:// OffsetToScriptNameOffsetArray       c00
cortex_amphibiouscomplex.bos:// OffsetToPieceNameOffsetArray        c40
cortex_amphibiouscomplex.bos:// OffsetToScriptCode                  2c
cortex_amphibiouscomplex.bos:// OffsetToNameArray                   c78
cortex_amphibiouscomplex.bos:// OffsetToFirstName                   c78
cortex_amphibiouscomplex.bos:/*    87:*/        set YARD_OPEN to 1;
cortex_amphibiouscomplex.bos:/*    92:*/                set BUGGER_OFF to 1;
cortex_amphibiouscomplex.bos:/*    9a:*/                set YARD_OPEN to 1;
cortex_amphibiouscomplex.bos:/*    a1:*/        set BUGGER_OFF to 0;
cortex_amphibiouscomplex.bos:/*    a9:*/        set YARD_OPEN to 0;
cortex_amphibiouscomplex.bos:/*    b3:*/                set BUGGER_OFF to 1;
cortex_amphibiouscomplex.bos:/*    bb:*/                set YARD_OPEN to 0;
cortex_amphibiouscomplex.bos:/*    c2:*/        set BUGGER_OFF to 0;
cortex_amphibiouscomplex.bos:/*    d0:*/        set INBUILDSTANCE to 1;
cortex_amphibiouscomplex.bos:/*    d8:*/        set INBUILDSTANCE to 0;
cortex_amphibiouscomplex.bos:/*   176:*/        set-signal-mask SIG_ACTIVATE;
cortex_amphibiouscomplex.bos:/*   181:*/        set-signal-mask 0;
cortex_amphibiouscomplex.bos:Killed(severity, corpsetype)
cortex_amphibiouscomplex.bos:           corpsetype = 1 ;
cortex_amphibiouscomplex.bos:           return(corpsetype);
cortex_amphibiouscomplex.bos:           corpsetype = 2 ;
cortex_amphibiouscomplex.bos:           return(corpsetype);
cortex_amphibiouscomplex.bos:           corpsetype = 3 ;
cortex_amphibiouscomplex.bos:           return(corpsetype);
cortex_amphibiouscomplex.bos:   corpsetype = 3 ;
cortex_amphibiouscomplex.bos:   return corpsetype;
cortex_aircraftplant.bos:// OffsetToScriptCodeIndexArray        11f0
cortex_aircraftplant.bos:// OffsetToScriptNameOffsetArray       123c
cortex_aircraftplant.bos:// OffsetToPieceNameOffsetArray        1288
cortex_aircraftplant.bos:// OffsetToScriptCode                  2c
cortex_aircraftplant.bos:// OffsetToNameArray                   12ac
cortex_aircraftplant.bos:// OffsetToFirstName                   12ac
cortex_aircraftplant.bos:/*   17e:*/   set YARD_OPEN to 1;
cortex_aircraftplant.bos:/*   189:*/           set BUGGER_OFF to 1;
cortex_aircraftplant.bos:/*   191:*/           set YARD_OPEN to 1;
cortex_aircraftplant.bos:/*   198:*/   set BUGGER_OFF to 0;
cortex_aircraftplant.bos:/*   1a0:*/   set YARD_OPEN to 0;
cortex_aircraftplant.bos:/*   1aa:*/           set BUGGER_OFF to 1;
cortex_aircraftplant.bos:/*   1b2:*/           set YARD_OPEN to 0;
cortex_aircraftplant.bos:/*   1b9:*/   set BUGGER_OFF to 0;
cortex_aircraftplant.bos:/*   1d5:*/   set INBUILDSTANCE to 1;
cortex_aircraftplant.bos:/*   1dd:*/   set INBUILDSTANCE to 0;
cortex_aircraftplant.bos:/*   2af:*/   set-signal-mask SIG_ACTIVATE;
cortex_aircraftplant.bos:/*   2ba:*/   set-signal-mask 0;
cortex_aircraftplant.bos:Killed(severity, corpsetype)
cortex_aircraftplant.bos:              corpsetype = 1 ;
cortex_aircraftplant.bos:              return(corpsetype);
cortex_aircraftplant.bos:              corpsetype = 2 ;
cortex_aircraftplant.bos:              return(corpsetype);
cortex_aircraftplant.bos:              corpsetype = 3 ;
cortex_aircraftplant.bos:              return(corpsetype);
cortex_aircraftplant.bos:      corpsetype = 3 ;
cortex_aircraftplant.bos:      return corpsetype;
cortex_wasp.bos://SetMaxReloadTime(Func_Var_1)
cortex_wasp.bos://SetStunned(State)
cortex_wasp.bos:     set-signal-mask SIG_AIM;
cortex_wasp.bos:     set-signal-mask 0;
cortex_wasp.bos:     set-signal-mask SIG_AIM;
cortex_wasp.bos:Killed(severity, corpsetype)
cortex_wasp.bos:             corpsetype = 1 ;
cortex_wasp.bos:             return(corpsetype);
cortex_wasp.bos:             corpsetype = 2 ;
cortex_wasp.bos:             return(corpsetype);
cortex_wasp.bos:             corpsetype = 3 ;
cortex_wasp.bos:             return(corpsetype);
cortex_wasp.bos:     corpsetype = 3 ;
cortex_wasp.bos:     return corpsetype;
cortex_advancedradartower.bos:// OffsetToScriptCodeIndexArray        624
cortex_advancedradartower.bos:// OffsetToScriptNameOffsetArray       64c
cortex_advancedradartower.bos:// OffsetToPieceNameOffsetArray        674
cortex_advancedradartower.bos:// OffsetToScriptCode                  2c
cortex_advancedradartower.bos:// OffsetToNameArray                   680
cortex_advancedradartower.bos:// OffsetToFirstName                   680
cortex_advancedradartower.bos:Killed(severity, corpsetype)
cortex_advancedradartower.bos:            corpsetype = 1 ;
cortex_advancedradartower.bos:            return(corpsetype);
cortex_advancedradartower.bos:            corpsetype = 2 ;
cortex_advancedradartower.bos:            return(corpsetype);
cortex_advancedradartower.bos:            corpsetype = 3 ;
cortex_advancedradartower.bos:            return(corpsetype);
cortex_advancedradartower.bos:    corpsetype = 3 ;
cortex_advancedradartower.bos:    return corpsetype;
cortex_arrowstorm.bos:SetMaxReloadTime(Func_Var_1)
cortex_arrowstorm.bos:    set-signal-mask 0;
cortex_arrowstorm.bos:SetStunned(State)
cortex_arrowstorm.bos:    set-signal-mask SIG_MOVE;
cortex_arrowstorm.bos:    set-signal-mask SIG_AIM_2;
cortex_arrowstorm.bos:    set-signal-mask SIG_AIM_3;
cortex_arrowstorm.bos:Killed(severity, corpsetype)
cortex_arrowstorm.bos:            corpsetype = 1 ;
cortex_arrowstorm.bos:            return(corpsetype);
cortex_arrowstorm.bos:            corpsetype = 2 ;
cortex_arrowstorm.bos:            return(corpsetype);
cortex_arrowstorm.bos:            corpsetype = 3 ;
cortex_arrowstorm.bos:            return(corpsetype);
cortex_arrowstorm.bos:    corpsetype = 3 ;
cortex_arrowstorm.bos:    return corpsetype;
Binary file cortex_arrowstorm.cob matches
cortex_advancedsonarstation.bos:Killed(severity, corpsetype)
cortex_advancedsonarstation.bos:            corpsetype = 1 ;
cortex_advancedsonarstation.bos:            return(corpsetype);
cortex_advancedsonarstation.bos:            corpsetype = 2 ;
cortex_advancedsonarstation.bos:            return(corpsetype);
cortex_advancedsonarstation.bos:            corpsetype = 3 ;
cortex_advancedsonarstation.bos:            return(corpsetype);
cortex_advancedsonarstation.bos:    corpsetype = 3 ;
cortex_advancedsonarstation.bos:    return corpsetype;
cortex_airrepairpad.bos:// OffsetToScriptCodeIndexArray        a94
cortex_airrepairpad.bos:// OffsetToScriptNameOffsetArray       aac
cortex_airrepairpad.bos:// OffsetToPieceNameOffsetArray        ac4
cortex_airrepairpad.bos:// OffsetToScriptCode                  2c
cortex_airrepairpad.bos:// OffsetToNameArray                   b04
cortex_airrepairpad.bos:// OffsetToFirstName                   b04
cortex_airrepairpad.bos:Killed(severity, corpsetype)
cortex_airrepairpad.bos:             corpsetype = 1 ;
cortex_airrepairpad.bos:             return(corpsetype);
cortex_airrepairpad.bos:             corpsetype = 2 ;
cortex_airrepairpad.bos:             return(corpsetype);
cortex_airrepairpad.bos:             corpsetype = 3 ;
cortex_airrepairpad.bos:             return(corpsetype);
cortex_airrepairpad.bos:     corpsetype = 3 ;
cortex_airrepairpad.bos:     return corpsetype;
cortex_advancedshipyard.bos:     set YARD_OPEN to 1;
cortex_advancedshipyard.bos:             set BUGGER_OFF to 1;
cortex_advancedshipyard.bos:             set YARD_OPEN to 1;
cortex_advancedshipyard.bos:     set BUGGER_OFF to 0;
cortex_advancedshipyard.bos:     set YARD_OPEN to 0;
cortex_advancedshipyard.bos:             set BUGGER_OFF to 1;
cortex_advancedshipyard.bos:             set YARD_OPEN to 0;
cortex_advancedshipyard.bos:     set BUGGER_OFF to 0;
cortex_advancedshipyard.bos:     set INBUILDSTANCE to 1;
cortex_advancedshipyard.bos:     set INBUILDSTANCE to 0;
cortex_advancedshipyard.bos:     set-signal-mask SIG_ACTIVATE;
cortex_advancedshipyard.bos:     set-signal-mask 0;
cortex_advancedshipyard.bos:Killed(severity, corpsetype)
cortex_advancedshipyard.bos:             corpsetype = 1 ;
cortex_advancedshipyard.bos:             return(corpsetype);
cortex_advancedshipyard.bos:             corpsetype = 2 ;
cortex_advancedshipyard.bos:             return(corpsetype);
cortex_advancedshipyard.bos:             corpsetype = 3 ;
cortex_advancedshipyard.bos:             return(corpsetype);
cortex_advancedshipyard.bos:     corpsetype = 3 ;
cortex_advancedshipyard.bos:     return corpsetype;
cortex_advancedshipyarde.bos:    set YARD_OPEN to 1;
cortex_advancedshipyarde.bos:            set BUGGER_OFF to 1;
cortex_advancedshipyarde.bos:            set YARD_OPEN to 1;
cortex_advancedshipyarde.bos:    set BUGGER_OFF to 0;
cortex_advancedshipyarde.bos:    set YARD_OPEN to 0;
cortex_advancedshipyarde.bos:            set BUGGER_OFF to 1;
cortex_advancedshipyarde.bos:            set YARD_OPEN to 0;
cortex_advancedshipyarde.bos:    set BUGGER_OFF to 0;
cortex_advancedshipyarde.bos:    set INBUILDSTANCE to 1;
cortex_advancedshipyarde.bos:    set INBUILDSTANCE to 0;
cortex_advancedshipyarde.bos:    set-signal-mask SIG_ACTIVATE;
cortex_advancedshipyarde.bos:    set-signal-mask 0;
cortex_advancedshipyarde.bos:Killed(severity, corpsetype)
cortex_advancedshipyarde.bos:            corpsetype = 1;
cortex_advancedshipyarde.bos:            return (corpsetype);
cortex_advancedshipyarde.bos:            corpsetype = 2;
cortex_advancedshipyarde.bos:            return (corpsetype);
cortex_advancedshipyarde.bos:            corpsetype = 3;
cortex_advancedshipyarde.bos:            return (corpsetype);
cortex_advancedshipyarde.bos:    corpsetype = 3;
cortex_advancedshipyarde.bos:    return (corpsetype);
cortex_lamprey.bos:     set-signal-mask SIG_AIM;
cortex_lamprey.bos:Killed(severity, corpsetype)
cortex_lamprey.bos:             corpsetype = 1 ;
cortex_lamprey.bos:             return(corpsetype);
cortex_lamprey.bos:             corpsetype = 2 ;
cortex_lamprey.bos:             return(corpsetype);
cortex_lamprey.bos:             corpsetype = 3 ;
cortex_lamprey.bos:             return(corpsetype);
cortex_lamprey.bos:     corpsetype = 3 ;
cortex_lamprey.bos:     return corpsetype;
cortex_advancedvehicleplant.bos:     set YARD_OPEN to 1;
cortex_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
cortex_advancedvehicleplant.bos:             set YARD_OPEN to 1;
cortex_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
cortex_advancedvehicleplant.bos:     set YARD_OPEN to 0;
cortex_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
cortex_advancedvehicleplant.bos:             set YARD_OPEN to 0;
cortex_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
cortex_advancedvehicleplant.bos:     set INBUILDSTANCE to 1;
cortex_advancedvehicleplant.bos:     set INBUILDSTANCE to 0;
cortex_advancedvehicleplant.bos:     set-signal-mask SIG_ACTIVATE;
cortex_advancedvehicleplant.bos:     set-signal-mask 0;
cortex_advancedvehicleplant.bos:Killed(severity, corpsetype)
cortex_advancedvehicleplant.bos:             corpsetype = 1 ;
cortex_advancedvehicleplant.bos:             return(corpsetype);
cortex_advancedvehicleplant.bos:             corpsetype = 2 ;
cortex_advancedvehicleplant.bos:             return(corpsetype);
cortex_advancedvehicleplant.bos:             corpsetype = 3 ;
cortex_advancedvehicleplant.bos:             return(corpsetype);
cortex_advancedvehicleplant.bos:     corpsetype = 3 ;
cortex_advancedvehicleplant.bos:     return corpsetype;
cortex_condor.bos:Killed(severity, corpsetype)
cortex_condor.bos:    corpsetype = 1 ;
cortex_condor.bos:            return(corpsetype);
cortex_condor.bos:    corpsetype = 2 ;
cortex_condor.bos:            return(corpsetype);
cortex_condor.bos:    corpsetype = 3 ;
cortex_condor.bos:            return(corpsetype);
cortex_condor.bos:    corpsetype = 3 ;
cortex_condor.bos:            return corpsetype;
cortex_banisher.bos:setSFXoccupy(state)
cortex_banisher.bos:SetMaxReloadTime(Func_Var_1)
cortex_banisher.bos:SetStunned(State)
cortex_banisher.bos:     set-signal-mask SIG_AIM;
cortex_banisher.bos:Killed(severity, corpsetype)
cortex_banisher.bos:             corpsetype = 1 ;
cortex_banisher.bos:             return(corpsetype);
cortex_banisher.bos:             corpsetype = 2 ;
cortex_banisher.bos:             return(corpsetype);
cortex_banisher.bos:             corpsetype = 3 ;
cortex_banisher.bos:             return(corpsetype);
cortex_banisher.bos:     corpsetype = 3 ;
cortex_banisher.bos:     return corpsetype;
Binary file cortex_banisher.cob matches
cortex_despot.bos:    set-signal-mask 16;
cortex_despot.bos:SetMaxReloadTime(Func_Var_1)
cortex_despot.bos:SetStunned(State)
cortex_despot.bos:    set-signal-mask SIG_AIM;
cortex_despot.bos:    set-signal-mask 0;
cortex_despot.bos:    set-signal-mask SIG_MOVE;
cortex_despot.bos:    set-signal-mask SIG_AIM_2;
cortex_despot.bos:Killed(severity, corpsetype)
cortex_despot.bos:            corpsetype = 1 ;
cortex_despot.bos:            return(corpsetype);
cortex_despot.bos:            corpsetype = 2 ;
cortex_despot.bos:            return(corpsetype);
cortex_despot.bos:            corpsetype = 3 ;
cortex_despot.bos:            return(corpsetype);
cortex_despot.bos:    corpsetype = 3 ;
cortex_despot.bos:    return corpsetype;
Binary file cortex_despot.cob matches
cortex_cerberus.bos:   set-signal-mask 4;
cortex_cerberus.bos:   set ACTIVATION to 100;
cortex_cerberus.bos:   set ACTIVATION to 0;
cortex_cerberus.bos:   set-signal-mask 0;
cortex_cerberus.bos:ResetFiretube()
cortex_cerberus.bos:   set-signal-mask SIG_AIM;
cortex_cerberus.bos:   set-signal-mask SIG_AIM;
cortex_cerberus.bos:   start-script ResetFiretube();
cortex_cerberus.bos:   set-signal-mask SIG_AIM;
cortex_cerberus.bos:Killed(severity, corpsetype)
cortex_cerberus.bos:           corpsetype = 1 ;
cortex_cerberus.bos:           return(corpsetype);
cortex_cerberus.bos:           corpsetype = 2 ;
cortex_cerberus.bos:           return(corpsetype);
cortex_cerberus.bos:           corpsetype = 3 ;
cortex_cerberus.bos:           return(corpsetype);
cortex_cerberus.bos:   corpsetype = 3 ;
cortex_cerberus.bos:   return corpsetype;
Binary file cortex_cerberus.cob matches
cortex_blackhydra.bos: set-signal-mask 16;
cortex_blackhydra.bos: set ARMORED to 1;
cortex_blackhydra.bos:SetMaxReloadTime(Func_Var_1)
cortex_blackhydra.bos:SetStunned(State)
cortex_blackhydra.bos: set-signal-mask SIG_MOVE;
cortex_blackhydra.bos: set-signal-mask SIG_AIM;
cortex_blackhydra.bos: set-signal-mask 2;
cortex_blackhydra.bos: set-signal-mask 4;
cortex_blackhydra.bos: set-signal-mask 8;
cortex_blackhydra.bos: set-signal-mask 16;
cortex_blackhydra.bos: set-signal-mask 32;
cortex_blackhydra.bos: set-signal-mask 64;
cortex_blackhydra.bos:Killed(severity, corpsetype)
cortex_blackhydra.bos:         corpsetype = 1 ;
cortex_blackhydra.bos:         return(corpsetype);
cortex_blackhydra.bos:         corpsetype = 2 ;
cortex_blackhydra.bos:         return(corpsetype);
cortex_blackhydra.bos:         corpsetype = 3 ;
cortex_blackhydra.bos:         return(corpsetype);
cortex_blackhydra.bos: corpsetype = 3 ;
cortex_blackhydra.bos: return corpsetype;
Binary file cortex_blackhydra.cob matches
cortex_calamity.lua:    SetSignalMask( SIG_AIM)
cortex_calamity.lua:                    return 1 -- corpsetype
cortex_calamity.lua:                    return 2 -- corpsetype
cortex_calamity.lua:                    return 3 -- corpsetype
cortex_shuriken.bos:      set-signal-mask SIG_AIM;
cortex_shuriken.bos:                      set UNKNOWN_UNIT_VALUE(82) to 0 - 1500 + get UNK
NOWN_UNIT_VALUE(82);
cortex_shuriken.bos:                      set UNKNOWN_UNIT_VALUE(82) to 1500 + get UNKNOWN
_UNIT_VALUE(82);
cortex_shuriken.bos:Killed(severity, corpsetype)
cortex_shuriken.bos:              corpsetype = 1 ;
cortex_shuriken.bos:              return(corpsetype);
cortex_shuriken.bos:              corpsetype = 2 ;
cortex_shuriken.bos:              return(corpsetype);
cortex_shuriken.bos:              corpsetype = 3 ;
cortex_shuriken.bos:              return(corpsetype);
cortex_shuriken.bos:      corpsetype = 3 ;
cortex_shuriken.bos:      return corpsetype;
cortex_constructionaircraft.bos:      set INBUILDSTANCE to 1;
cortex_constructionaircraft.bos:      set INBUILDSTANCE to 0;
cortex_constructionaircraft.bos:Killed(severity, corpsetype)
cortex_constructionaircraft.bos:              corpsetype = 1 ;
cortex_constructionaircraft.bos:              return(corpsetype);
cortex_constructionaircraft.bos:              corpsetype = 2 ;
cortex_constructionaircraft.bos:              return(corpsetype);
cortex_constructionaircraft.bos:              corpsetype = 3 ;
cortex_constructionaircraft.bos:              return(corpsetype);
cortex_constructionaircraft.bos:      corpsetype = 3 ;
cortex_constructionaircraft.bos:      return corpsetype;
cortex_sumo.bos:     set-signal-mask SIG_WALK;
cortex_sumo.bos:SetMaxReloadTime(Func_Var_1)
cortex_sumo.bos:SetStunned(State)
cortex_sumo.bos:     set-signal-mask SIG_AIM;
cortex_sumo.bos:Killed(severity, corpsetype)
cortex_sumo.bos:             corpsetype = 1 ;
cortex_sumo.bos:             return(corpsetype);
cortex_sumo.bos:             corpsetype = 2 ;
cortex_sumo.bos:             return(corpsetype);
cortex_sumo.bos:             corpsetype = 3 ;
cortex_sumo.bos:             return(corpsetype);
cortex_sumo.bos:     corpsetype = 3 ;
cortex_sumo.bos:     return corpsetype;
Binary file cortex_sumo.cob matches
cortex_oasis.bos:   set-signal-mask SIG_MOVE;
cortex_oasis.bos:   set-signal-mask 0;
cortex_oasis.bos:SetStunned(State)
cortex_oasis.bos:   set-signal-mask SIG_AIM;
cortex_oasis.bos:Killed(severity, corpsetype)
cortex_oasis.bos:           corpsetype = 1 ;
cortex_oasis.bos:           return(corpsetype);
cortex_oasis.bos:           corpsetype = 2 ;
cortex_oasis.bos:           return(corpsetype);
cortex_oasis.bos:           corpsetype = 3 ;
cortex_oasis.bos:           return(corpsetype);
cortex_oasis.bos:   corpsetype = 3 ;
cortex_oasis.bos:   return corpsetype;
Binary file cortex_oasis.cob matches
cortex_catapult.bos:     set-signal-mask SIG_WALK;
cortex_catapult.bos:SetStunned(State)
cortex_catapult.bos:     set-signal-mask SIG_AIM;
cortex_catapult.bos:Killed(severity, corpsetype)
cortex_catapult.bos:             corpsetype = 1 ;
cortex_catapult.bos:             return(corpsetype);
cortex_catapult.bos:             corpsetype = 2 ;
cortex_catapult.bos:             return(corpsetype);
cortex_catapult.bos:             corpsetype = 3 ;
cortex_catapult.bos:             return(corpsetype);
cortex_catapult.bos:     corpsetype = 3 ;
cortex_catapult.bos:     return corpsetype;
Binary file cortex_catapult.cob matches
cortex_constructionhovercraft.bos:      set INBUILDSTANCE to 0;
cortex_constructionhovercraft.bos:              // Set values for tilt
cortex_constructionhovercraft.bos:      set-signal-mask SIG_MOVE;
cortex_constructionhovercraft.bos:setSFXoccupy(state)
cortex_constructionhovercraft.bos:      set INBUILDSTANCE to 1;
cortex_constructionhovercraft.bos:      set-signal-mask SIG_BUILD;
cortex_constructionhovercraft.bos:      set-signal-mask 0;
cortex_constructionhovercraft.bos:Killed(severity, corpsetype)
cortex_constructionhovercraft.bos:              corpsetype = 1 ;
cortex_constructionhovercraft.bos:              return(corpsetype);
cortex_constructionhovercraft.bos:              corpsetype = 2 ;
cortex_constructionhovercraft.bos:              return(corpsetype);
cortex_constructionhovercraft.bos:              corpsetype = 3 ;
cortex_constructionhovercraft.bos:              return(corpsetype);
cortex_constructionhovercraft.bos:      corpsetype = 3 ;
cortex_constructionhovercraft.bos:      return corpsetype;
Binary file cortex_constructionhovercraft.cob matches
cortex_constructionbot.bos:      set-signal-mask SIG_WALK;
cortex_constructionbot.bos:      set INBUILDSTANCE to 0;
cortex_constructionbot.bos:      set INBUILDSTANCE to 1;
cortex_constructionbot.bos:      set-signal-mask SIG_BUILD;
cortex_constructionbot.bos:      set-signal-mask 0;
cortex_constructionbot.bos:Killed(severity, corpsetype)
cortex_constructionbot.bos:              corpsetype = 1 ;
cortex_constructionbot.bos:              return(corpsetype);
cortex_constructionbot.bos:              corpsetype = 2 ;
cortex_constructionbot.bos:              return(corpsetype);
cortex_constructionbot.bos:              corpsetype = 3 ;
cortex_constructionbot.bos:              return(corpsetype);
cortex_constructionbot.bos:      corpsetype = 3 ;
cortex_constructionbot.bos:      return corpsetype;
cortex_commander.bos:     set-signal-mask SIG_WALK;
cortex_commander.bos:     set-signal-mask SIG_AIM;
cortex_commander.bos:     set-signal-mask SIG_AIM;
cortex_commander.bos:     set-signal-mask SIG_AIM;
cortex_commander.bos:     set-signal-mask SIG_AIM;
cortex_commander.bos:     //set-signal-mask SIG_AIM;
cortex_commander.bos:     set INBUILDSTANCE to 1;
cortex_commander.bos:     set-signal-mask SIG_AIM;
cortex_commander.bos:     set INBUILDSTANCE to 0;
cortex_commander.bos:     set-signal-mask SIG_AIM;
cortex_commander.bos:Killed( severity, corpsetype )
cortex_commander.bos:     corpsetype = 1;
cortex_commander.bos:     return(corpsetype);
cortex_commander_lus.lua: SetSignalMask(SIG_WALK)
cortex_commander_lus.lua: SetSignalMask(SIG_AIM)
cortex_commander_lus.lua:                 SetSignalMask(SIG_AIM)
cortex_commander_lus.lua:                 SetSignalMask(SIG_AIM)
cortex_commander_lus.lua: Spring.UnitScript.SetUnitValue(COB.INBUILDSTANCE, true)
cortex_commander_lus.lua: Spring.UnitScript.SetUnitValue(COB.INBUILDSTANCE, false)
cortex_commander_lus.lua: SetSignalMask(SIG_AIM)
cortex_commander_lus.lua: SetSignalMask(SIG_AIM)
cortex_commanderboss.bos: set-signal-mask SIG_WALK;
cortex_commanderboss.bos: set-signal-mask SIG_AIM;
cortex_commanderboss.bos: set-signal-mask SIG_AIM;
cortex_commanderboss.bos: set-signal-mask SIG_AIM;
cortex_commanderboss.bos: set-signal-mask SIG_AIM;
cortex_commanderboss.bos: //set-signal-mask SIG_AIM;
cortex_commanderboss.bos: set INBUILDSTANCE to 1;
cortex_commanderboss.bos: set-signal-mask SIG_AIM;
cortex_commanderboss.bos: set INBUILDSTANCE to 0;
cortex_commanderboss.bos: set-signal-mask SIG_AIM;
cortex_commanderboss.bos:Killed( severity, corpsetype )
cortex_commanderboss.bos: corpsetype = 1;
cortex_commanderboss.bos: return(corpsetype);
cortex_trasher.bos:   set-signal-mask SIG_WALK;
cortex_trasher.bos:SetMaxReloadTime(Func_Var_1)
cortex_trasher.bos:SetStunned(State)
cortex_trasher.bos:   set-signal-mask SIG_AIM_3;
cortex_trasher.bos:Killed(severity, corpsetype)
cortex_trasher.bos:           corpsetype = 1 ;
cortex_trasher.bos:           return(corpsetype);
cortex_trasher.bos:           corpsetype = 2 ;
cortex_trasher.bos:           return(corpsetype);
cortex_trasher.bos:           corpsetype = 3 ;
cortex_trasher.bos:           return(corpsetype);
cortex_trasher.bos:   corpsetype = 3 ;
cortex_trasher.bos:   return corpsetype;
Binary file cortex_trasher.cob matches
cortex_buccaneer.bos:SetMaxReloadTime(Func_Var_1)
cortex_buccaneer.bos:    set-signal-mask 0;
cortex_buccaneer.bos:SetStunned(State)
cortex_buccaneer.bos:    set-signal-mask 0;
cortex_buccaneer.bos:    set-signal-mask SIG_MOVE;
cortex_buccaneer.bos:    set-signal-mask SIG_AIM_2;
cortex_buccaneer.bos:    set-signal-mask SIG_AIM;
cortex_buccaneer.bos:Killed(severity, corpsetype)
cortex_buccaneer.bos:            corpsetype = 1 ;
cortex_buccaneer.bos:            return(corpsetype);
cortex_buccaneer.bos:            corpsetype = 2 ;
cortex_buccaneer.bos:            return(corpsetype);
cortex_buccaneer.bos:            corpsetype = 3 ;
cortex_buccaneer.bos:            return(corpsetype);
cortex_buccaneer.bos:    corpsetype = 3 ;
cortex_buccaneer.bos:    return corpsetype;
Binary file cortex_buccaneer.cob matches
cortex_dragonold.bos:SetMaxReloadTime(Func_Var_1)
cortex_dragonold.bos:SetStunned(State)
cortex_dragonold.bos:     set-signal-mask SIG_AIM;
cortex_dragonold.bos:     set-signal-mask SIG_AIM_2;
cortex_dragonold.bos:     set-signal-mask SIG_AIM_3;
cortex_dragonold.bos:Killed(severity, corpsetype)
cortex_dragonold.bos:             corpsetype = 1 ;
cortex_dragonold.bos:             return(corpsetype);
cortex_dragonold.bos:             corpsetype = 2 ;
cortex_dragonold.bos:             return(corpsetype);
cortex_dragonold.bos:             corpsetype = 3 ;
cortex_dragonold.bos:             return(corpsetype);
cortex_dragonold.bos:     corpsetype = 3 ;
cortex_dragonold.bos:     return corpsetype;
Binary file cortex_dragonold.cob matches
cortex_constructionship.bos:      set-signal-mask SIG_MOVE;
cortex_constructionship.bos:      set INBUILDSTANCE to 1;
cortex_constructionship.bos:      set INBUILDSTANCE to 0;
cortex_constructionship.bos:Killed(severity, corpsetype)
cortex_constructionship.bos:              corpsetype = 1 ;
cortex_constructionship.bos:              return(corpsetype);
cortex_constructionship.bos:              corpsetype = 2 ;
cortex_constructionship.bos:              return(corpsetype);
cortex_constructionship.bos:              corpsetype = 3 ;
cortex_constructionship.bos:              return(corpsetype);
cortex_constructionship.bos:      corpsetype = 3 ;
cortex_constructionship.bos:      return corpsetype;
cortex_constructionseaplane.bos:     set INBUILDSTANCE to 1;
cortex_constructionseaplane.bos:     set INBUILDSTANCE to 0;
cortex_constructionseaplane.bos:Killed(severity, corpsetype)
cortex_constructionseaplane.bos:             corpsetype = 1 ;
cortex_constructionseaplane.bos:             return(corpsetype);
cortex_constructionseaplane.bos:             corpsetype = 2 ;
cortex_constructionseaplane.bos:             return(corpsetype);
cortex_constructionseaplane.bos:             corpsetype = 3 ;
cortex_constructionseaplane.bos:             return(corpsetype);
cortex_constructionseaplane.bos:     corpsetype = 3 ;
cortex_constructionseaplane.bos:     return corpsetype;
cortex_cutlass.bos:     set-signal-mask 0;
cortex_cutlass.bos:SetStunned(State)
cortex_cutlass.bos:setSFXoccupy(Func_Var_1)
cortex_cutlass.bos:Killed(severity, corpsetype)
cortex_cutlass.bos:             corpsetype = 1 ;
cortex_cutlass.bos:             return(corpsetype);
cortex_cutlass.bos:             corpsetype = 2 ;
cortex_cutlass.bos:             return(corpsetype);
cortex_cutlass.bos:             corpsetype = 3 ;
cortex_cutlass.bos:             return(corpsetype);
cortex_cutlass.bos:     corpsetype = 3 ;
cortex_cutlass.bos:     return corpsetype;
Binary file cortex_cutlass.cob matches
cortex_constructionvehicle.bos:      set INBUILDSTANCE to 0;
cortex_constructionvehicle.bos:      set INBUILDSTANCE to 1;
cortex_constructionvehicle.bos:      set-signal-mask SIG_BUILD;
cortex_constructionvehicle.bos:      set-signal-mask 0;
cortex_constructionvehicle.bos:Killed(severity, corpsetype)
cortex_constructionvehicle.bos:              corpsetype = 1 ;
cortex_constructionvehicle.bos:              return(corpsetype);
cortex_constructionvehicle.bos:              corpsetype = 2 ;
cortex_constructionvehicle.bos:              return(corpsetype);
cortex_constructionvehicle.bos:              corpsetype = 3 ;
cortex_constructionvehicle.bos:              return(corpsetype);
cortex_constructionvehicle.bos:      corpsetype = 3 ;
cortex_constructionvehicle.bos:      return corpsetype;
cortex_jellyfish.bos:// OffsetToScriptCodeIndexArray        77c
cortex_jellyfish.bos:// OffsetToScriptNameOffsetArray       79c
cortex_jellyfish.bos:// OffsetToPieceNameOffsetArray        7bc
cortex_jellyfish.bos:// OffsetToScriptCode                  2c
cortex_jellyfish.bos:// OffsetToNameArray                   7cc
cortex_jellyfish.bos:// OffsetToFirstName                   7cc
cortex_jellyfish.bos:/*    95:*/   set-signal-mask SIG_AIM;
cortex_jellyfish.bos:Killed(severity, corpsetype)
cortex_jellyfish.bos:              corpsetype = 1 ;
cortex_jellyfish.bos:              return(corpsetype);
cortex_jellyfish.bos:              corpsetype = 2 ;
cortex_jellyfish.bos:              return(corpsetype);
cortex_jellyfish.bos:              corpsetype = 3 ;
cortex_jellyfish.bos:              return(corpsetype);
cortex_jellyfish.bos:      corpsetype = 3 ;
cortex_jellyfish.bos:      return corpsetype;
cortex_calamity.bos:    set ARMORED to 0;
cortex_calamity.bos:    set ARMORED to 1;
cortex_calamity.bos:SetMaxReloadTime(Func_Var_1)
cortex_calamity.bos:    set-signal-mask SIG_AIM;
cortex_calamity.bos:    set-signal-mask SIG_AIM_2;
cortex_calamity.bos:    set-signal-mask SIG_AIM;
cortex_calamity.bos:    set-signal-mask SIG_AIM_2;
cortex_calamity.bos:    set-signal-mask SIG_AIM_3;
cortex_calamity.bos:Killed(severity, corpsetype)
cortex_calamity.bos:            corpsetype = 1 ;
cortex_calamity.bos:            return(corpsetype);
cortex_calamity.bos:            corpsetype = 2 ;
cortex_calamity.bos:            return(corpsetype);
cortex_calamity.bos:            corpsetype = 3 ;
cortex_calamity.bos:            return(corpsetype);
cortex_calamity.bos:    corpsetype = 3 ;
cortex_calamity.bos:    return corpsetype;
Binary file cortex_calamity.cob matches
cortex_dragonsteeth.bos:// OffsetToScriptCodeIndexArray        38
cortex_dragonsteeth.bos:// OffsetToScriptNameOffsetArray       3c
cortex_dragonsteeth.bos:// OffsetToPieceNameOffsetArray        40
cortex_dragonsteeth.bos:// OffsetToScriptCode                  2c
cortex_dragonsteeth.bos:// OffsetToNameArray                   40
cortex_dragonsteeth.bos:// OffsetToFirstName                   40
cortex_navalbirdshot.bos:SetMaxReloadTime(Func_Var_1)
cortex_navalbirdshot.bos:SetStunned(State)
cortex_navalbirdshot.bos:    set-signal-mask SIG_AIM;
cortex_navalbirdshot.bos:Killed(severity, corpsetype)
cortex_navalbirdshot.bos:            corpsetype = 1 ;
cortex_navalbirdshot.bos:            return(corpsetype);
cortex_navalbirdshot.bos:            corpsetype = 2 ;
cortex_navalbirdshot.bos:            return(corpsetype);
cortex_navalbirdshot.bos:            corpsetype = 3 ;
cortex_navalbirdshot.bos:            return(corpsetype);
cortex_navalbirdshot.bos:    corpsetype = 3 ;
cortex_navalbirdshot.bos:    return corpsetype;
Binary file cortex_navalbirdshot.cob matches
cortex_eradicator.bos:SetStunned(State)
cortex_eradicator.bos:    set-signal-mask SIG_AIM;
cortex_eradicator.bos:            set CHANGE_TARGET to 1;
cortex_eradicator.bos:Killed(severity, corpsetype)
cortex_eradicator.bos:            corpsetype = 1 ;
cortex_eradicator.bos:            return(corpsetype);
cortex_eradicator.bos:            corpsetype = 2 ;
cortex_eradicator.bos:            return(corpsetype);
cortex_eradicator.bos:            corpsetype = 3 ;
cortex_eradicator.bos:            return(corpsetype);
cortex_eradicator.bos:    corpsetype = 3 ;
cortex_eradicator.bos:    return corpsetype;
Binary file cortex_eradicator.cob matches
cortex_energystorage.bos:// OffsetToScriptCodeIndexArray        3e8
cortex_energystorage.bos:// OffsetToScriptNameOffsetArray       3f8
cortex_energystorage.bos:// OffsetToPieceNameOffsetArray        408
cortex_energystorage.bos:// OffsetToScriptCode                  2c
cortex_energystorage.bos:// OffsetToNameArray                   414
cortex_energystorage.bos:// OffsetToFirstName                   414
cortex_energystorage.bos:Killed(severity, corpsetype)
cortex_energystorage.bos:           corpsetype = 1 ;
cortex_energystorage.bos:           return(corpsetype);
cortex_energystorage.bos:           corpsetype = 2 ;
cortex_energystorage.bos:           return(corpsetype);
cortex_energystorage.bos:           corpsetype = 3 ;
cortex_energystorage.bos:           return(corpsetype);
cortex_energystorage.bos:   corpsetype = 3 ;
cortex_energystorage.bos:   return corpsetype;
cortex_supporter.bos:SetMaxReloadTime(Func_Var_1)
cortex_supporter.bos:SetStunned(State)
cortex_supporter.bos:   set-signal-mask SIG_MOVE;
cortex_supporter.bos:   set-signal-mask SIG_AIM;
cortex_supporter.bos:   set-signal-mask SIG_AIM_2;
cortex_supporter.bos:Killed(severity, corpsetype)
cortex_supporter.bos:           corpsetype = 1 ;
cortex_supporter.bos:           return(corpsetype);
cortex_supporter.bos:           corpsetype = 2 ;
cortex_supporter.bos:           return(corpsetype);
cortex_supporter.bos:           corpsetype = 3 ;
cortex_supporter.bos:           return(corpsetype);
cortex_supporter.bos:   corpsetype = 3 ;
cortex_supporter.bos:   return corpsetype;
Binary file cortex_supporter.cob matches
cortex_obscurer.bos:            set ACTIVATION to 0;
cortex_obscurer.bos:SetStunned(State)
cortex_obscurer.bos:            set-signal-mask 2;
cortex_obscurer.bos:            set ACTIVATION to 0;
cortex_obscurer.bos:            set ACTIVATION to 100;
cortex_obscurer.bos:Killed(severity, corpsetype)
cortex_obscurer.bos:            corpsetype = 1 ;
cortex_obscurer.bos:            return(corpsetype);
cortex_obscurer.bos:            corpsetype = 2 ;
cortex_obscurer.bos:            return(corpsetype);
cortex_obscurer.bos:            corpsetype = 3 ;
cortex_obscurer.bos:            return(corpsetype);
cortex_obscurer.bos:    corpsetype = 3 ;
cortex_obscurer.bos:    return corpsetype;
Binary file cortex_obscurer.cob matches
cortex_exploiter.bos:SetMaxReloadTime(Func_Var_1)
cortex_exploiter.bos:     set-signal-mask 0;
cortex_exploiter.bos:SetStunned(State)
cortex_exploiter.bos:SetSpeed(Func_Var_1)
cortex_exploiter.bos:     set-signal-mask SIG_AIM;
cortex_exploiter.bos:Killed(severity, corpsetype)
cortex_exploiter.bos:             corpsetype = 1 ;
cortex_exploiter.bos:             return(corpsetype);
cortex_exploiter.bos:             corpsetype = 2 ;
cortex_exploiter.bos:             return(corpsetype);
cortex_exploiter.bos:             corpsetype = 3 ;
cortex_exploiter.bos:             return(corpsetype);
cortex_exploiter.bos:     corpsetype = 3 ;
cortex_exploiter.bos:     return corpsetype;
Binary file cortex_exploiter.cob matches
cortex_beholder.bos:Killed(severity, corpsetype)
cortex_beholder.bos:    corpsetype = 3;
cortex_beholder.bos:    return (corpsetype);
cortex_twitcher.bos:    set-signal-mask SIG_BUILD;
cortex_twitcher.bos:    set INBUILDSTANCE to 1;
cortex_twitcher.bos:    set-signal-mask SIG_BUILD;
cortex_twitcher.bos:    set INBUILDSTANCE to 0;
cortex_twitcher.bos:Killed(severity, corpsetype)
cortex_twitcher.bos:            corpsetype = 1 ;
cortex_twitcher.bos:            return(corpsetype);
cortex_twitcher.bos:            corpsetype = 2 ;
cortex_twitcher.bos:            return(corpsetype);
cortex_twitcher.bos:            corpsetype = 3 ;
cortex_twitcher.bos:            return(corpsetype);
cortex_twitcher.bos:    corpsetype = 3 ;
cortex_twitcher.bos:    return corpsetype;
cortex_navalpinpointer.bos:Killed(severity, corpsetype)
cortex_navalpinpointer.bos:            corpsetype = 1 ;
cortex_navalpinpointer.bos:            return(corpsetype);
cortex_navalpinpointer.bos:            corpsetype = 2 ;
cortex_navalpinpointer.bos:            return(corpsetype);
cortex_navalpinpointer.bos:            corpsetype = 3 ;
cortex_navalpinpointer.bos:            return(corpsetype);
cortex_navalpinpointer.bos:    corpsetype = 3 ;
cortex_navalpinpointer.bos:    return corpsetype;
cortex_rascal.bos:SetMaxReloadTime(Func_Var_1)
cortex_rascal.bos:SetStunned(State)
cortex_rascal.bos:     set-signal-mask SIG_AIM;
cortex_rascal.bos:Killed(severity, corpsetype)
cortex_rascal.bos:             corpsetype = 1 ;
cortex_rascal.bos:             return(corpsetype);
cortex_rascal.bos:             corpsetype = 2 ;
cortex_rascal.bos:             return(corpsetype);
cortex_rascal.bos:             corpsetype = 3 ;
cortex_rascal.bos:             return(corpsetype);
cortex_rascal.bos:     corpsetype = 3 ;
cortex_rascal.bos:     return corpsetype;
Binary file cortex_rascal.cob matches
cortex_atoll.bos:Killed(severity, corpsetype)
cortex_atoll.bos:           corpsetype = 1 ;
cortex_atoll.bos:           return(corpsetype);
cortex_atoll.bos:           corpsetype = 2 ;
cortex_atoll.bos:           return(corpsetype);
cortex_atoll.bos:           corpsetype = 3 ;
cortex_atoll.bos:           return(corpsetype);
cortex_atoll.bos:   corpsetype = 3 ;
cortex_atoll.bos:   return corpsetype;
cortex_coral.bos:    set-signal-mask SIG_AIM;
cortex_coral.bos:Killed(severity, corpsetype)
cortex_coral.bos:            corpsetype = 1 ;
cortex_coral.bos:            return(corpsetype);
cortex_coral.bos:            corpsetype = 2 ;
cortex_coral.bos:            return(corpsetype);
cortex_coral.bos:            corpsetype = 3 ;
cortex_coral.bos:            return(corpsetype);
cortex_coral.bos:    corpsetype = 3 ;
cortex_coral.bos:    return corpsetype;
cortex_navalhovercraftplatform.bos:// OffsetToScriptCodeIndexArray        11e4
cortex_navalhovercraftplatform.bos:// OffsetToScriptNameOffsetArray       1230
cortex_navalhovercraftplatform.bos:// OffsetToPieceNameOffsetArray        127c
cortex_navalhovercraftplatform.bos:// OffsetToScriptCode                  2c
cortex_navalhovercraftplatform.bos:// OffsetToNameArray                   12a4
cortex_navalhovercraftplatform.bos:// OffsetToFirstName                   12a4
cortex_navalhovercraftplatform.bos:/*   162:*/  set YARD_OPEN to 1;
cortex_navalhovercraftplatform.bos:/*   16d:*/          set BUGGER_OFF to 1;
cortex_navalhovercraftplatform.bos:/*   175:*/          set YARD_OPEN to 1;
cortex_navalhovercraftplatform.bos:/*   17c:*/  set BUGGER_OFF to 0;
cortex_navalhovercraftplatform.bos:/*   184:*/  set YARD_OPEN to 0;
cortex_navalhovercraftplatform.bos:/*   18e:*/          set BUGGER_OFF to 1;
cortex_navalhovercraftplatform.bos:/*   196:*/          set YARD_OPEN to 0;
cortex_navalhovercraftplatform.bos:/*   19d:*/  set BUGGER_OFF to 0;
cortex_navalhovercraftplatform.bos:/*   1bb:*/  set INBUILDSTANCE to 1;
cortex_navalhovercraftplatform.bos:/*   1c3:*/  set INBUILDSTANCE to 0;
cortex_navalhovercraftplatform.bos:/*   28c:*/  set-signal-mask SIG_ACTIVATE;
cortex_navalhovercraftplatform.bos:/*   297:*/  set-signal-mask 0;
cortex_navalhovercraftplatform.bos:Killed(severity, corpsetype)
cortex_navalhovercraftplatform.bos:             corpsetype = 1 ;
cortex_navalhovercraftplatform.bos:             return(corpsetype);
cortex_navalhovercraftplatform.bos:             corpsetype = 2 ;
cortex_navalhovercraftplatform.bos:             return(corpsetype);
cortex_navalhovercraftplatform.bos:             corpsetype = 3 ;
cortex_navalhovercraftplatform.bos:             return(corpsetype);
cortex_navalhovercraftplatform.bos:     corpsetype = 3 ;
cortex_navalhovercraftplatform.bos:     return corpsetype;
corfink.bos:Killed(severity, corpsetype)
corfink.bos:            corpsetype = 1 ;
corfink.bos:            return(corpsetype);
corfink.bos:            corpsetype = 2 ;
corfink.bos:            return(corpsetype);
corfink.bos:            corpsetype = 3 ;
corfink.bos:            return(corpsetype);
corfink.bos:    corpsetype = 3 ;
corfink.bos:    return corpsetype;
corflak.bos:SetStunned(State)
corflak.bos:    set-signal-mask SIG_AIM;
corflak.bos:Killed(severity, corpsetype)
corflak.bos:            corpsetype = 1 ;
corflak.bos:            return(corpsetype);
corflak.bos:            corpsetype = 2 ;
corflak.bos:            return(corpsetype);
corflak.bos:            corpsetype = 3 ;
corflak.bos:            return(corpsetype);
corflak.bos:    corpsetype = 3 ;
corflak.bos:    return corpsetype;
Binary file corflak.cob matches
corfmd.bos:SetMaxReloadTime(Func_Var_1)
corfmd.bos:/*   1d4:*/  set-signal-mask SIG_AIM;
corfmd.bos:Killed(severity, corpsetype)
corfmd.bos:             corpsetype = 1 ;
corfmd.bos:             return(corpsetype);
corfmd.bos:             corpsetype = 2 ;
corfmd.bos:             return(corpsetype);
corfmd.bos:             corpsetype = 3 ;
corfmd.bos:             return(corpsetype);
corfmd.bos:     corpsetype = 3 ;
corfmd.bos:     return corpsetype;
Binary file corfmd.cob matches
cortex_navalenergyconverter.bos:                    set ACTIVATION to 1;
cortex_navalenergyconverter.bos:                    set ACTIVATION to 0;
cortex_navalenergyconverter.bos:Killed(severity, corpsetype)
cortex_navalenergyconverter.bos:            corpsetype = 1 ;
cortex_navalenergyconverter.bos:            return(corpsetype);
cortex_navalenergyconverter.bos:            corpsetype = 2 ;
cortex_navalenergyconverter.bos:            return(corpsetype);
cortex_navalenergyconverter.bos:            corpsetype = 3 ;
cortex_navalenergyconverter.bos:            return(corpsetype);
cortex_navalenergyconverter.bos:    corpsetype = 3 ;
cortex_navalenergyconverter.bos:    return corpsetype;
cortex_radarsonartower.bos:Killed(severity, corpsetype)
cortex_radarsonartower.bos:            corpsetype = 1 ;
cortex_radarsonartower.bos:            return(corpsetype);
cortex_radarsonartower.bos:            corpsetype = 2 ;
cortex_radarsonartower.bos:            return(corpsetype);
cortex_radarsonartower.bos:            corpsetype = 3 ;
cortex_radarsonartower.bos:            return(corpsetype);
cortex_radarsonartower.bos:    corpsetype = 3 ;
cortex_radarsonartower.bos:    return corpsetype;
cortex_janitor.bos:SetStunned(State)
cortex_janitor.bos:   set-signal-mask SIG_AIM;
cortex_janitor.bos:Killed(severity, corpsetype)
cortex_janitor.bos:           corpsetype = 1;
cortex_janitor.bos:           return (corpsetype);
cortex_janitor.bos:           corpsetype = 2;
cortex_janitor.bos:           return (corpsetype);
cortex_janitor.bos:           corpsetype = 3;
cortex_janitor.bos:           return (corpsetype);
cortex_janitor.bos:   corpsetype = 3;
cortex_janitor.bos:   return (corpsetype);
Binary file cortex_janitor.cob matches
cortex_slingshot.bos:SetStunned(State)
cortex_slingshot.bos:     set-signal-mask SIG_AIM;
cortex_slingshot.bos:Killed(severity, corpsetype)
cortex_slingshot.bos:             corpsetype = 1 ;
cortex_slingshot.bos:             return(corpsetype);
cortex_slingshot.bos:             corpsetype = 2 ;
cortex_slingshot.bos:             return(corpsetype);
cortex_slingshot.bos:             corpsetype = 3 ;
cortex_slingshot.bos:             return(corpsetype);
cortex_slingshot.bos:     corpsetype = 3 ;
cortex_slingshot.bos:     return corpsetype;
Binary file cortex_slingshot.cob matches
cortex_fusionreactor.bos:// OffsetToScriptCodeIndexArray        52c
cortex_fusionreactor.bos:// OffsetToScriptNameOffsetArray       53c
cortex_fusionreactor.bos:// OffsetToPieceNameOffsetArray        54c
cortex_fusionreactor.bos:// OffsetToScriptCode                  2c
cortex_fusionreactor.bos:// OffsetToNameArray                   564
cortex_fusionreactor.bos:// OffsetToFirstName                   564
cortex_fusionreactor.bos:Killed(severity, corpsetype)
cortex_fusionreactor.bos:             corpsetype = 1 ;
cortex_fusionreactor.bos:             return(corpsetype);
cortex_fusionreactor.bos:             corpsetype = 2 ;
cortex_fusionreactor.bos:             return(corpsetype);
cortex_fusionreactor.bos:             corpsetype = 3 ;
cortex_fusionreactor.bos:             return(corpsetype);
cortex_fusionreactor.bos:     corpsetype = 3 ;
cortex_fusionreactor.bos:     return corpsetype;
cortex_experimentalgantry.bos:    set YARD_OPEN to 1;
cortex_experimentalgantry.bos:            set BUGGER_OFF to 1;
cortex_experimentalgantry.bos:            set YARD_OPEN to 1;
cortex_experimentalgantry.bos:    set BUGGER_OFF to 0;
cortex_experimentalgantry.bos:    set YARD_OPEN to 0;
cortex_experimentalgantry.bos:            set BUGGER_OFF to 1;
cortex_experimentalgantry.bos:            set YARD_OPEN to 0;
cortex_experimentalgantry.bos:    set BUGGER_OFF to 0;
cortex_experimentalgantry.bos:    set INBUILDSTANCE to 1;
cortex_experimentalgantry.bos:    set INBUILDSTANCE to 0;
cortex_experimentalgantry.bos:    set-signal-mask SIG_ACTIVATE;
cortex_experimentalgantry.bos:    set-signal-mask 0;
cortex_experimentalgantry.bos:Killed(severity, corpsetype)
cortex_experimentalgantry.bos:            corpsetype = 1 ;
cortex_experimentalgantry.bos:            return(corpsetype);
cortex_experimentalgantry.bos:            corpsetype = 2 ;
cortex_experimentalgantry.bos:            return(corpsetype);
cortex_experimentalgantry.bos:            corpsetype = 3 ;
cortex_experimentalgantry.bos:            return(corpsetype);
cortex_experimentalgantry.bos:    corpsetype = 3 ;
cortex_experimentalgantry.bos:    return corpsetype;
cortex_garpike.bos:SetMaxReloadTime(Func_Var_1)
cortex_garpike.bos:SetStunned(State)
cortex_garpike.bos:    set-signal-mask SIG_AIM;
cortex_garpike.bos:Killed(severity, corpsetype)
cortex_garpike.bos:            corpsetype = 1 ;
cortex_garpike.bos:            return(corpsetype);
cortex_garpike.bos:            corpsetype = 2 ;
cortex_garpike.bos:            return(corpsetype);
cortex_garpike.bos:            corpsetype = 3 ;
cortex_garpike.bos:            return(corpsetype);
cortex_garpike.bos:    corpsetype = 3 ;
cortex_garpike.bos:    return corpsetype;
Binary file cortex_garpike.cob matches
cortex_overseer.bos:Killed(severity, corpsetype)
cortex_overseer.bos:            corpsetype = 1 ;
cortex_overseer.bos:            return(corpsetype);
cortex_overseer.bos:            corpsetype = 2 ;
cortex_overseer.bos:            return(corpsetype);
cortex_overseer.bos:            corpsetype = 3 ;
cortex_overseer.bos:            return(corpsetype);
cortex_overseer.bos:    corpsetype = 3 ;
cortex_overseer.bos:    return corpsetype;
cortex_incisor.bos:SetMaxReloadTime(Func_Var_1)
cortex_incisor.bos:SetStunned(State)
cortex_incisor.bos:   set-signal-mask SIG_AIM;
cortex_incisor.bos:Killed(severity, corpsetype)
cortex_incisor.bos:           corpsetype = 1 ;
cortex_incisor.bos:           return(corpsetype);
cortex_incisor.bos:           corpsetype = 2 ;
cortex_incisor.bos:           return(corpsetype);
cortex_incisor.bos:           corpsetype = 3 ;
cortex_incisor.bos:           return(corpsetype);
cortex_incisor.bos:   corpsetype = 3 ;
cortex_incisor.bos:   return corpsetype;
Binary file cortex_incisor.cob matches
cortex_geothermalpowerplant.lua:             return 1 -- corpsetype
cortex_geothermalpowerplant.lua:             return 2 -- corpsetype
cortex_geothermalpowerplant.lua:             return 3 -- corpsetype
cortex_tzar.bos:SetMaxReloadTime(Func_Var_1)
cortex_tzar.bos:SetStunned(State)
cortex_tzar.bos:     set-signal-mask SIG_AIM;
cortex_tzar.bos:Killed(severity, corpsetype)
cortex_tzar.bos:             corpsetype = 1 ;
cortex_tzar.bos:             return(corpsetype);
cortex_tzar.bos:             corpsetype = 2 ;
cortex_tzar.bos:             return(corpsetype);
cortex_tzar.bos:             corpsetype = 3 ;
cortex_tzar.bos:             return(corpsetype);
cortex_tzar.bos:     corpsetype = 3 ;
cortex_tzar.bos:     return corpsetype;
Binary file cortex_tzar.cob matches
cortex_gunplatform.bos:   set-signal-mask SIG_AIM;
cortex_gunplatform.bos:Killed(severity, corpsetype)
cortex_gunplatform.bos:           corpsetype = 1 ;
cortex_gunplatform.bos:           return(corpsetype);
cortex_gunplatform.bos:           corpsetype = 2 ;
cortex_gunplatform.bos:           return(corpsetype);
cortex_gunplatform.bos:           corpsetype = 3 ;
cortex_gunplatform.bos:           return(corpsetype);
cortex_gunplatform.bos:   corpsetype = 3 ;
cortex_gunplatform.bos:   return corpsetype;
cortex_halberd.bos:             // Set values for tilt
cortex_halberd.bos:     set-signal-mask SIG_MOVE;
cortex_halberd.bos:setSFXoccupy(Func_Var_1)
cortex_halberd.bos:SetMaxReloadTime(Func_Var_1)
cortex_halberd.bos:SetStunned(State)
cortex_halberd.bos:     set-signal-mask SIG_AIM;
cortex_halberd.bos:Killed(severity, corpsetype)
cortex_halberd.bos:             corpsetype = 1 ;
cortex_halberd.bos:             return(corpsetype);
cortex_halberd.bos:             corpsetype = 2 ;
cortex_halberd.bos:             return(corpsetype);
cortex_halberd.bos:             corpsetype = 3 ;
cortex_halberd.bos:             return(corpsetype);
cortex_halberd.bos:     corpsetype = 3 ;
cortex_halberd.bos:     return corpsetype;
Binary file cortex_halberd.cob matches
cortex_twinguard.bos:SetMaxReloadTime(Func_Var_1)
cortex_twinguard.bos:    set-signal-mask SIG_AIM;
cortex_twinguard.bos:    set-signal-mask SIG_AIM_2;
cortex_twinguard.bos:Killed(severity, corpsetype)
cortex_twinguard.bos:            corpsetype = 1 ;
cortex_twinguard.bos:            return(corpsetype);
cortex_twinguard.bos:            corpsetype = 2 ;
cortex_twinguard.bos:            return(corpsetype);
cortex_twinguard.bos:            corpsetype = 3 ;
cortex_twinguard.bos:            return(corpsetype);
cortex_twinguard.bos:    corpsetype = 3 ;
cortex_twinguard.bos:    return corpsetype;
Binary file cortex_twinguard.cob matches
cortex_warden.bos:     set-signal-mask SIG_AIM;
cortex_warden.bos:     set-signal-mask SIG_AIM;
cortex_warden.bos:Killed(severity, corpsetype)
cortex_warden.bos:             corpsetype = 1 ;
cortex_warden.bos:             return(corpsetype);
cortex_warden.bos:             corpsetype = 2 ;
cortex_warden.bos:             return(corpsetype);
cortex_warden.bos:             corpsetype = 3 ;
cortex_warden.bos:             return(corpsetype);
cortex_warden.bos:     corpsetype = 3 ;
cortex_warden.bos:     return corpsetype;
cortex_hovercraftplatform.bos:// OffsetToScriptCodeIndexArray        11e4
cortex_hovercraftplatform.bos:// OffsetToScriptNameOffsetArray       1230
cortex_hovercraftplatform.bos:// OffsetToPieceNameOffsetArray        127c
cortex_hovercraftplatform.bos:// OffsetToScriptCode                  2c
cortex_hovercraftplatform.bos:// OffsetToNameArray                   12a4
cortex_hovercraftplatform.bos:// OffsetToFirstName                   12a4
cortex_hovercraftplatform.bos:/*   162:*/   set YARD_OPEN to 1;
cortex_hovercraftplatform.bos:/*   16d:*/           set BUGGER_OFF to 1;
cortex_hovercraftplatform.bos:/*   175:*/           set YARD_OPEN to 1;
cortex_hovercraftplatform.bos:/*   17c:*/   set BUGGER_OFF to 0;
cortex_hovercraftplatform.bos:/*   184:*/   set YARD_OPEN to 0;
cortex_hovercraftplatform.bos:/*   18e:*/           set BUGGER_OFF to 1;
cortex_hovercraftplatform.bos:/*   196:*/           set YARD_OPEN to 0;
cortex_hovercraftplatform.bos:/*   19d:*/   set BUGGER_OFF to 0;
cortex_hovercraftplatform.bos:/*   1bb:*/   set INBUILDSTANCE to 1;
cortex_hovercraftplatform.bos:/*   1c3:*/   set INBUILDSTANCE to 0;
cortex_hovercraftplatform.bos:/*   28c:*/   set-signal-mask SIG_ACTIVATE;
cortex_hovercraftplatform.bos:/*   297:*/   set-signal-mask 0;
cortex_hovercraftplatform.bos:Killed(severity, corpsetype)
cortex_hovercraftplatform.bos:              corpsetype = 1 ;
cortex_hovercraftplatform.bos:              return(corpsetype);
cortex_hovercraftplatform.bos:              corpsetype = 2 ;
cortex_hovercraftplatform.bos:              return(corpsetype);
cortex_hovercraftplatform.bos:              corpsetype = 3 ;
cortex_hovercraftplatform.bos:              return(corpsetype);
cortex_hovercraftplatform.bos:      corpsetype = 3 ;
cortex_hovercraftplatform.bos:      return corpsetype;
cortex_arbiter.bos:     //set-signal-mask SIG_WALK;
cortex_arbiter.bos:SetMaxReloadTime(Func_Var_1)
cortex_arbiter.bos:SetStunned(State)
cortex_arbiter.bos:     set-signal-mask SIG_AIM;
cortex_arbiter.bos:Killed(severity, corpsetype)
cortex_arbiter.bos:             corpsetype = 1 ;
cortex_arbiter.bos:             return(corpsetype);
cortex_arbiter.bos:             corpsetype = 2 ;
cortex_arbiter.bos:             return(corpsetype);
cortex_arbiter.bos:             corpsetype = 3 ;
cortex_arbiter.bos:             return(corpsetype);
cortex_arbiter.bos:     corpsetype = 3 ;
cortex_arbiter.bos:     return corpsetype;
Binary file cortex_arbiter.cob matches
cortex_watcher.bos:Killed(severity, corpsetype)
cortex_watcher.bos:            corpsetype = 1 ;
cortex_watcher.bos:            return(corpsetype);
cortex_watcher.bos:            corpsetype = 2 ;
cortex_watcher.bos:            return(corpsetype);
cortex_watcher.bos:            corpsetype = 3 ;
cortex_watcher.bos:            return(corpsetype);
cortex_watcher.bos:    corpsetype = 3 ;
cortex_watcher.bos:    return corpsetype;
cortex_hailstorm.bos:Killed(severity, corpsetype)
cortex_hailstorm.bos:            corpsetype = 1 ;
cortex_hailstorm.bos:            return(corpsetype);
cortex_hailstorm.bos:            corpsetype = 2 ;
cortex_hailstorm.bos:            return(corpsetype);
cortex_hailstorm.bos:            corpsetype = 3 ;
cortex_hailstorm.bos:            return(corpsetype);
cortex_hailstorm.bos:    corpsetype = 3 ;
cortex_hailstorm.bos:    return corpsetype;
cortex_basilisk.bos:     set-signal-mask SIG_AIM;
cortex_basilisk.bos:Killed(severity, corpsetype)
cortex_basilisk.bos:             corpsetype = 1 ;
cortex_basilisk.bos:             return(corpsetype);
cortex_basilisk.bos:             corpsetype = 2 ;
cortex_basilisk.bos:             return(corpsetype);
cortex_basilisk.bos:             corpsetype = 3 ;
cortex_basilisk.bos:             return(corpsetype);
cortex_basilisk.bos:     corpsetype = 3 ;
cortex_basilisk.bos:     return corpsetype;
cortex_intruder.bos:    set ARMORED to 1;
cortex_intruder.bos:    set-signal-mask SIG_MOVE;
cortex_intruder.bos:BoomReset()
cortex_intruder.bos:    set-signal-mask 2;
cortex_intruder.bos:            set BUSY to 1;
cortex_intruder.bos:            call-script BoomReset();
cortex_intruder.bos:            set BUSY to 0;
cortex_intruder.bos:    set BUSY to 1;
cortex_intruder.bos:    start-script BoomReset();
cortex_intruder.bos:    set BUSY to 0;
cortex_intruder.bos:Killed(severity, corpsetype)
cortex_intruder.bos:            corpsetype = 1 ;
cortex_intruder.bos:            return(corpsetype);
cortex_intruder.bos:            corpsetype = 2 ;
cortex_intruder.bos:            return(corpsetype);
cortex_intruder.bos:            corpsetype = 3 ;
cortex_intruder.bos:            return(corpsetype);
cortex_intruder.bos:    corpsetype = 3 ;
cortex_intruder.bos:    return corpsetype;
Binary file cortex_intruder.cob matches
cortex_castro.bos:// OffsetToScriptCodeIndexArray        744
cortex_castro.bos:// OffsetToScriptNameOffsetArray       76c
cortex_castro.bos:// OffsetToPieceNameOffsetArray        794
cortex_castro.bos:// OffsetToScriptCode                  2c
cortex_castro.bos:// OffsetToNameArray                   7a8
cortex_castro.bos:// OffsetToFirstName                   7a8
cortex_castro.bos:Killed(severity, corpsetype)
cortex_castro.bos:            corpsetype = 1 ;
cortex_castro.bos:            return(corpsetype);
cortex_castro.bos:            corpsetype = 2 ;
cortex_castro.bos:            return(corpsetype);
cortex_castro.bos:            corpsetype = 3 ;
cortex_castro.bos:            return(corpsetype);
cortex_castro.bos:    corpsetype = 3 ;
cortex_castro.bos:    return corpsetype;
cortex_behemoth.bos:    set-signal-mask SIG_WALK;
cortex_behemoth.bos:SetMaxReloadTime(Func_Var_1)
cortex_behemoth.bos:    set-signal-mask 4 | 8 | 16 | 32;
cortex_behemoth.bos:    set-signal-mask 4;
cortex_behemoth.bos:    set-signal-mask 8;
cortex_behemoth.bos:    set CHANGE_TARGET to 2;
cortex_behemoth.bos:    set-signal-mask 16;
cortex_behemoth.bos:    set CHANGE_TARGET to 3;
cortex_behemoth.bos:    set-signal-mask 32;
cortex_behemoth.bos:    set CHANGE_TARGET to 4;
cortex_behemoth.bos:Killed(severity, corpsetype)
cortex_behemoth.bos:            corpsetype = 1;
cortex_behemoth.bos:            return (corpsetype);
cortex_behemoth.bos:            corpsetype = 2;
cortex_behemoth.bos:            return (corpsetype);
cortex_behemoth.bos:            corpsetype = 3;
cortex_behemoth.bos:            return (corpsetype);
cortex_behemoth.bos:    corpsetype = 3;
cortex_behemoth.bos:    return corpsetype;
Binary file cortex_behemoth.cob matches
cortex_behemoth.lua_old:        SetSignalMask( SIG_walk )
cortex_behemoth.lua_old:        SetSignalMask( SIG_stop )
cortex_behemoth.lua_old:        SetSignalMask( SIG_aim1 )
cortex_behemoth.lua_old:        SetSignalMask( SIG_aim2 )
cortex_behemoth.lua_old:        SetSignalMask( SIG_aim3 )
cortex_behemoth.lua_old:        SetSignalMask( SIG_aim4 )
cortex_juno.bos:// OffsetToScriptCodeIndexArray        d80
cortex_juno.bos:// OffsetToScriptNameOffsetArray       dc4
cortex_juno.bos:// OffsetToPieceNameOffsetArray        e08
cortex_juno.bos:// OffsetToScriptCode                  2c
cortex_juno.bos:// OffsetToNameArray                   e4c
cortex_juno.bos:// OffsetToFirstName                   e4c
cortex_juno.bos:SetMaxReloadTime(Func_Var_1)
cortex_juno.bos:/*   1f1:*/ set-signal-mask 0;
cortex_juno.bos:/*   206:*/ set-signal-mask SIG_AIM;
cortex_juno.bos:Killed(severity, corpsetype)
cortex_juno.bos:            corpsetype = 1 ;
cortex_juno.bos:            return(corpsetype);
cortex_juno.bos:            corpsetype = 2 ;
cortex_juno.bos:            return(corpsetype);
cortex_juno.bos:            corpsetype = 3 ;
cortex_juno.bos:            return(corpsetype);
cortex_juno.bos:    corpsetype = 3 ;
cortex_juno.bos:    return corpsetype;
Binary file cortex_juno.cob matches
cortex_karganeth.bos:    //set-signal-mask SIG_WALK;
cortex_karganeth.bos:    set-signal-mask SIG_AIM;
cortex_karganeth.bos:Killed(severity, corpsetype)
cortex_karganeth.bos:            corpsetype = 1 ;
cortex_karganeth.bos:            corpsetype = 2 ;
cortex_karganeth.bos:            corpsetype = 3 ;
cortex_karganeth.bos:    corpsetype = 3 ;
cortex_karganeth.lua_old:        SetSignalMask(SIG_WALK)
cortex_karganeth.lua_old:        SetSignalMask(SIG_RESTORE)
cortex_karganeth.lua_old:                SetSignalMask(SIG_AIM)
cortex_juggernaut.bos:    set-signal-mask SIG_WALK;
cortex_juggernaut.bos:    set ARMORED to 1;
cortex_juggernaut.bos:SetMaxReloadTime(Func_Var_1)
cortex_juggernaut.bos:setSFXoccupy(Func_Var_1)
cortex_juggernaut.bos:    set-signal-mask SIG_HEAD; //sets what signals kill the current t
hread
cortex_juggernaut.bos:    set-signal-mask SIG_BODY;
cortex_juggernaut.bos:    set-signal-mask SIG_FOOTSTOMP_L;
cortex_juggernaut.bos:    set-signal-mask SIG_FOOTSTOMP_R;
cortex_juggernaut.bos:Killed(severity, corpsetype)
cortex_juggernaut.bos:            corpsetype = 1 ;
cortex_juggernaut.bos:            return(corpsetype);
cortex_juggernaut.bos:            corpsetype = 2 ;
cortex_juggernaut.bos:            return(corpsetype);
cortex_juggernaut.bos:            corpsetype = 3 ;
cortex_juggernaut.bos:            return(corpsetype);
cortex_juggernaut.bos:    corpsetype = 3 ;
cortex_juggernaut.bos:    return corpsetype;
Binary file cortex_juggernaut.cob matches
cortex_botlab.lua:     UnitScript.SetSignalMask(SIG_OPENCLOSE);
cortex_botlab.lua:     UnitScript.SetUnitValue(COB.INBUILDSTANCE, 1);
cortex_botlab.lua:     UnitScript.SetSignalMask(SIG_OPENCLOSE);
cortex_botlab.lua:     UnitScript.SetUnitValue(COB.INBUILDSTANCE, 0);
cortex_botlab.lua:     UnitScript.SetSignalMask(SIG_ACTIVATE);
cortex_botlab.lua:    SetSignalMask(SIG_CRANE1);
cortex_botlab.lua:    SetSignalMask(SIG_CRANE2);
cortex_botlab.lua:     local corpsetype;
cortex_botlab.lua:             corpsetype = 1;
cortex_botlab.lua:             return corpsetype;
cortex_botlab.lua:             corpsetype = 2;
cortex_botlab.lua:             return corpsetype;
cortex_botlab.lua:             corpsetype = 3;
cortex_botlab.lua:             return corpsetype;
cortex_botlab.lua:     corpsetype = 3;
cortex_botlab.lua:     return corpsetype;
cortex_pounder.bos:SetMaxReloadTime(Func_Var_1)
cortex_pounder.bos:SetStunned(State)
cortex_pounder.bos:   set-signal-mask SIG_AIM;
cortex_pounder.bos:Killed(severity, corpsetype)
cortex_pounder.bos:           corpsetype = 1 ;
cortex_pounder.bos:           return(corpsetype);
cortex_pounder.bos:           corpsetype = 2 ;
cortex_pounder.bos:           return(corpsetype);
cortex_pounder.bos:           corpsetype = 3 ;
cortex_pounder.bos:           return(corpsetype);
cortex_pounder.bos:   corpsetype = 3 ;
cortex_pounder.bos:   return corpsetype;
Binary file cortex_pounder.cob matches
cortex_guard.bos:     set-signal-mask SIG_AIM;
cortex_guard.bos:Killed(severity, corpsetype)
cortex_guard.bos:             corpsetype = 1 ;
cortex_guard.bos:             return(corpsetype);
cortex_guard.bos:             corpsetype = 2 ;
cortex_guard.bos:             return(corpsetype);
cortex_guard.bos:             corpsetype = 3 ;
cortex_guard.bos:             return(corpsetype);
cortex_guard.bos:     corpsetype = 3 ;
cortex_guard.bos:     return corpsetype;
cortex_saviour.bos:    set-signal-mask 0;
cortex_saviour.bos:SetStunned(State)
cortex_saviour.bos:    set-signal-mask SIG_AIM;
cortex_saviour.bos:Killed(severity, corpsetype)
cortex_saviour.bos:            corpsetype = 1 ;
cortex_saviour.bos:            return(corpsetype);
cortex_saviour.bos:            corpsetype = 2 ;
cortex_saviour.bos:            return(corpsetype);
cortex_saviour.bos:            corpsetype = 3 ;
cortex_saviour.bos:            return(corpsetype);
cortex_saviour.bos:    corpsetype = 3 ;
cortex_saviour.bos:    return corpsetype;
Binary file cortex_saviour.cob matches
cortex_sam.lua:                SetSignalMask(SIG_AIM)
cortex_sam.lua:                  return 1 -- corpsetype
cortex_sam.lua:                  return 2 -- corpsetype
cortex_sam.lua:                  return 3 -- corpsetype
cortex_energyconverter.bos:                            set ACTIVATION to 1;
cortex_energyconverter.bos:                            set ACTIVATION to 0;
cortex_energyconverter.bos:Killed(severity, corpsetype)
cortex_energyconverter.bos:            corpsetype = 1 ;
cortex_energyconverter.bos:            return(corpsetype);
cortex_energyconverter.bos:            corpsetype = 2 ;
cortex_energyconverter.bos:            return(corpsetype);
cortex_energyconverter.bos:            corpsetype = 3 ;
cortex_energyconverter.bos:            return(corpsetype);
cortex_energyconverter.bos:    corpsetype = 3 ;
cortex_energyconverter.bos:    return corpsetype;
cortex_commando.bos:   set-signal-mask SIG_WALK;
cortex_commando.bos:   set INBUILDSTANCE to 0;
cortex_commando.bos:   set INBUILDSTANCE to 1;
cortex_commando.bos:   set-signal-mask SIG_BUILD;
cortex_commando.bos:   set-signal-mask 0;
cortex_commando.bos:Killed(severity, corpsetype)
cortex_commando.bos:           corpsetype = 1 ;
cortex_commando.bos:           return(corpsetype);
cortex_commando.bos:           corpsetype = 2 ;
cortex_commando.bos:           return(corpsetype);
cortex_commando.bos:           corpsetype = 3 ;
cortex_commando.bos:           return(corpsetype);
cortex_commando.bos:   corpsetype = 3 ;
cortex_commando.bos:   return corpsetype;
cortex_quaker.bos:SetMaxReloadTime(Func_Var_1)
cortex_quaker.bos:SetStunned(State)
cortex_quaker.bos:    set-signal-mask SIG_AIM;
cortex_quaker.bos:Killed(severity, corpsetype)
cortex_quaker.bos:            corpsetype = 1 ;
cortex_quaker.bos:            return(corpsetype);
cortex_quaker.bos:            corpsetype = 2 ;
cortex_quaker.bos:            return(corpsetype);
cortex_quaker.bos:            corpsetype = 3 ;
cortex_quaker.bos:            return(corpsetype);
cortex_quaker.bos:    corpsetype = 3 ;
cortex_quaker.bos:    return corpsetype;
Binary file cortex_quaker.cob matches
cortex_dragonsmaw.bos:     set ARMORED to 0;
cortex_dragonsmaw.bos:     set ARMORED to 1;
cortex_dragonsmaw.bos:SetMaxReloadTime(Func_Var_1)
cortex_dragonsmaw.bos:     set-signal-mask 0;
cortex_dragonsmaw.bos:SetStunned(State)
cortex_dragonsmaw.bos:     set-signal-mask SIG_AIM;
cortex_dragonsmaw.bos:Killed(severity, corpsetype)
cortex_dragonsmaw.bos:             corpsetype = 1 ;
cortex_dragonsmaw.bos:             return(corpsetype);
cortex_dragonsmaw.bos:             corpsetype = 2 ;
cortex_dragonsmaw.bos:             return(corpsetype);
cortex_dragonsmaw.bos:             corpsetype = 3 ;
cortex_dragonsmaw.bos:             return(corpsetype);
cortex_dragonsmaw.bos:     corpsetype = 3 ;
cortex_dragonsmaw.bos:     return corpsetype;
Binary file cortex_dragonsmaw.cob matches
cortex_metalextractor.bos:     set ARMORED to 0;
cortex_metalextractor.bos:     set ARMORED to 1;
cortex_metalextractor.bos:SetStunned(State)
cortex_metalextractor.bos:SetSpeed(Func_Var_1)
cortex_metalextractor.bos:Killed(severity, corpsetype)
cortex_metalextractor.bos:             corpsetype = 1 ;
cortex_metalextractor.bos:             return(corpsetype);
cortex_metalextractor.bos:             corpsetype = 2 ;
cortex_metalextractor.bos:             return(corpsetype);
cortex_metalextractor.bos:             corpsetype = 3 ;
cortex_metalextractor.bos:             return(corpsetype);
cortex_metalextractor.bos:     corpsetype = 3 ;
cortex_metalextractor.bos:     return corpsetype;
Binary file cortex_metalextractor.cob matches
cortex_advancedexploiter.bos:    set ARMORED to 0;
cortex_advancedexploiter.bos:    set ARMORED to 1;
cortex_advancedexploiter.bos:    set ACTIVATION to 100;
cortex_advancedexploiter.bos:            set ACTIVATION to 0;
cortex_advancedexploiter.bos:    set ARMORED to 0;
cortex_advancedexploiter.bos:    set-signal-mask 0;
cortex_advancedexploiter.bos:SetStunned(State)
cortex_advancedexploiter.bos:SetMaxReloadTime(Func_Var_1)
cortex_advancedexploiter.bos:    set-signal-mask SIG_AIM;
cortex_advancedexploiter.bos:    set-signal-mask 8;
cortex_advancedexploiter.bos:    set-signal-mask SIG_AIM_2;
cortex_advancedexploiter.bos:SetSpeed(Func_Var_1)
cortex_advancedexploiter.bos:Killed(severity, corpsetype)
cortex_advancedexploiter.bos:            corpsetype = 1 ;
cortex_advancedexploiter.bos:            return(corpsetype);
cortex_advancedexploiter.bos:            corpsetype = 2 ;
cortex_advancedexploiter.bos:            return(corpsetype);
cortex_advancedexploiter.bos:            corpsetype = 3 ;
cortex_advancedexploiter.bos:            return(corpsetype);
cortex_advancedexploiter.bos:    corpsetype = 3 ;
cortex_advancedexploiter.bos:    return corpsetype;
Binary file cortex_advancedexploiter.cob matches
cortex_mangonel.bos:              // Set values for tilt
cortex_mangonel.bos:SetMaxReloadTime(Func_Var_1)
cortex_mangonel.bos:      set-signal-mask 0;
cortex_mangonel.bos:SetStunned(State)
cortex_mangonel.bos:      set-signal-mask SIG_RESTORE;
cortex_mangonel.bos:      set-signal-mask SIG_MOVE;
cortex_mangonel.bos:setSFXoccupy(Func_Var_1)
cortex_mangonel.bos:      set-signal-mask SIG_AIM;
cortex_mangonel.bos:Killed(severity, corpsetype)
cortex_mangonel.bos:              corpsetype = 1 ;
cortex_mangonel.bos:              return(corpsetype);
cortex_mangonel.bos:              corpsetype = 2 ;
cortex_mangonel.bos:              return(corpsetype);
cortex_mangonel.bos:              corpsetype = 3 ;
cortex_mangonel.bos:              return(corpsetype);
cortex_mangonel.bos:      corpsetype = 3 ;
cortex_mangonel.bos:      return corpsetype;
Binary file cortex_mangonel.cob matches
cortex_lasher.bos:SetMaxReloadTime(Func_Var_1)
cortex_lasher.bos:SetStunned(State)
cortex_lasher.bos:    set-signal-mask SIG_AIM;
cortex_lasher.bos:Killed(severity, corpsetype)
cortex_lasher.bos:            corpsetype = 1 ;
cortex_lasher.bos:            return(corpsetype);
cortex_lasher.bos:            corpsetype = 2 ;
cortex_lasher.bos:            return(corpsetype);
cortex_lasher.bos:            corpsetype = 3 ;
cortex_lasher.bos:            return(corpsetype);
cortex_lasher.bos:    corpsetype = 3 ;
cortex_lasher.bos:    return corpsetype;
Binary file cortex_lasher.cob matches
cortex_pathfinder.bos:     set INBUILDSTANCE to 1;
cortex_pathfinder.bos:     set INBUILDSTANCE to 0;
cortex_pathfinder.bos:     set-signal-mask SIG_MOVE;
cortex_pathfinder.bos:Killed(severity, corpsetype)
cortex_pathfinder.bos:             corpsetype = 1 ;
cortex_pathfinder.bos:             return(corpsetype);
cortex_pathfinder.bos:             corpsetype = 2 ;
cortex_pathfinder.bos:             return(corpsetype);
cortex_pathfinder.bos:             corpsetype = 3 ;
cortex_pathfinder.bos:             return(corpsetype);
cortex_pathfinder.bos:     corpsetype = 3 ;
cortex_pathfinder.bos:     return corpsetype;
cortex_trapper.bos:     set INBUILDSTANCE to 0;
cortex_trapper.bos:     set INBUILDSTANCE to 1;
cortex_trapper.bos:     set-signal-mask SIG_BUILD;
cortex_trapper.bos:     set-signal-mask 0;
cortex_trapper.bos:Killed(severity, corpsetype)
cortex_trapper.bos:             corpsetype = 1 ;
cortex_trapper.bos:             return(corpsetype);
cortex_trapper.bos:             corpsetype = 2 ;
cortex_trapper.bos:             return(corpsetype);
cortex_trapper.bos:             corpsetype = 3 ;
cortex_trapper.bos:             return(corpsetype);
cortex_trapper.bos:     corpsetype = 3 ;
cortex_trapper.bos:             return corpsetype;
cortex_advancedenergyconverter.bos:    set ARMORED to 0;  //Not needed as MM in BAR have no damage modi
fyer tag set
cortex_advancedenergyconverter.bos:    set ARMORED to 1;
cortex_advancedenergyconverter.bos:Killed(severity, corpsetype)
cortex_advancedenergyconverter.bos:            corpsetype = 1 ;
cortex_advancedenergyconverter.bos:            return(corpsetype);
cortex_advancedenergyconverter.bos:            corpsetype = 2 ;
cortex_advancedenergyconverter.bos:            return(corpsetype);
cortex_advancedenergyconverter.bos:            corpsetype = 3 ;
cortex_advancedenergyconverter.bos:            return(corpsetype);
cortex_advancedenergyconverter.bos:    corpsetype = 3 ;
cortex_advancedenergyconverter.bos:    return corpsetype;
cortex_advancedmetalextractor.bos:    set ARMORED to 0;
cortex_advancedmetalextractor.bos:    set ARMORED to 1;
cortex_advancedmetalextractor.bos:SetStunned(State)
cortex_advancedmetalextractor.bos:    set ARMORED to 1;
cortex_advancedmetalextractor.bos:SetSpeed(Func_Var_1)
cortex_advancedmetalextractor.bos:Killed(severity, corpsetype)
cortex_advancedmetalextractor.bos:            corpsetype = 1 ;
cortex_advancedmetalextractor.bos:            return(corpsetype);
cortex_advancedmetalextractor.bos:            corpsetype = 2 ;
cortex_advancedmetalextractor.bos:            return(corpsetype);
cortex_advancedmetalextractor.bos:            corpsetype = 3 ;
cortex_advancedmetalextractor.bos:            return(corpsetype);
cortex_advancedmetalextractor.bos:    corpsetype = 3 ;
cortex_advancedmetalextractor.bos:    return corpsetype;
Binary file cortex_advancedmetalextractor.cob matches
cortex_sheldon.bos:    set-signal-mask SIG_WALK;
cortex_sheldon.bos:SetMaxReloadTime(Func_Var_1)
cortex_sheldon.bos:SetStunned(State)
cortex_sheldon.bos:    set-signal-mask SIG_AIM;
cortex_sheldon.bos:Killed(severity, corpsetype)
cortex_sheldon.bos:            corpsetype = 1 ;
cortex_sheldon.bos:            return(corpsetype);
cortex_sheldon.bos:            corpsetype = 2 ;
cortex_sheldon.bos:            return(corpsetype);
cortex_sheldon.bos:            corpsetype = 3 ;
cortex_sheldon.bos:            return(corpsetype);
cortex_sheldon.bos:    corpsetype = 3 ;
cortex_sheldon.bos:    return corpsetype;
Binary file cortex_sheldon.cob matches
cortex_messenger.bos:SetMaxReloadTime(Func_Var_1)
cortex_messenger.bos:SetStunned(State)
cortex_messenger.bos:   set-signal-mask SIG_MOVE;
cortex_messenger.bos:   set-signal-mask SIG_AIM;
cortex_messenger.bos:   set-signal-mask SIG_AIM_3;
cortex_messenger.bos:Killed(severity, corpsetype)
cortex_messenger.bos:           corpsetype = 1 ;
cortex_messenger.bos:           return(corpsetype);
cortex_messenger.bos:           corpsetype = 2 ;
cortex_messenger.bos:           return(corpsetype);
cortex_messenger.bos:           corpsetype = 3 ;
cortex_messenger.bos:           return(corpsetype);
cortex_messenger.bos:   corpsetype = 3 ;
cortex_messenger.bos:   return corpsetype;
Binary file cortex_messenger.cob matches
cortex_metalstorage.bos:// OffsetToScriptCodeIndexArray        2f8
cortex_metalstorage.bos:// OffsetToScriptNameOffsetArray       308
cortex_metalstorage.bos:// OffsetToPieceNameOffsetArray        318
cortex_metalstorage.bos:// OffsetToScriptCode                  2c
cortex_metalstorage.bos:// OffsetToNameArray                   31c
cortex_metalstorage.bos:// OffsetToFirstName                   31c
cortex_metalstorage.bos:Killed(severity, corpsetype)
cortex_metalstorage.bos:           corpsetype = 1 ;
cortex_metalstorage.bos:           return(corpsetype);
cortex_metalstorage.bos:           corpsetype = 2 ;
cortex_metalstorage.bos:           return(corpsetype);
cortex_metalstorage.bos:           corpsetype = 3 ;
cortex_metalstorage.bos:           return(corpsetype);
cortex_metalstorage.bos:   corpsetype = 3 ;
cortex_metalstorage.bos:   return corpsetype;
cortex_muskrat.bos: set INBUILDSTANCE to 1;
cortex_muskrat.bos: set INBUILDSTANCE to 0;
cortex_muskrat.bos: set INBUILDSTANCE to 1;
cortex_muskrat.bos: set-signal-mask SIG_BUILD;
cortex_muskrat.bos: set-signal-mask 0;
cortex_muskrat.bos:Killed(severity, corpsetype)
cortex_muskrat.bos:         corpsetype = 1 ;
cortex_muskrat.bos:         return(corpsetype);
cortex_muskrat.bos:         corpsetype = 2 ;
cortex_muskrat.bos:         return(corpsetype);
cortex_muskrat.bos:         corpsetype = 3 ;
cortex_muskrat.bos:         return(corpsetype);
cortex_muskrat.bos: corpsetype = 3 ;
cortex_muskrat.bos: return corpsetype;
cortex_constructionturret.bos:  set INBUILDSTANCE to 1;
cortex_constructionturret.bos:  set INBUILDSTANCE to 0;
cortex_constructionturret.bos:SetStunned(State)
cortex_constructionturret.bos:Killed(severity, corpsetype)
cortex_constructionturret.bos:          corpsetype = 1 ;
cortex_constructionturret.bos:          return(corpsetype);
cortex_constructionturret.bos:          corpsetype = 2 ;
cortex_constructionturret.bos:          return(corpsetype);
cortex_constructionturret.bos:          corpsetype = 3 ;
cortex_constructionturret.bos:          return(corpsetype);
cortex_constructionturret.bos:  corpsetype = 3 ;
cortex_constructionturret.bos:  return corpsetype;
Binary file cortex_constructionturret.cob matches
cortex_navalconstructionturret.bos:      set INBUILDSTANCE to 1;
cortex_navalconstructionturret.bos:      set INBUILDSTANCE to 0;
cortex_navalconstructionturret.bos:SetStunned(State)
cortex_navalconstructionturret.bos:Killed(severity, corpsetype)
cortex_navalconstructionturret.bos:              corpsetype = 1 ;
cortex_navalconstructionturret.bos:              return(corpsetype);
cortex_navalconstructionturret.bos:              corpsetype = 2 ;
cortex_navalconstructionturret.bos:              return(corpsetype);
cortex_navalconstructionturret.bos:              corpsetype = 3 ;
cortex_navalconstructionturret.bos:              return(corpsetype);
cortex_navalconstructionturret.bos:      corpsetype = 3 ;
cortex_navalconstructionturret.bos:      return corpsetype;
Binary file cortex_navalconstructionturret.cob matches
cortex_graverobber.bos:   set-signal-mask SIG_WALK;
cortex_graverobber.bos:   set INBUILDSTANCE to 0;
cortex_graverobber.bos:   set-signal-mask SIG_BUILD;
cortex_graverobber.bos:   set INBUILDSTANCE to 1;
cortex_graverobber.bos:   set-signal-mask SIG_BUILD;
cortex_graverobber.bos:Killed(severity, corpsetype)
cortex_graverobber.bos:           corpsetype = 1 ;
cortex_graverobber.bos:           return(corpsetype);
cortex_graverobber.bos:           corpsetype = 2 ;
cortex_graverobber.bos:           return(corpsetype);
cortex_graverobber.bos:           corpsetype = 3 ;
cortex_graverobber.bos:           return(corpsetype);
cortex_graverobber.bos:   corpsetype = 3 ;
cortex_graverobber.bos:   return corpsetype;
cortex_poisonarrow.bos:setSFXoccupy(state)
cortex_poisonarrow.bos:SetMaxReloadTime(Func_Var_1)
cortex_poisonarrow.bos:SetStunned(State)
cortex_poisonarrow.bos:  set-signal-mask SIG_AIM;
cortex_poisonarrow.bos:Killed(severity, corpsetype)
cortex_poisonarrow.bos:          corpsetype = 1 ;
cortex_poisonarrow.bos:          return(corpsetype);
cortex_poisonarrow.bos:          corpsetype = 2 ;
cortex_poisonarrow.bos:          return(corpsetype);
cortex_poisonarrow.bos:          corpsetype = 3 ;
cortex_poisonarrow.bos:          return(corpsetype);
cortex_poisonarrow.bos:  corpsetype = 3 ;
cortex_poisonarrow.bos:  return corpsetype;
Binary file cortex_poisonarrow.cob matches
cortex_seaplaneplatform.bos:    set ARMORED to 0;
cortex_seaplaneplatform.bos:    set ARMORED to 1;
cortex_seaplaneplatform.bos:    set YARD_OPEN to 1;
cortex_seaplaneplatform.bos:            set BUGGER_OFF to 1;
cortex_seaplaneplatform.bos:            set YARD_OPEN to 1;
cortex_seaplaneplatform.bos:    set BUGGER_OFF to 0;
cortex_seaplaneplatform.bos:    set YARD_OPEN to 0;
cortex_seaplaneplatform.bos:            set BUGGER_OFF to 1;
cortex_seaplaneplatform.bos:            set YARD_OPEN to 0;
cortex_seaplaneplatform.bos:    set BUGGER_OFF to 0;
cortex_seaplaneplatform.bos:    set INBUILDSTANCE to 1;
cortex_seaplaneplatform.bos:    set INBUILDSTANCE to 0;
cortex_seaplaneplatform.bos:    set ARMORED to 1;
cortex_seaplaneplatform.bos:    set-signal-mask SIG_ACTIVATE;
cortex_seaplaneplatform.bos:    set-signal-mask 0;
cortex_seaplaneplatform.bos:Killed(severity, corpsetype)
cortex_seaplaneplatform.bos:            corpsetype = 1 ;
cortex_seaplaneplatform.bos:            return(corpsetype);
cortex_seaplaneplatform.bos:            corpsetype = 2 ;
cortex_seaplaneplatform.bos:            return(corpsetype);
cortex_seaplaneplatform.bos:            corpsetype = 3 ;
cortex_seaplaneplatform.bos:            return(corpsetype);
cortex_seaplaneplatform.bos:    corpsetype = 3 ;
cortex_seaplaneplatform.bos:    return corpsetype;
cortex_riptide.bos:SetDirection(heading)
cortex_riptide.bos:   set-signal-mask 4096;
cortex_riptide.bos:SetMaxReloadTime(Func_Var_1)
cortex_riptide.bos:SetStunned(State)
cortex_riptide.bos:   set-signal-mask 0;
cortex_riptide.bos:   set-signal-mask SIG_MOVE;
cortex_riptide.bos:   set-signal-mask SIG_AIM;
cortex_riptide.bos:Killed(severity, corpsetype)
cortex_riptide.bos:           corpsetype = 1;
cortex_riptide.bos:           return (corpsetype);
cortex_riptide.bos:           corpsetype = 2;
cortex_riptide.bos:           return (corpsetype);
cortex_riptide.bos:   corpsetype = 3;
cortex_riptide.bos:   return corpsetype;
Binary file cortex_riptide.cob matches
cortex_herring.bos:SetMaxReloadTime(Func_Var_1)
cortex_herring.bos:      set-signal-mask 0;
cortex_herring.bos:SetStunned(State)
cortex_herring.bos:      set-signal-mask SIG_MOVE;
cortex_herring.bos:      set-signal-mask SIG_AIM_3;
cortex_herring.bos:      set-signal-mask SIG_AIM;
cortex_herring.bos:Killed(severity, corpsetype)
cortex_herring.bos:              corpsetype = 1 ;
cortex_herring.bos:              return(corpsetype);
cortex_herring.bos:              corpsetype = 2 ;
cortex_herring.bos:              return(corpsetype);
cortex_herring.bos:              corpsetype = 3 ;
cortex_herring.bos:              return(corpsetype);
cortex_herring.bos:      corpsetype = 3 ;
cortex_herring.bos:      return corpsetype;
Binary file cortex_herring.cob matches
cortex_oldurchin.bos:     set-signal-mask SIG_AIM;
cortex_oldurchin.bos:Killed(severity, corpsetype)
cortex_oldurchin.bos:             corpsetype = 1;
cortex_oldurchin.bos:             return (corpsetype);
cortex_oldurchin.bos:             corpsetype = 2;
cortex_oldurchin.bos:             return (corpsetype);
cortex_oldurchin.bos:             corpsetype = 3;
cortex_oldurchin.bos:             return (corpsetype);
cortex_oldurchin.bos:     corpsetype = 3;
cortex_oldurchin.bos:     return corpsetype;
cortex_agitator.lua:             SetSignalMask(SIG_AIM)
cortex_agitator.lua:             return 1 -- corpsetype
cortex_agitator.lua:             return 2 -- corpsetype
cortex_agitator.lua:             return 3 -- corpsetype
cortex_fiend.bos:    //set-signal-mask SIG_WALK;
cortex_fiend.bos:SetMaxReloadTime(Func_Var_1)
cortex_fiend.bos:SetStunned(State)
cortex_fiend.bos:    set-signal-mask SIG_AIM;
cortex_fiend.bos:Killed(severity, corpsetype)
cortex_fiend.bos:            corpsetype = 1 ;
cortex_fiend.bos:            return(corpsetype);
cortex_fiend.bos:            corpsetype = 2 ;
cortex_fiend.bos:            return(corpsetype);
cortex_fiend.bos:            corpsetype = 3 ;
cortex_fiend.bos:            return(corpsetype);
cortex_fiend.bos:    corpsetype = 3 ;
cortex_fiend.bos:    return corpsetype;
Binary file cortex_fiend.cob matches
cortex_radartower.bos:// OffsetToScriptCodeIndexArray        54c
cortex_radartower.bos:// OffsetToScriptNameOffsetArray       574
cortex_radartower.bos:// OffsetToPieceNameOffsetArray        59c
cortex_radartower.bos:// OffsetToScriptCode                  2c
cortex_radartower.bos:// OffsetToNameArray                   5a4
cortex_radartower.bos:// OffsetToFirstName                   5a4
cortex_radartower.bos:Killed(severity, corpsetype)
cortex_radartower.bos:             corpsetype = 1 ;
cortex_radartower.bos:             return(corpsetype);
cortex_radartower.bos:             corpsetype = 2 ;
cortex_radartower.bos:             return(corpsetype);
cortex_radartower.bos:             corpsetype = 3 ;
cortex_radartower.bos:             return(corpsetype);
cortex_radartower.bos:     corpsetype = 3 ;
cortex_radartower.bos:     return corpsetype;
cortex_brute.bos:SetMaxReloadTime(Func_Var_1)
cortex_brute.bos:    set-signal-mask 0;
cortex_brute.bos:SetStunned(State)
cortex_brute.bos:    set-signal-mask SIG_AIM;
cortex_brute.bos:Killed(severity, corpsetype)
cortex_brute.bos:            corpsetype = 1 ;
cortex_brute.bos:            return(corpsetype);
cortex_brute.bos:            corpsetype = 2 ;
cortex_brute.bos:            return(corpsetype);
cortex_brute.bos:            corpsetype = 3 ;
cortex_brute.bos:            return(corpsetype);
cortex_brute.bos:    corpsetype = 3 ;
cortex_brute.bos:    return corpsetype;
Binary file cortex_brute.cob matches
cortex_tiger.bos:setSFXoccupy(state)
cortex_tiger.bos:SetMaxReloadTime(Func_Var_1)
cortex_tiger.bos:SetStunned(State)
cortex_tiger.bos:    set-signal-mask SIG_AIM;
cortex_tiger.bos:Killed(severity, corpsetype)
cortex_tiger.bos:            corpsetype = 1 ;
cortex_tiger.bos:            return(corpsetype);
cortex_tiger.bos:            corpsetype = 2 ;
cortex_tiger.bos:            return(corpsetype);
cortex_tiger.bos:            corpsetype = 3 ;
cortex_tiger.bos:            return(corpsetype);
cortex_tiger.bos:    corpsetype = 3 ;
cortex_tiger.bos:    return corpsetype;
Binary file cortex_tiger.cob matches
cortex_deathcavalry.bos:    set-signal-mask SIG_MOVE;
cortex_deathcavalry.bos:    set INBUILDSTANCE to 1;
cortex_deathcavalry.bos:    set INBUILDSTANCE to 0;
cortex_deathcavalry.bos:Killed(severity, corpsetype)
cortex_deathcavalry.bos:            corpsetype = 1 ;
cortex_deathcavalry.bos:            return(corpsetype);
cortex_deathcavalry.bos:            corpsetype = 2 ;
cortex_deathcavalry.bos:            return(corpsetype);
cortex_deathcavalry.bos:            corpsetype = 3 ;
cortex_deathcavalry.bos:            return(corpsetype);
cortex_deathcavalry.bos:    corpsetype = 3 ;
cortex_deathcavalry.bos:    return corpsetype;
cortex_thistle.bos:// OffsetToScriptCodeIndexArray        9cc
cortex_thistle.bos:// OffsetToScriptNameOffsetArray       9ec
cortex_thistle.bos:// OffsetToPieceNameOffsetArray        a0c
cortex_thistle.bos:// OffsetToScriptCode                  2c
cortex_thistle.bos:// OffsetToNameArray                   a2c
cortex_thistle.bos:// OffsetToFirstName                   a2c
cortex_thistle.bos:SetStunned(State)
cortex_thistle.bos:Killed(severity, corpsetype)
cortex_thistle.bos:              corpsetype = 1 ;
cortex_thistle.bos:              return(corpsetype);
cortex_thistle.bos:              corpsetype = 2 ;
cortex_thistle.bos:              return(corpsetype);
cortex_thistle.bos:              corpsetype = 3 ;
cortex_thistle.bos:              return(corpsetype);
cortex_thistle.bos:      corpsetype = 3 ;
cortex_thistle.bos:      return corpsetype;
Binary file cortex_thistle.cob matches
cortex_bedbug.bos:Killed(severity, corpsetype)
cortex_bedbug.bos:           corpsetype = 1 ;
cortex_bedbug.bos:           return(corpsetype);
cortex_bedbug.bos:           corpsetype = 2 ;
cortex_bedbug.bos:           return(corpsetype);
cortex_bedbug.bos:           corpsetype = 3 ;
cortex_bedbug.bos:           return(corpsetype);
cortex_bedbug.bos:   corpsetype = 3 ;
cortex_bedbug.bos:   return corpsetype;
cortex_oppressor.bos:SetMaxReloadTime(Func_Var_1)
cortex_oppressor.bos:SetStunned(State)
cortex_oppressor.bos:     set-signal-mask SIG_MOVE;
cortex_oppressor.bos:     set-signal-mask 2;
cortex_oppressor.bos:     set-signal-mask 4;
cortex_oppressor.bos:Killed(severity, corpsetype)
cortex_oppressor.bos:             corpsetype = 1 ;
cortex_oppressor.bos:             return(corpsetype);
cortex_oppressor.bos:             corpsetype = 2 ;
cortex_oppressor.bos:             return(corpsetype);
cortex_oppressor.bos:             corpsetype = 3 ;
cortex_oppressor.bos:             return(corpsetype);
cortex_oppressor.bos:     corpsetype = 3 ;
cortex_oppressor.bos:     return corpsetype;
Binary file cortex_oppressor.cob matches
cortex_dambuster.bos:setSFXoccupy(Func_Var_1)
cortex_dambuster.bos:Killed(severity, corpsetype)
cortex_dambuster.bos:              corpsetype = 1 ;
cortex_dambuster.bos:              return(corpsetype);
cortex_dambuster.bos:              corpsetype = 2 ;
cortex_dambuster.bos:              return(corpsetype);
cortex_dambuster.bos:              corpsetype = 3 ;
cortex_dambuster.bos:              return(corpsetype);
cortex_dambuster.bos:      corpsetype = 3 ;
cortex_dambuster.bos:      return corpsetype;
Binary file cortex_dambuster.cob matches
cortex_screamer.bos:SetStunned(State)
cortex_screamer.bos:        set-signal-mask SIG_AIM;
cortex_screamer.bos:Killed(severity, corpsetype)
cortex_screamer.bos:                corpsetype = 1 ;
cortex_screamer.bos:                return(corpsetype);
cortex_screamer.bos:                corpsetype = 2 ;
cortex_screamer.bos:                return(corpsetype);
cortex_screamer.bos:                corpsetype = 3 ;
cortex_screamer.bos:                return(corpsetype);
cortex_screamer.bos:        corpsetype = 3 ;
cortex_screamer.bos:        return corpsetype;
Binary file cortex_screamer.cob matches
cortex_nemesis.bos:// OffsetToScriptCodeIndexArray        43c
cortex_nemesis.bos:// OffsetToScriptNameOffsetArray       44c
cortex_nemesis.bos:// OffsetToPieceNameOffsetArray        45c
cortex_nemesis.bos:// OffsetToScriptCode                  2c
cortex_nemesis.bos:// OffsetToNameArray                   460
cortex_nemesis.bos:// OffsetToFirstName                   460
cortex_nemesis.bos:Killed(severity, corpsetype)
cortex_nemesis.bos:              corpsetype = 1 ;
cortex_nemesis.bos:              return(corpsetype);
cortex_nemesis.bos:              corpsetype = 2 ;
cortex_nemesis.bos:              return(corpsetype);
cortex_nemesis.bos:              corpsetype = 3 ;
cortex_nemesis.bos:              return(corpsetype);
cortex_nemesis.bos:      corpsetype = 3 ;
cortex_nemesis.bos:      return corpsetype;
cortex_skyhook.bos:    set-signal-mask 8;
cortex_skyhook.bos:    set-signal-mask 8;
cortex_skyhook.bos:    set-signal-mask 8;
cortex_skyhook.bos:Killed(severity, corpsetype)
cortex_skyhook.bos:            corpsetype = 1 ;
cortex_skyhook.bos:            return(corpsetype);
cortex_skyhook.bos:            corpsetype = 2 ;
cortex_skyhook.bos:            return(corpsetype);
cortex_skyhook.bos:            corpsetype = 3 ;
cortex_skyhook.bos:            return(corpsetype);
cortex_skyhook.bos:    corpsetype = 3 ;
cortex_skyhook.bos:    return corpsetype;
cortex_alligator.bos:setSFXoccupy(state)
cortex_alligator.bos:SetMaxReloadTime(Func_Var_1)
cortex_alligator.bos:SetStunned(State)
cortex_alligator.bos:    set-signal-mask SIG_AIM;
cortex_alligator.bos:Killed(severity, corpsetype)
cortex_alligator.bos:            corpsetype = 1 ;
cortex_alligator.bos:            return(corpsetype);
cortex_alligator.bos:            corpsetype = 2 ;
cortex_alligator.bos:            return(corpsetype);
cortex_alligator.bos:            corpsetype = 3 ;
cortex_alligator.bos:            return(corpsetype);
cortex_alligator.bos:    corpsetype = 3 ;
cortex_alligator.bos:    return corpsetype;
Binary file cortex_alligator.cob matches
cortex_monsoon.bos:Killed(severity, corpsetype)
cortex_monsoon.bos:            corpsetype = 1 ;
cortex_monsoon.bos:            return(corpsetype);
cortex_monsoon.bos:            corpsetype = 2 ;
cortex_monsoon.bos:            return(corpsetype);
cortex_monsoon.bos:            corpsetype = 3 ;
cortex_monsoon.bos:            return(corpsetype);
cortex_monsoon.bos:    corpsetype = 3 ;
cortex_monsoon.bos:    return corpsetype;
cortex_fury.bos:SetMaxReloadTime(Func_Var_1)
cortex_fury.bos:    set-signal-mask 0;
cortex_fury.bos:SetStunned(State)
cortex_fury.bos:    set-signal-mask SIG_AIM_3;
cortex_fury.bos:Killed(severity, corpsetype)
cortex_fury.bos:            corpsetype = 1 ;
cortex_fury.bos:            return(corpsetype);
cortex_fury.bos:            corpsetype = 2 ;
cortex_fury.bos:            return(corpsetype);
cortex_fury.bos:            corpsetype = 3 ;
cortex_fury.bos:            return(corpsetype);
cortex_fury.bos:    corpsetype = 3 ;
cortex_fury.bos:    return corpsetype;
Binary file cortex_fury.cob matches
cortex_bat.bos:    set-signal-mask SIG_MOVE;
cortex_bat.bos:Killed(severity, corpsetype)
cortex_bat.bos:            corpsetype = 1 ;
cortex_bat.bos:            return(corpsetype);
cortex_bat.bos:            corpsetype = 2 ;
cortex_bat.bos:            return(corpsetype);
cortex_bat.bos:            corpsetype = 3 ;
cortex_bat.bos:            return(corpsetype);
cortex_bat.bos:    corpsetype = 3 ;
cortex_bat.bos:    return corpsetype;
cortex_goon.bos:              // Set values for tilt
cortex_goon.bos:      set-signal-mask SIG_MOVE;
cortex_goon.bos:setSFXoccupy(Func_Var_1)
cortex_goon.bos:SetMaxReloadTime(Func_Var_1)
cortex_goon.bos:SetStunned(State)
cortex_goon.bos:      set-signal-mask SIG_AIM;
cortex_goon.bos:Killed(severity, corpsetype)
cortex_goon.bos:              corpsetype = 1 ;
cortex_goon.bos:              return(corpsetype);
cortex_goon.bos:              corpsetype = 2 ;
cortex_goon.bos:              return(corpsetype);
cortex_goon.bos:              corpsetype = 3 ;
cortex_goon.bos:              return(corpsetype);
cortex_goon.bos:      corpsetype = 3 ;
cortex_goon.bos:      return corpsetype;
Binary file cortex_goon.cob matches
cortex_whirlwind.bos:Killed(severity, corpsetype)
cortex_whirlwind.bos:            corpsetype = 1 ;
cortex_whirlwind.bos:            return(corpsetype);
cortex_whirlwind.bos:            corpsetype = 2 ;
cortex_whirlwind.bos:            return(corpsetype);
cortex_whirlwind.bos:            corpsetype = 3 ;
cortex_whirlwind.bos:            return(corpsetype);
cortex_whirlwind.bos:    corpsetype = 3 ;
cortex_whirlwind.bos:    return corpsetype;
cortex_predator.bos:   set-signal-mask SIG_MOVE;
cortex_predator.bos:Killed(severity, corpsetype)
cortex_predator.bos:           corpsetype = 1 ;
cortex_predator.bos:           return(corpsetype);
cortex_predator.bos:           corpsetype = 2 ;
cortex_predator.bos:           return(corpsetype);
cortex_predator.bos:           corpsetype = 3 ;
cortex_predator.bos:           return(corpsetype);
cortex_predator.bos:   corpsetype = 3 ;
cortex_predator.bos:   return corpsetype;
cortex_shiva.bos:   set ARMORED to 1;
cortex_shiva.bos:SetMaxReloadTime(maxtime_ms) //this is called by engine immediately
 after Create(), and returns the longest of all weapon reload times in ms
cortex_shiva.bos:   set ARMORED to 0;
cortex_shiva.bos:   set ARMORED to 1;
cortex_shiva.bos:   set-signal-mask SIG_AIM;
cortex_shiva.bos:   set-signal-mask SIG_AIM;
cortex_shiva.bos:   set-signal-mask SIG_AIM_3;
cortex_shiva.bos:Killed(severity, corpsetype)
Binary file cortex_shiva.cob matches
cortex_shiva.lua_old:       SetSignalMask( SIG_walk )
cortex_shiva.lua_old:                               UnitScript.SetUnitValue(COB.ARMO
RED, 1);
cortex_shiva.lua_old:                               UnitScript.SetUnitValue(COB.ARMO
RED, 0);
cortex_shiva.lua_old:       SetSignalMask( SIG_swim )
cortex_shiva.lua_old:    SetSignalMask( SIG_wake )
cortex_shiva.lua_old:       SetSignalMask( SIG_stop )
cortex_shiva.lua_old:       SetSignalMask( SIG_stop )
cortex_shiva.lua_old:    SetSignalMask( SIG_open )
cortex_shiva.lua_old:       SetSignalMask( SIG_aim1 )
cortex_shiva.lua_old:       SetSignalMask( SIG_aim3 )
cortex_shroud.bos:// OffsetToScriptCodeIndexArray        898
cortex_shroud.bos:// OffsetToScriptNameOffsetArray       8c4
cortex_shroud.bos:// OffsetToPieceNameOffsetArray        8f0
cortex_shroud.bos:// OffsetToScriptCode                  2c
cortex_shroud.bos:// OffsetToNameArray                   904
cortex_shroud.bos:// OffsetToFirstName                   904
cortex_shroud.bos:/*    80:*/               set ACTIVATION to 0;
cortex_shroud.bos:/*   133:*/               set-signal-mask 2;
cortex_shroud.bos:/*   138:*/               set ACTIVATION to 0;
cortex_shroud.bos:/*   144:*/               set ACTIVATION to 100;
cortex_shroud.bos:Killed(severity, corpsetype)
cortex_shroud.bos:          corpsetype = 1 ;
cortex_shroud.bos:          return(corpsetype);
cortex_shroud.bos:          corpsetype = 2 ;
cortex_shroud.bos:          return(corpsetype);
cortex_shroud.bos:          corpsetype = 3 ;
cortex_shroud.bos:          return(corpsetype);
cortex_shroud.bos:  corpsetype = 3 ;
cortex_shroud.bos:  return corpsetype;
cortex_apocalypse.bos:// OffsetToScriptCodeIndexArray        c08
cortex_apocalypse.bos:// OffsetToScriptNameOffsetArray       c4c
cortex_apocalypse.bos:// OffsetToPieceNameOffsetArray        c90
cortex_apocalypse.bos:// OffsetToScriptCode                  2c
cortex_apocalypse.bos:// OffsetToNameArray                   ca4
cortex_apocalypse.bos:// OffsetToFirstName                   ca4
cortex_apocalypse.bos:SetMaxReloadTime(Func_Var_1)
cortex_apocalypse.bos:/*   217:*/ set-signal-mask 0;
cortex_apocalypse.bos:/*   22c:*/ set-signal-mask SIG_AIM;
cortex_apocalypse.bos:Killed(severity, corpsetype)
cortex_apocalypse.bos:            corpsetype = 1 ;
cortex_apocalypse.bos:            return(corpsetype);
cortex_apocalypse.bos:            corpsetype = 2 ;
cortex_apocalypse.bos:            return(corpsetype);
cortex_apocalypse.bos:            corpsetype = 3 ;
cortex_apocalypse.bos:            return(corpsetype);
cortex_apocalypse.bos:    corpsetype = 3 ;
cortex_apocalypse.bos:    return corpsetype;
Binary file cortex_apocalypse.cob matches
cortex_phantasm.bos:            set ACTIVATION to 0;
cortex_phantasm.bos:            set-signal-mask 4;
cortex_phantasm.bos:            set ACTIVATION to 0;
cortex_phantasm.bos:            set ACTIVATION to 100;
cortex_phantasm.bos:    set-signal-mask SIG_MOVE;
cortex_phantasm.bos:Killed(severity, corpsetype)
cortex_phantasm.bos:            corpsetype = 1 ;
cortex_phantasm.bos:            return(corpsetype);
cortex_phantasm.bos:            corpsetype = 2 ;
cortex_phantasm.bos:            return(corpsetype);
cortex_phantasm.bos:            corpsetype = 3 ;
cortex_phantasm.bos:            return(corpsetype);
cortex_phantasm.bos:    corpsetype = 3 ;
cortex_phantasm.bos:    return corpsetype;
cortex_skuttle.bos:Killed(severity, corpsetype)
cortex_skuttle.bos:            corpsetype = 1 ;
cortex_skuttle.bos:            return(corpsetype);
cortex_skuttle.bos:            corpsetype = 2 ;
cortex_skuttle.bos:            return(corpsetype);
cortex_skuttle.bos:            corpsetype = 3 ;
cortex_skuttle.bos:            return(corpsetype);
cortex_skuttle.bos:    corpsetype = 3 ;
cortex_skuttle.bos:    return corpsetype;
cortex_cayman.bos:            // Set values for tilt
cortex_cayman.bos:    set-signal-mask SIG_MOVE;
cortex_cayman.bos:setSFXoccupy(Func_Var_1)
cortex_cayman.bos:SetMaxReloadTime(Func_Var_1)
cortex_cayman.bos:SetStunned(State)
cortex_cayman.bos:    set-signal-mask SIG_AIM;
cortex_cayman.bos:Killed(severity, corpsetype)
cortex_cayman.bos:            corpsetype = 1 ;
cortex_cayman.bos:            return(corpsetype);
cortex_cayman.bos:            corpsetype = 2 ;
cortex_cayman.bos:            return(corpsetype);
cortex_cayman.bos:            corpsetype = 3 ;
cortex_cayman.bos:            return(corpsetype);
cortex_cayman.bos:    corpsetype = 3 ;
cortex_cayman.bos:    return corpsetype;
Binary file cortex_cayman.cob matches
cortex_cataphract.bos:     set-signal-mask SIG_MOVE;
cortex_cataphract.bos:setSFXoccupy(state)
cortex_cataphract.bos:SetStunned(State)
cortex_cataphract.bos:     set-signal-mask SIG_AIM;
cortex_cataphract.bos:     set-signal-mask SIG_AIM_3;
cortex_cataphract.bos:Killed(severity, corpsetype)
cortex_cataphract.bos:                     corpsetype = 1;
cortex_cataphract.bos:                     return (corpsetype);
cortex_cataphract.bos:             corpsetype = 2;
cortex_cataphract.bos:             return (corpsetype);
cortex_cataphract.bos:             corpsetype = 3;
cortex_cataphract.bos:             return (corpsetype);
cortex_cataphract.bos:     corpsetype = 3;
cortex_cataphract.bos:     return (corpsetype);
Binary file cortex_cataphract.cob matches
cortex_solarcollector.bos:   set YARD_OPEN to 1;
cortex_solarcollector.bos:           set BUGGER_OFF to 1;
cortex_solarcollector.bos:           set YARD_OPEN to 1;
cortex_solarcollector.bos:   set BUGGER_OFF to 0;
cortex_solarcollector.bos:   set YARD_OPEN to 0;
cortex_solarcollector.bos:           set BUGGER_OFF to 1;
cortex_solarcollector.bos:           set YARD_OPEN to 0;
cortex_solarcollector.bos:   set BUGGER_OFF to 0;
cortex_solarcollector.bos:   set ACTIVATION to 100;
cortex_solarcollector.bos:           set ACTIVATION to 0;
cortex_solarcollector.bos:   set ARMORED to 0;
cortex_solarcollector.bos:   set ARMORED to 1;
cortex_solarcollector.bos:           set-signal-mask 2;
cortex_solarcollector.bos:           set ACTIVATION to 0;
cortex_solarcollector.bos:           set ACTIVATION to 100;
cortex_solarcollector.bos:Killed(severity, corpsetype)
cortex_solarcollector.bos:           corpsetype = 1 ;
cortex_solarcollector.bos:           return(corpsetype);
cortex_solarcollector.bos:           corpsetype = 2 ;
cortex_solarcollector.bos:           return(corpsetype);
cortex_solarcollector.bos:           corpsetype = 3 ;
cortex_solarcollector.bos:           return(corpsetype);
cortex_solarcollector.bos:   corpsetype = 3 ;
cortex_solarcollector.bos:   return corpsetype;
cortex_sonarstation.bos:// OffsetToScriptCodeIndexArray        42c
cortex_sonarstation.bos:// OffsetToScriptNameOffsetArray       450
cortex_sonarstation.bos:// OffsetToPieceNameOffsetArray        474
cortex_sonarstation.bos:// OffsetToScriptCode                  2c
cortex_sonarstation.bos:// OffsetToNameArray                   47c
cortex_sonarstation.bos:// OffsetToFirstName                   47c
cortex_sonarstation.bos:Killed(severity, corpsetype)
cortex_sonarstation.bos:           corpsetype = 1 ;
cortex_sonarstation.bos:           return(corpsetype);
cortex_sonarstation.bos:           corpsetype = 2 ;
cortex_sonarstation.bos:           return(corpsetype);
cortex_sonarstation.bos:           corpsetype = 3 ;
cortex_sonarstation.bos:           return(corpsetype);
cortex_sonarstation.bos:   corpsetype = 3 ;
cortex_sonarstation.bos:   return corpsetype;
cortex_deceiver.bos:    set-signal-mask SIG_WALK;
cortex_deceiver.bos:            set ACTIVATION to 0;
cortex_deceiver.bos:    set-signal-mask SIG_ACTIVATE;
cortex_deceiver.bos:    set-signal-mask SIG_ACTIVATE;
cortex_deceiver.bos:            set-signal-mask 4;
cortex_deceiver.bos:            set ACTIVATION to 0;
cortex_deceiver.bos:            set ACTIVATION to 100;
cortex_deceiver.bos:SetStunned(State)
cortex_deceiver.bos:Killed(severity, corpsetype)
cortex_deceiver.bos:            corpsetype = 1 ;
cortex_deceiver.bos:            return(corpsetype);
cortex_deceiver.bos:            corpsetype = 2 ;
cortex_deceiver.bos:            return(corpsetype);
cortex_deceiver.bos:            corpsetype = 3 ;
cortex_deceiver.bos:            return(corpsetype);
cortex_deceiver.bos:    corpsetype = 3 ;
cortex_deceiver.bos:    return corpsetype;
Binary file cortex_deceiver.cob matches
cortex_spectre.bos:     //set-signal-mask SIG_WALK;
cortex_spectre.bos:     set INBUILDSTANCE to 1;
cortex_spectre.bos:     set INBUILDSTANCE to 0;
cortex_spectre.bos:setSFXoccupy(Func_Var_1)
cortex_spectre.bos:Killed(severity, corpsetype)
cortex_spectre.bos:             corpsetype = 1 ;
cortex_spectre.bos:             return(corpsetype);
cortex_spectre.bos:             corpsetype = 2 ;
cortex_spectre.bos:             return(corpsetype);
cortex_spectre.bos:             corpsetype = 3 ;
cortex_spectre.bos:             return(corpsetype);
cortex_spectre.bos:     corpsetype = 3 ;
cortex_spectre.bos:     return corpsetype;
Binary file cortex_spectre.cob matches
cortex_kraken.bos:    set-signal-mask SIG_MOVE;
cortex_kraken.bos:Killed(severity, corpsetype)
cortex_kraken.bos:            corpsetype = 1 ;
cortex_kraken.bos:            return(corpsetype);
cortex_kraken.bos:            corpsetype = 2 ;
cortex_kraken.bos:            return(corpsetype);
cortex_kraken.bos:            corpsetype = 3 ;
cortex_kraken.bos:            return(corpsetype);
cortex_kraken.bos:    corpsetype = 3 ;
cortex_kraken.bos:    return corpsetype;
cortex_aggravator.bos:   set-signal-mask SIG_WALK;       if (bMoving) { //Frame:4
cortex_aggravator.bos:   set-signal-mask SIG_MOVE;
cortex_aggravator.bos:SetStunned(State)
cortex_aggravator.bos:   set-signal-mask SIG_AIM;
cortex_aggravator.bos:Killed(severity, corpsetype)
cortex_aggravator.bos:           corpsetype = 1 ;
cortex_aggravator.bos:           return(corpsetype);
cortex_aggravator.bos:           corpsetype = 2 ;
cortex_aggravator.bos:           return(corpsetype);
cortex_aggravator.bos:           corpsetype = 3 ;
cortex_aggravator.bos:           return(corpsetype);
cortex_aggravator.bos:   corpsetype = 3 ;
cortex_aggravator.bos:   return corpsetype;
Binary file cortex_aggravator.cob matches
cortex_orca.bos:     set-signal-mask SIG_MOVE;
cortex_orca.bos:Killed(severity, corpsetype)
cortex_orca.bos:             corpsetype = 1 ;
cortex_orca.bos:             return(corpsetype);
cortex_orca.bos:             corpsetype = 2 ;
cortex_orca.bos:             return(corpsetype);
cortex_orca.bos:             corpsetype = 3 ;
cortex_orca.bos:             return(corpsetype);
cortex_orca.bos:     corpsetype = 3 ;
cortex_orca.bos:     return corpsetype;
cortex_mammoth.bos:    set-signal-mask SIG_WALK;
cortex_mammoth.bos:SetMaxReloadTime(Func_Var_1)
cortex_mammoth.bos:    set-signal-mask SIG_AIM;
cortex_mammoth.bos:Killed(severity, corpsetype)
cortex_mammoth.bos:            corpsetype = 1;
cortex_mammoth.bos:            return (corpsetype);
cortex_mammoth.bos:            corpsetype = 2;
cortex_mammoth.bos:            return (corpsetype);
cortex_mammoth.bos:            corpsetype = 3;
cortex_mammoth.bos:            return (corpsetype);
cortex_mammoth.bos:    corpsetype = 3;
cortex_mammoth.bos:    return (corpsetype);
Binary file cortex_mammoth.cob matches
cortex_mammoth.lua_old:        SetSignalMask(SIG_WALK)
cortex_mammoth.lua_old:    SetSignalMask(SIG_RESTORE)
cortex_mammoth.lua_old:                SetSignalMask(SIG_AIM)
cortex_shipyard.bos:      set YARD_OPEN to 1;
cortex_shipyard.bos:              set BUGGER_OFF to 1;
cortex_shipyard.bos:              set YARD_OPEN to 1;
cortex_shipyard.bos:      set BUGGER_OFF to 0;
cortex_shipyard.bos:      set YARD_OPEN to 0;
cortex_shipyard.bos:              set BUGGER_OFF to 1;
cortex_shipyard.bos:              set YARD_OPEN to 0;
cortex_shipyard.bos:      set BUGGER_OFF to 0;
cortex_shipyard.bos:      set INBUILDSTANCE to 1;
cortex_shipyard.bos:      set INBUILDSTANCE to 0;
cortex_shipyard.bos:      set-signal-mask SIG_ACTIVATE;
cortex_shipyard.bos:      set-signal-mask 0;
cortex_shipyard.bos:Killed(severity, corpsetype)
cortex_shipyard.bos:              corpsetype = 1 ;
cortex_shipyard.bos:              return(corpsetype);
cortex_shipyard.bos:              corpsetype = 2 ;
cortex_shipyard.bos:              return(corpsetype);
cortex_shipyard.bos:              corpsetype = 3 ;
cortex_shipyard.bos:              return(corpsetype);
cortex_shipyard.bos:      corpsetype = 3 ;
cortex_shipyard.bos:      return corpsetype;
cortex_pinpointer.bos:// OffsetToScriptCodeIndexArray        d6c
cortex_pinpointer.bos:// OffsetToScriptNameOffsetArray       d98
cortex_pinpointer.bos:// OffsetToPieceNameOffsetArray        dc4
cortex_pinpointer.bos:// OffsetToScriptCode                  2c
cortex_pinpointer.bos:// OffsetToNameArray                   dec
cortex_pinpointer.bos:// OffsetToFirstName                   dec
cortex_pinpointer.bos:/*   1a1:*/ set-signal-mask 2;
cortex_pinpointer.bos:/*   1a6:*/ set ACTIVATION to 0;
cortex_pinpointer.bos:/*   1ae:*/ set ACTIVATION to 1;
cortex_pinpointer.bos:Killed(severity, corpsetype)
cortex_pinpointer.bos:            corpsetype = 1 ;
cortex_pinpointer.bos:            return(corpsetype);
cortex_pinpointer.bos:            corpsetype = 2 ;
cortex_pinpointer.bos:            return(corpsetype);
cortex_pinpointer.bos:            corpsetype = 3 ;
cortex_pinpointer.bos:            return(corpsetype);
cortex_pinpointer.bos:    corpsetype = 3 ;
cortex_pinpointer.bos:    return corpsetype;
cortex_termite.bos: set-signal-mask SIG_MOVE;
cortex_termite.bos: set-signal-mask SIG_MOVE;
cortex_termite.bos:SetMaxReloadTime(Func_Var_1)
cortex_termite.bos:SetStunned(State)
cortex_termite.bos: set-signal-mask SIG_AIM;
cortex_termite.bos:Killed(severity, corpsetype)
cortex_termite.bos:         corpsetype = 1 ;
cortex_termite.bos:         return(corpsetype);
cortex_termite.bos:         corpsetype = 2 ;
cortex_termite.bos:         return(corpsetype);
cortex_termite.bos:         corpsetype = 3 ;
cortex_termite.bos:         return(corpsetype);
cortex_termite.bos: corpsetype = 3 ;
cortex_termite.bos: return corpsetype;
Binary file cortex_termite.cob matches
cortex_caravan.bos:           // Set values for tilt
cortex_caravan.bos:   set-signal-mask SIG_MOVE;
cortex_caravan.bos:setSFXoccupy(Func_Var_1)
cortex_caravan.bos:   set-signal-mask 4;
cortex_caravan.bos:BoomReset()
cortex_caravan.bos:           set BUSY to 1;
cortex_caravan.bos:           call-script BoomReset();
cortex_caravan.bos:           set BUSY to 0;
cortex_caravan.bos:           set BUSY to 1;
cortex_caravan.bos:           call-script BoomReset();
cortex_caravan.bos:           set BUSY to 0;
cortex_caravan.bos:Killed(severity, corpsetype)
cortex_caravan.bos:           corpsetype = 1 ;
cortex_caravan.bos:           return(corpsetype);
cortex_caravan.bos:           corpsetype = 2 ;
cortex_caravan.bos:           return(corpsetype);
cortex_caravan.bos:           corpsetype = 3 ;
cortex_caravan.bos:           return(corpsetype);
cortex_caravan.bos:   corpsetype = 3 ;
cortex_caravan.bos:   return corpsetype;
Binary file cortex_caravan.cob matches
cortex_thug.bos:    set-signal-mask SIG_WALK;
cortex_thug.bos:SetStunned(State)
cortex_thug.bos:    set-signal-mask SIG_AIM;
cortex_thug.bos:Killed(severity, corpsetype)
cortex_thug.bos:            corpsetype = 1 ;
cortex_thug.bos:            return(corpsetype);
cortex_thug.bos:            corpsetype = 2 ;
cortex_thug.bos:            return(corpsetype);
cortex_thug.bos:            corpsetype = 3 ;
cortex_thug.bos:            return(corpsetype);
cortex_thug.bos:    corpsetype = 3 ;
cortex_thug.bos:    return corpsetype;
Binary file cortex_thug.cob matches
cortex_tidalgenerator.bos:Killed(severity, corpsetype)
cortex_tidalgenerator.bos:            corpsetype = 1 ;
cortex_tidalgenerator.bos:            return(corpsetype);
cortex_tidalgenerator.bos:            corpsetype = 2 ;
cortex_tidalgenerator.bos:            return(corpsetype);
cortex_tidalgenerator.bos:            corpsetype = 3 ;
cortex_tidalgenerator.bos:            return(corpsetype);
cortex_tidalgenerator.bos:    corpsetype = 3 ;
cortex_tidalgenerator.bos:    return corpsetype;
cortex_angler.bos:Killed(severity, corpsetype)
cortex_angler.bos:           corpsetype = 1 ;
cortex_angler.bos:           return(corpsetype);
cortex_angler.bos:           corpsetype = 2 ;
cortex_angler.bos:           return(corpsetype);
cortex_angler.bos:           corpsetype = 3 ;
cortex_angler.bos:           return(corpsetype);
cortex_angler.bos:   corpsetype = 3 ;
cortex_angler.bos:   return corpsetype;
cortex_urchin.bos:      set-signal-mask SIG_AIM;
cortex_urchin.bos:Killed(severity, corpsetype)
cortex_urchin.bos:              corpsetype = 1 ;
cortex_urchin.bos:              return(corpsetype);
cortex_urchin.bos:              corpsetype = 2 ;
cortex_urchin.bos:              return(corpsetype);
cortex_urchin.bos:              corpsetype = 3 ;
cortex_urchin.bos:              return(corpsetype);
cortex_urchin.bos:      corpsetype = 3 ;
cortex_urchin.bos:      return corpsetype;
cortex_persecutor.bos:   set ARMORED to 0;
cortex_persecutor.bos:   set ARMORED to 1;
cortex_persecutor.bos:   set-signal-mask 0;
cortex_persecutor.bos:SetStunned(State)
cortex_persecutor.bos:   set-signal-mask SIG_AIM;
cortex_persecutor.bos:   set-signal-mask 2;
cortex_persecutor.bos:/*SetMaxReloadTime(Func_Var_1)
cortex_persecutor.bos:Killed(severity, corpsetype)
cortex_persecutor.bos:           corpsetype = 1 ;
cortex_persecutor.bos:           return(corpsetype);
cortex_persecutor.bos:           corpsetype = 2 ;
cortex_persecutor.bos:           return(corpsetype);
cortex_persecutor.bos:           corpsetype = 3 ;
cortex_persecutor.bos:           return(corpsetype);
cortex_persecutor.bos:   corpsetype = 3 ;
cortex_persecutor.bos:   return corpsetype;
Binary file cortex_persecutor.cob matches
cortex_tremor.bos:SetStunned(State)
cortex_tremor.bos:    set-signal-mask SIG_AIM;
cortex_tremor.bos:Killed(severity, corpsetype)
cortex_tremor.bos:            corpsetype = 1 ;
cortex_tremor.bos:            return(corpsetype);
cortex_tremor.bos:            corpsetype = 2 ;
cortex_tremor.bos:            return(corpsetype);
cortex_tremor.bos:            corpsetype = 3 ;
cortex_tremor.bos:            return(corpsetype);
cortex_tremor.bos:    corpsetype = 3 ;
cortex_tremor.bos:    return corpsetype;
Binary file cortex_tremor.cob matches
cortex_catalyst.bos:// OffsetToScriptCodeIndexArray        c08
cortex_catalyst.bos:// OffsetToScriptNameOffsetArray       c4c
cortex_catalyst.bos:// OffsetToPieceNameOffsetArray        c90
cortex_catalyst.bos:// OffsetToScriptCode                  2c
cortex_catalyst.bos:// OffsetToNameArray                   ca4
cortex_catalyst.bos:// OffsetToFirstName                   ca4
cortex_catalyst.bos:SetMaxReloadTime(Func_Var_1)
cortex_catalyst.bos:/*   217:*/ set-signal-mask 0;
cortex_catalyst.bos:/*   22c:*/ set-signal-mask SIG_AIM;
cortex_catalyst.bos:Killed(severity, corpsetype)
cortex_catalyst.bos:            corpsetype = 1 ;
cortex_catalyst.bos:            return(corpsetype);
cortex_catalyst.bos:            corpsetype = 2 ;
cortex_catalyst.bos:            return(corpsetype);
cortex_catalyst.bos:            corpsetype = 3 ;
cortex_catalyst.bos:            return(corpsetype);
cortex_catalyst.bos:    corpsetype = 3 ;
cortex_catalyst.bos:    return corpsetype;
Binary file cortex_catalyst.cob matches
cortex_coffin.bos:SetDirection(heading)
cortex_coffin.bos:   set-signal-mask SIG_MOVE;
cortex_coffin.bos:   set-signal-mask 4;
cortex_coffin.bos:BoomReset()
cortex_coffin.bos:           set BUSY to 1;
cortex_coffin.bos:           call-script BoomReset();
cortex_coffin.bos:           set BUSY to 0;
cortex_coffin.bos:           set BUSY to 1;
cortex_coffin.bos:           call-script BoomReset();
cortex_coffin.bos:           set BUSY to 0;
cortex_coffin.bos:Killed(severity, corpsetype)
cortex_coffin.bos:           corpsetype = 1 ;
cortex_coffin.bos:           return(corpsetype);
cortex_coffin.bos:           corpsetype = 2 ;
cortex_coffin.bos:           return(corpsetype);
cortex_coffin.bos:           corpsetype = 3 ;
cortex_coffin.bos:           return(corpsetype);
cortex_coffin.bos:   corpsetype = 3 ;
cortex_coffin.bos:   return corpsetype;
Binary file cortex_coffin.cob matches
cortex_hardenedenergystorage.bos:// OffsetToScriptCodeIndexArray        5b0
cortex_hardenedenergystorage.bos:// OffsetToScriptNameOffsetArray       5c0
cortex_hardenedenergystorage.bos:// OffsetToPieceNameOffsetArray        5d0
cortex_hardenedenergystorage.bos:// OffsetToScriptCode                  2c
cortex_hardenedenergystorage.bos:// OffsetToNameArray                   5e4
cortex_hardenedenergystorage.bos:// OffsetToFirstName                   5e4
cortex_hardenedenergystorage.bos:Killed(severity, corpsetype)
cortex_hardenedenergystorage.bos:         corpsetype = 1 ;
cortex_hardenedenergystorage.bos:         return(corpsetype);
cortex_hardenedenergystorage.bos:         corpsetype = 2 ;
cortex_hardenedenergystorage.bos:         return(corpsetype);
cortex_hardenedenergystorage.bos:         corpsetype = 3 ;
cortex_hardenedenergystorage.bos:         return(corpsetype);
cortex_hardenedenergystorage.bos: corpsetype = 3 ;
cortex_hardenedenergystorage.bos: return corpsetype;
cortex_hardenedmetalstorage.bos:// OffsetToScriptCodeIndexArray        420
cortex_hardenedmetalstorage.bos:// OffsetToScriptNameOffsetArray       430
cortex_hardenedmetalstorage.bos:// OffsetToPieceNameOffsetArray        440
cortex_hardenedmetalstorage.bos:// OffsetToScriptCode                  2c
cortex_hardenedmetalstorage.bos:// OffsetToNameArray                   448
cortex_hardenedmetalstorage.bos:// OffsetToFirstName                   448
cortex_hardenedmetalstorage.bos:Killed(severity, corpsetype)
cortex_hardenedmetalstorage.bos:         corpsetype = 1 ;
cortex_hardenedmetalstorage.bos:         return(corpsetype);
cortex_hardenedmetalstorage.bos:         corpsetype = 2 ;
cortex_hardenedmetalstorage.bos:         return(corpsetype);
cortex_hardenedmetalstorage.bos:         corpsetype = 3 ;
cortex_hardenedmetalstorage.bos:         return(corpsetype);
cortex_hardenedmetalstorage.bos: corpsetype = 3 ;
cortex_hardenedmetalstorage.bos: return corpsetype;
cortex_navalenergystorage.bos:// OffsetToScriptCodeIndexArray        2f4
cortex_navalenergystorage.bos:// OffsetToScriptNameOffsetArray       304
cortex_navalenergystorage.bos:// OffsetToPieceNameOffsetArray        314
cortex_navalenergystorage.bos:// OffsetToScriptCode                  2c
cortex_navalenergystorage.bos:// OffsetToNameArray                   31c
cortex_navalenergystorage.bos:// OffsetToFirstName                   31c
cortex_navalenergystorage.bos:Killed(severity, corpsetype)
cortex_navalenergystorage.bos:            corpsetype = 1 ;
cortex_navalenergystorage.bos:            return(corpsetype);
cortex_navalenergystorage.bos:            corpsetype = 2 ;
cortex_navalenergystorage.bos:            return(corpsetype);
cortex_navalenergystorage.bos:            corpsetype = 3 ;
cortex_navalenergystorage.bos:            return(corpsetype);
cortex_navalenergystorage.bos:    corpsetype = 3 ;
cortex_navalenergystorage.bos:    return corpsetype;
cortex_navalfusionreactor.bos:// OffsetToScriptCodeIndexArray        1f0
cortex_navalfusionreactor.bos:// OffsetToScriptNameOffsetArray       200
cortex_navalfusionreactor.bos:// OffsetToPieceNameOffsetArray        210
cortex_navalfusionreactor.bos:// OffsetToScriptCode                  2c
cortex_navalfusionreactor.bos:// OffsetToNameArray                   218
cortex_navalfusionreactor.bos:// OffsetToFirstName                   218
cortex_navalfusionreactor.bos:Killed(severity, corpsetype)
cortex_navalfusionreactor.bos:           corpsetype = 1 ;
cortex_navalfusionreactor.bos:           return(corpsetype);
cortex_navalfusionreactor.bos:           corpsetype = 2 ;
cortex_navalfusionreactor.bos:           return(corpsetype);
cortex_navalfusionreactor.bos:           corpsetype = 3 ;
cortex_navalfusionreactor.bos:           return(corpsetype);
cortex_navalfusionreactor.bos:   corpsetype = 3 ;
cortex_navalfusionreactor.bos:   return corpsetype;
cortex_navalmetalextractor.bos:   set-signal-mask SIG_ACTIVATE;
cortex_navalmetalextractor.bos:SetSpeed(Func_Var_1)
cortex_navalmetalextractor.bos:Killed(severity, corpsetype)
cortex_navalmetalextractor.bos:           corpsetype = 1 ;
cortex_navalmetalextractor.bos:           return(corpsetype);
cortex_navalmetalextractor.bos:           corpsetype = 2 ;
cortex_navalmetalextractor.bos:           return(corpsetype);
cortex_navalmetalextractor.bos:           corpsetype = 3 ;
cortex_navalmetalextractor.bos:           return(corpsetype);
cortex_navalmetalextractor.bos:   corpsetype = 3 ;
cortex_navalmetalextractor.bos:   return corpsetype;
Binary file cortex_navalmetalextractor.cob matches
cortex_navaladvancedmetalextractor.bos:   set ARMORED to 0;
cortex_navaladvancedmetalextractor.bos:   set ARMORED to 1;
cortex_navaladvancedmetalextractor.bos:   set ARMORED to 1;
cortex_navaladvancedmetalextractor.bos:   set-signal-mask SIG_ACTIVATE;
cortex_navaladvancedmetalextractor.bos:SetSpeed(Func_Var_1)
cortex_navaladvancedmetalextractor.bos:Killed(severity, corpsetype)
cortex_navaladvancedmetalextractor.bos:           corpsetype = 1 ;
cortex_navaladvancedmetalextractor.bos:           return(corpsetype);
cortex_navaladvancedmetalextractor.bos:           corpsetype = 2 ;
cortex_navaladvancedmetalextractor.bos:           return(corpsetype);
cortex_navaladvancedmetalextractor.bos:           corpsetype = 3 ;
cortex_navaladvancedmetalextractor.bos:           return(corpsetype);
cortex_navaladvancedmetalextractor.bos:   corpsetype = 3 ;
cortex_navaladvancedmetalextractor.bos:   return corpsetype;
Binary file cortex_navaladvancedmetalextractor.cob matches
cortex_navaladvancedenergyconverter.bos:Killed(severity, corpsetype)
cortex_navaladvancedenergyconverter.bos:           corpsetype = 1;
cortex_navaladvancedenergyconverter.bos:           return (corpsetype);
cortex_navaladvancedenergyconverter.bos:           corpsetype = 2;
cortex_navaladvancedenergyconverter.bos:           return (corpsetype);
cortex_navaladvancedenergyconverter.bos:           corpsetype = 3;
cortex_navaladvancedenergyconverter.bos:           return (corpsetype);
cortex_navaladvancedenergyconverter.bos:   corpsetype = 3;
cortex_navaladvancedenergyconverter.bos:   return (corpsetype);
cortex_navalmetalstorage.bos:// OffsetToScriptCodeIndexArray        2ec
cortex_navalmetalstorage.bos:// OffsetToScriptNameOffsetArray       2fc
cortex_navalmetalstorage.bos:// OffsetToPieceNameOffsetArray        30c
cortex_navalmetalstorage.bos:// OffsetToScriptCode                  2c
cortex_navalmetalstorage.bos:// OffsetToNameArray                   310
cortex_navalmetalstorage.bos:// OffsetToFirstName                   310
cortex_navalmetalstorage.bos:Killed(severity, corpsetype)
cortex_navalmetalstorage.bos:            corpsetype = 1 ;
cortex_navalmetalstorage.bos:            return(corpsetype);
cortex_navalmetalstorage.bos:            corpsetype = 2 ;
cortex_navalmetalstorage.bos:            return(corpsetype);
cortex_navalmetalstorage.bos:            corpsetype = 3 ;
cortex_navalmetalstorage.bos:            return(corpsetype);
cortex_navalmetalstorage.bos:    corpsetype = 3 ;
cortex_navalmetalstorage.bos:    return corpsetype;
cortex_hercules.bos:    set-signal-mask 8;
cortex_hercules.bos:    set-signal-mask 8;
cortex_hercules.bos:    set-signal-mask 8;
cortex_hercules.bos:Killed(severity, corpsetype)
cortex_hercules.bos:            corpsetype = 1 ;
cortex_hercules.bos:            return(corpsetype);
cortex_hercules.bos:            corpsetype = 2 ;
cortex_hercules.bos:            return(corpsetype);
cortex_hercules.bos:            corpsetype = 3 ;
cortex_hercules.bos:            return(corpsetype);
cortex_hercules.bos:    corpsetype = 3 ;
cortex_hercules.bos:    return corpsetype;
cortex_nighthawk.bos:Killed(severity, corpsetype)
cortex_nighthawk.bos:            corpsetype = 1 ;
cortex_nighthawk.bos:            return(corpsetype);
cortex_nighthawk.bos:            corpsetype = 2 ;
cortex_nighthawk.bos:            return(corpsetype);
cortex_nighthawk.bos:            corpsetype = 3 ;
cortex_nighthawk.bos:            return(corpsetype);
cortex_nighthawk.bos:    corpsetype = 3 ;
cortex_nighthawk.bos:    return corpsetype;
cortex_valiant.bos:Killed(severity, corpsetype)
cortex_valiant.bos:            corpsetype = 1 ;
cortex_valiant.bos:            return(corpsetype);
cortex_valiant.bos:            corpsetype = 2 ;
cortex_valiant.bos:            return(corpsetype);
cortex_valiant.bos:            corpsetype = 3 ;
cortex_valiant.bos:            return(corpsetype);
cortex_valiant.bos:    corpsetype = 3 ;
cortex_valiant.bos:    return corpsetype;
cortex_scorpion.lua:    UnitScript.SetSignalMask(SIG_OPENCLOSE + SIG_AIM);
cortex_scorpion.lua:    UnitScript.SetUnitValue(COB.ARMORED, 1);
cortex_scorpion.lua:    UnitScript.SetSignalMask(SIG_OPENCLOSE);
cortex_scorpion.lua:    UnitScript.SetUnitValue(COB.ARMORED, 0);
cortex_scorpion.lua:    UnitScript.SetSignalMask(SIG_AIM);
cortex_scorpion.lua:    local corpsetype;
cortex_scorpion.lua:            if (not is_open) then corpsetype = 1; end
cortex_scorpion.lua:            if (is_open) then corpsetype = 2; end
cortex_scorpion.lua:            return corpsetype;
cortex_scorpion.lua:            if (not is_open) then corpsetype = 2; end
cortex_scorpion.lua:            if (is_open) then corpsetype = 3; end
cortex_scorpion.lua:            return corpsetype;
cortex_scorpion.lua:            if (not is_open) then corpsetype = 3; end
cortex_scorpion.lua:            if (is_open) then corpsetype = 3; end
cortex_scorpion.lua:            return corpsetype;
cortex_scorpion.lua:    corpsetype = 3;
cortex_scorpion.lua:    return corpsetype;
cortex_augur.bos:    set-signal-mask SIG_WALK;
cortex_augur.bos:    set-signal-mask SIG_ACTIVATE;
cortex_augur.bos:    set-signal-mask SIG_ACTIVATE;
cortex_augur.bos:SetStunned(State)
cortex_augur.bos:Killed(severity, corpsetype)
cortex_augur.bos:            corpsetype = 1 ;
cortex_augur.bos:            return(corpsetype);
cortex_augur.bos:            corpsetype = 2 ;
cortex_augur.bos:            return(corpsetype);
cortex_augur.bos:            corpsetype = 3 ;
cortex_augur.bos:            return(corpsetype);
cortex_augur.bos:    corpsetype = 3 ;
cortex_augur.bos:    return corpsetype;
Binary file cortex_augur.cob matches
cortex_vehicleplant.bos:      set YARD_OPEN to 1;
cortex_vehicleplant.bos:              set BUGGER_OFF to 1;
cortex_vehicleplant.bos:              set YARD_OPEN to 1;
cortex_vehicleplant.bos:      set BUGGER_OFF to 0;
cortex_vehicleplant.bos:      set YARD_OPEN to 0;
cortex_vehicleplant.bos:              set BUGGER_OFF to 1;
cortex_vehicleplant.bos:              set YARD_OPEN to 0;
cortex_vehicleplant.bos:      set BUGGER_OFF to 0;
cortex_vehicleplant.bos:      set INBUILDSTANCE to 1;
cortex_vehicleplant.bos:      set INBUILDSTANCE to 0;
cortex_vehicleplant.bos:      set-signal-mask SIG_ACTIVATE;
cortex_vehicleplant.bos:      set-signal-mask 0;
cortex_vehicleplant.bos:Killed(severity, corpsetype)
cortex_vehicleplant.bos:              corpsetype = 1 ;
cortex_vehicleplant.bos:              return(corpsetype);
cortex_vehicleplant.bos:              corpsetype = 2 ;
cortex_vehicleplant.bos:              return(corpsetype);
cortex_vehicleplant.bos:              corpsetype = 3 ;
cortex_vehicleplant.bos:              return(corpsetype);
cortex_vehicleplant.bos:      corpsetype = 3 ;
cortex_vehicleplant.bos:      return corpsetype;
cortex_vehicleplant.lua:      UnitScript.SetSignalMask(SIG_OPENCLOSE);
cortex_vehicleplant.lua:      UnitScript.SetUnitValue(COB.INBUILDSTANCE, 1);
cortex_vehicleplant.lua:      UnitScript.SetSignalMask(SIG_OPENCLOSE);
cortex_vehicleplant.lua:      UnitScript.SetUnitValue(COB.INBUILDSTANCE, 0);
cortex_vehicleplant.lua:      UnitScript.SetSignalMask(SIG_ACTIVATE);
cortex_vehicleplant.lua:      local corpsetype;
cortex_vehicleplant.lua:              corpsetype = 1;
cortex_vehicleplant.lua:              return corpsetype;
cortex_vehicleplant.lua:              corpsetype = 2;
cortex_vehicleplant.lua:              return corpsetype;
cortex_vehicleplant.lua:              corpsetype = 3;
cortex_vehicleplant.lua:              return corpsetype;
cortex_vehicleplant.lua:      corpsetype = 3;
cortex_vehicleplant.lua:      return corpsetype;
cortex_omen.bos:    set-signal-mask SIG_ACTIVATE;
cortex_omen.bos:    set-signal-mask SIG_ACTIVATE;
cortex_omen.bos:SetStunned(State)
cortex_omen.bos:Killed(severity, corpsetype)
cortex_omen.bos:            corpsetype = 1 ;
cortex_omen.bos:            return(corpsetype);
cortex_omen.bos:            corpsetype = 2 ;
cortex_omen.bos:            return(corpsetype);
cortex_omen.bos:            corpsetype = 3 ;
cortex_omen.bos:            return(corpsetype);
cortex_omen.bos:    corpsetype = 3 ;
cortex_omen.bos:    return corpsetype;
Binary file cortex_omen.cob matches
cortex_negotiator.bos:SetMaxReloadTime(Func_Var_1)
cortex_negotiator.bos:    set-signal-mask 0;
cortex_negotiator.bos:SetStunned(State)
cortex_negotiator.bos:    set-signal-mask SIG_RESTORE;
cortex_negotiator.bos:    set-signal-mask SIG_AIM;
cortex_negotiator.bos:Killed(severity, corpsetype)
cortex_negotiator.bos:            corpsetype = 1 ;
cortex_negotiator.bos:            return(corpsetype);
cortex_negotiator.bos:            corpsetype = 2 ;
cortex_negotiator.bos:            return(corpsetype);
cortex_negotiator.bos:            corpsetype = 3 ;
cortex_negotiator.bos:            return(corpsetype);
cortex_negotiator.bos:    corpsetype = 3 ;
cortex_negotiator.bos:    return corpsetype;
Binary file cortex_negotiator.cob matches
cortex_windturbine.bos:SetSpeed(windSpd) //called every 450 frames
cortex_windturbine.bos:                     set ACTIVATION to 100;
cortex_windturbine.bos:SetDirection(windDir) //called every 450 frames
cortex_windturbine.bos:SetStunned(State)
cortex_windturbine.bos:             set ACTIVATION to 0;
cortex_windturbine.bos:             set ACTIVATION to 100;
cortex_windturbine.bos:Killed(severity, corpsetype)
cortex_windturbine.bos:             corpsetype = 1 ;
cortex_windturbine.bos:             return(corpsetype);
cortex_windturbine.bos:             corpsetype = 2 ;
cortex_windturbine.bos:             return(corpsetype);
cortex_windturbine.bos:             corpsetype = 3 ;
cortex_windturbine.bos:             return(corpsetype);
cortex_windturbine.bos:     corpsetype = 3 ;
cortex_windturbine.bos:     return corpsetype;
Binary file cortex_windturbine.cob matches
cortex_wolverine.bos:SetMaxReloadTime(Func_Var_1)
cortex_wolverine.bos:SetStunned(State)
cortex_wolverine.bos:    set-signal-mask SIG_AIM;
cortex_wolverine.bos:Killed(severity, corpsetype)
cortex_wolverine.bos:            corpsetype = 1 ;
cortex_wolverine.bos:            return(corpsetype);
cortex_wolverine.bos:            corpsetype = 2 ;
cortex_wolverine.bos:            return(corpsetype);
cortex_wolverine.bos:            corpsetype = 3 ;
cortex_wolverine.bos:            return(corpsetype);
cortex_wolverine.bos:    corpsetype = 3 ;
cortex_wolverine.bos:    return corpsetype;
Binary file cortex_wolverine.cob matches
exptype.h:** EXPtype.h -- Explosion Type information and GET/SET constants for s
cripts
exptype.h:#define ACTIVATION           1  // set or get
exptype.h:#define STANDINGMOVEORDERS   2  // set or get
exptype.h:#define STANDINGFIREORDERS   3  // set or get
exptype.h:#define INBUILDSTANCE        5  // set or get
exptype.h:#define BUSY                 6  // set or get (used by misc. special c
ase missions like transport ships)
exptype.h:#define YARD_OPEN           18  // set or get (change which plots we o
ccupy when building opens and closes)
exptype.h:#define BUGGER_OFF          19  // set or get (ask other units to clea
r the area)
exptype.h:#define ARMORED             20  // set or get
exptype.h:#define UPRIGHT                   79 // set or get
exptype.h:#define LOS_RADIUS                85 // set or get
exptype.h:#define AIR_LOS_RADIUS            86 // set or get
exptype.h:#define RADAR_RADIUS              87 // set or get
exptype.h:#define JAMMER_RADIUS             88 // set or get
exptype.h:#define SONAR_RADIUS              89 // set or get
exptype.h:#define SONAR_JAM_RADIUS          90 // set or get
exptype.h:#define SEISMIC_RADIUS            91 // set or get
exptype.h:#define CURRENT_FUEL              93 // set or get
exptype.h:#define SHIELD_POWER              95 // set or get
exptype.h:#define STEALTH                   96 // set or get
exptype.h:#define CRASHING                  97 // set or get, returns whether ai
rcraft isCrashing state
exptype.h:#define CHANGE_TARGET             98 // set, the value it's set to det
ermines the affected weapon
exptype.h:#define CEG_DAMAGE                99 // set
exptype.h:#define ALPHA_THRESHOLD          103 // set or get
exptype.h:#define SET_WEAPON_UNIT_TARGET   106 // get (fake set)
exptype.h:#define SET_WEAPON_GROUND_TARGET 107 // get (fake set)
exptype.h:#define SONAR_STEALTH            108 // set or get
exptype.h:// Indices for SET, GET, and GET_UNIT_VALUE for LUA return values
exptype.h:#define FLANK_B_MODE          120 // set or get
exptype.h:#define FLANK_B_DIR           121 // set or get, set is through get fo
r multiple args
exptype.h:#define FLANK_B_MOBILITY_ADD  122 // set or get
exptype.h:#define FLANK_B_MAX_DAMAGE    123 // set or get
exptype.h:#define FLANK_B_MIN_DAMAGE    124 // set or get
exptype.h:#define WEAPON_RELOADSTATE    125 // get (with fake set)  get WEAPON_R
ELOADSTATE(weaponNum)           for GET
exptype.h:#define WEAPON_RELOADTIME     126 // get (with fake set)  get WEAPON_R
ELOADSTATE(-weaponNum,val)      for SET
exptype.h:#define WEAPON_ACCURACY               127 // get (with fake set)
exptype.h:#define WEAPON_SPRAY          128 // get (with fake set)
exptype.h:#define WEAPON_RANGE          129 // get (with fake set)
exptype.h:#define WEAPON_PROJECTILE_SPEED       130 // get (with fake set)
exptype.h:#define WEAPON_STOCKPILE_COUNT  139 // get (with fake set)
exptype.h:#define ENERGY_MAKE             140 // set or get (100*E production)
exptype.h:#define METAL_MAKE              141 // set or get (100*M production)
Binary file fgrep.exe matches
LICENSE:organization, or substantially all assets of one, or subdividing an
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 1;
meteor.bos:     set ARMORED to 0;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 0;
meteor.bos:Killed(severity, corpsetype)
fgrep: New folder: Is a directory
roost.bos:      set ARMORED to 0;
roost.bos:Killed(severity, corpsetype)
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
standard_commands_gpl.h:// Indices for set/get value
standard_commands_gpl.h:#define ACTIVATION              1       // set or get
standard_commands_gpl.h:#define STANDINGMOVEORDERS      2       // set or get
standard_commands_gpl.h:#define STANDINGFIREORDERS      3       // set or get
standard_commands_gpl.h:#define INBUILDSTANCE           5       // set or get
standard_commands_gpl.h:#define BUSY                    6       // set or get (u
sed by misc. special case missions like transport ships)
standard_commands_gpl.h:#define YARD_OPEN                       18      // set o
r get (change which plots we occupy when building opens and closes)
standard_commands_gpl.h:#define BUGGER_OFF              19      // set or get (a
sk other units to clear the area)
standard_commands_gpl.h:#define ARMORED                 20      // SET or GET.
Turns on the Armored state.
standard_commands_gpl.h:#define CURRENT_SPEED           29      // SET only, if
I'm reading the code right.  Gives us a new speed for the next frame ONLY.
standard_commands_gpl.h:#define VETERAN_LEVEL           32      // SET or GET.
Can make units super-accurate, or keep them inaccurate.
standard_commands_gpl.h:#define MAX_SPEED                       75      // SET o
nly.  Alters MaxVelocity for the given unit.
teleport.bos:Killed(severity, corpsetype)
unitDefsTurretSpeeds.h:/* unitDefsTurretSpeeds.h -- sets turret speed via unitDe
fs (through lua gadget Spring.CallCOBScript())
unitDefsTurretSpeeds.h:SetWeapon1TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon2TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon3TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon4TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon5TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon6TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon7TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon8TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon9TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon10TurretSpeed(var1,var2)
weapon1control.h:       start-script InitialSetup1();
weapon1control.h:       start-script Weapon1SetWtdAim(heading, pitch);
weapon1control.h:SetStunned(State)
weapon1control.h:- Weapon1Control moves the aim pieces depending on turretSpeeds
, sets pitch = 1 when pitch reached and head = 1 when head reached
weapon1control.h:- Weapon1Drawn allows unit to fire by setting wpnReady1 = 1
weapon1control.h:InitialSetup1()
weapon1control.h:Weapon1SetWtdAim(pitch, heading)
yard.h: set YARD_OPEN to TRUE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to TRUE;
yard.h: set BUGGER_OFF to FALSE;
yard.h: set YARD_OPEN to FALSE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to FALSE;
yard.h: set BUGGER_OFF to FALSE;

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i " SET " *
armada_sweeper.bos:              // Set values for tilt
armada_crocodile.bos:            // Set values for tilt
armada_constructionhovercraft.bos:              // Set values for tilt
armada_umbra.bos:             // Set values for tilt
armada_umbra.bos:             // Set Values for differential system
fgrep: armada_marauder_lus: Is a directory
armada_possum.bos:              // Set values for tilt
armada_serpent.bos:            // Set values for tilt
armada_seeker.bos:              // Set values for tilt
armada_bearer.bos:           // Set values for tilt
constants.h:#define ACTIVATION           1  // set or get
constants.h:#define STANDINGMOVEORDERS   2  // set or get
constants.h:#define STANDINGFIREORDERS   3  // set or get
constants.h:#define INBUILDSTANCE        5  // set or get
constants.h:#define BUSY                 6  // set or get (used by misc. special
 case missions like transport ships)
constants.h:#define YARD_OPEN           18  // set or get (change which plots we
 occupy when building opens and closes)
constants.h:#define BUGGER_OFF          19  // set or get (ask other units to cl
ear the area)
constants.h:#define ARMORED             20  // set or get
constants.h:#define UPRIGHT                   79 // set or get
constants.h:#define LOS_RADIUS                85 // set or get
constants.h:#define AIR_LOS_RADIUS            86 // set or get
constants.h:#define RADAR_RADIUS              87 // set or get
constants.h:#define JAMMER_RADIUS             88 // set or get
constants.h:#define SONAR_RADIUS              89 // set or get
constants.h:#define SONAR_JAM_RADIUS          90 // set or get
constants.h:#define SEISMIC_RADIUS            91 // set or get
constants.h:#define CURRENT_FUEL              93 // set or get
constants.h:#define SHIELD_POWER              95 // set or get
constants.h:#define STEALTH                   96 // set or get
constants.h:#define CRASHING                  97 // set or get, returns whether
aircraft isCrashing state
constants.h:#define CHANGE_TARGET             98 // set, the value it's set to d
etermines the affected weapon
constants.h:#define ALPHA_THRESHOLD          103 // set or get
constants.h:#define SONAR_STEALTH            108 // set or get
constants.h:#define FLANK_B_MODE                120 // set or get
constants.h:#define FLANK_B_DIR         121 // set or get, set is through get fo
r multiple args
constants.h:#define FLANK_B_MOBILITY_ADD        122 // set or get
constants.h:#define FLANK_B_MAX_DAMAGE  123 // set or get
constants.h:#define FLANK_B_MIN_DAMAGE  124 // set or get
constants.h:#define ENERGY_MAKE             140 // set or get (100*E production)

constants.h:#define METAL_MAKE              141 // set or get (100*M production)

cortex_birdeater.bos:              // Set values for tilt
cortex_constructionhovercraft.bos:              // Set values for tilt
cortex_halberd.bos:             // Set values for tilt
cortex_mangonel.bos:              // Set values for tilt
cortex_goon.bos:              // Set values for tilt
cortex_cayman.bos:            // Set values for tilt
cortex_caravan.bos:           // Set values for tilt
exptype.h:#define ACTIVATION           1  // set or get
exptype.h:#define STANDINGMOVEORDERS   2  // set or get
exptype.h:#define STANDINGFIREORDERS   3  // set or get
exptype.h:#define INBUILDSTANCE        5  // set or get
exptype.h:#define BUSY                 6  // set or get (used by misc. special c
ase missions like transport ships)
exptype.h:#define YARD_OPEN           18  // set or get (change which plots we o
ccupy when building opens and closes)
exptype.h:#define BUGGER_OFF          19  // set or get (ask other units to clea
r the area)
exptype.h:#define ARMORED             20  // set or get
exptype.h:#define UPRIGHT                   79 // set or get
exptype.h:#define LOS_RADIUS                85 // set or get
exptype.h:#define AIR_LOS_RADIUS            86 // set or get
exptype.h:#define RADAR_RADIUS              87 // set or get
exptype.h:#define JAMMER_RADIUS             88 // set or get
exptype.h:#define SONAR_RADIUS              89 // set or get
exptype.h:#define SONAR_JAM_RADIUS          90 // set or get
exptype.h:#define SEISMIC_RADIUS            91 // set or get
exptype.h:#define CURRENT_FUEL              93 // set or get
exptype.h:#define SHIELD_POWER              95 // set or get
exptype.h:#define STEALTH                   96 // set or get
exptype.h:#define CRASHING                  97 // set or get, returns whether ai
rcraft isCrashing state
exptype.h:#define CHANGE_TARGET             98 // set, the value it's set to det
ermines the affected weapon
exptype.h:#define ALPHA_THRESHOLD          103 // set or get
exptype.h:#define SONAR_STEALTH            108 // set or get
exptype.h:#define FLANK_B_MODE          120 // set or get
exptype.h:#define FLANK_B_DIR           121 // set or get, set is through get fo
r multiple args
exptype.h:#define FLANK_B_MOBILITY_ADD  122 // set or get
exptype.h:#define FLANK_B_MAX_DAMAGE    123 // set or get
exptype.h:#define FLANK_B_MIN_DAMAGE    124 // set or get
exptype.h:#define ENERGY_MAKE             140 // set or get (100*E production)
exptype.h:#define METAL_MAKE              141 // set or get (100*M production)
fgrep: New folder: Is a directory
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
standard_commands_gpl.h:#define ACTIVATION              1       // set or get
standard_commands_gpl.h:#define STANDINGMOVEORDERS      2       // set or get
standard_commands_gpl.h:#define STANDINGFIREORDERS      3       // set or get
standard_commands_gpl.h:#define INBUILDSTANCE           5       // set or get
standard_commands_gpl.h:#define BUSY                    6       // set or get (u
sed by misc. special case missions like transport ships)
standard_commands_gpl.h:#define YARD_OPEN                       18      // set o
r get (change which plots we occupy when building opens and closes)
standard_commands_gpl.h:#define BUGGER_OFF              19      // set or get (a
sk other units to clear the area)
standard_commands_gpl.h:#define ARMORED                 20      // SET or GET.
Turns on the Armored state.
standard_commands_gpl.h:#define CURRENT_SPEED           29      // SET only, if
I'm reading the code right.  Gives us a new speed for the next frame ONLY.
standard_commands_gpl.h:#define VETERAN_LEVEL           32      // SET or GET.
Can make units super-accurate, or keep them inaccurate.
standard_commands_gpl.h:#define MAX_SPEED                       75      // SET o
nly.  Alters MaxVelocity for the given unit.

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i "SET " *
armada_advancedaircraftplant.bos:     set YARD_OPEN to 1;
armada_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
armada_advancedaircraftplant.bos:             set YARD_OPEN to 1;
armada_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
armada_advancedaircraftplant.bos:     set YARD_OPEN to 0;
armada_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
armada_advancedaircraftplant.bos:             set YARD_OPEN to 0;
armada_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
armada_advancedaircraftplant.bos:     set INBUILDSTANCE to 1;
armada_advancedaircraftplant.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 1;
armada_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionbot.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionbot.bos:     set INBUILDSTANCE to 1;
armada_advancedconstructionsub.bos:   set INBUILDSTANCE to 0;
armada_advancedconstructionsub.bos:   set INBUILDSTANCE to 1;
armada_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 1;
armada_advancedsolarcollector.bos:  set ARMORED to 0;
armada_advancedsolarcollector.bos:  set ARMORED to 1;
armada_advancedfusionreactor.bos:    set ARMORED to 1;
armada_advancedfusionreactor.bos:    set ARMORED to 0;
armada_sweeper.bos:              // Set values for tilt
armada_advancedbotlab.bos:    set YARD_OPEN to 1;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 1;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set YARD_OPEN to 0;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 0;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 1;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 0;
armada_rattlesnake.bos:     set ARMORED to 0;
armada_rattlesnake.bos:     set ARMORED to 1;
armada_twilight.bos:    set ARMORED to 0;
armada_twilight.bos:    set ARMORED to 1;
armada_twilight.bos:    set ACTIVATION to 0;
armada_twilight.bos:    set ACTIVATION to 100;
armada_amphibiouscomplex.bos:   set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 1;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 0;
armada_crocodile.bos:            // Set values for tilt
armada_pulsar.bos:    set ARMORED to 0;
armada_pulsar.bos:    set ARMORED to 1;
armada_aircraftplant.bos:      set YARD_OPEN to 1;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 1;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set YARD_OPEN to 0;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 0;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set INBUILDSTANCE to 1;
armada_aircraftplant.bos:      set INBUILDSTANCE to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 100;
armada_advancedshipyard.bos:     set YARD_OPEN to 1;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 1;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set YARD_OPEN to 0;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 0;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 1;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 0;
armada_advancedvehicleplant.bos:     set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 1;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 0;
armada_beaver.bos:  set INBUILDSTANCE to 0;
armada_beaver.bos:  set INBUILDSTANCE to 1;
armada_constructionaircraft.bos:      set INBUILDSTANCE to 1;
armada_constructionaircraft.bos:      set INBUILDSTANCE to 0;
armada_constructionhovercraft.bos:              // Set values for tilt
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 0;
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 1;
armada_constructionbot.bos:      set INBUILDSTANCE to 0;
armada_constructionbot.bos:      set INBUILDSTANCE to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 1;
armada_commander.bos:     set INBUILDSTANCE to 1;
armada_commander.bos:     set INBUILDSTANCE to 0;
armada_commanderboss.bos: set INBUILDSTANCE to 1;
armada_commanderboss.bos: set INBUILDSTANCE to 0;
armada_consul.bos:  set INBUILDSTANCE to 1;
armada_consul.bos:  set INBUILDSTANCE to 0;
armada_constructionship.bos:      set INBUILDSTANCE to 0;
armada_constructionship.bos:      set INBUILDSTANCE to 1;
armada_constructionseaplane.bos:     set INBUILDSTANCE to 1;
armada_constructionseaplane.bos:     set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 1;
armada_decoycommander.lua:   -- reset parts
armada_decoyfusionreactor.bos:      set ARMORED to 1;
armada_decoyfusionreactor.bos:      set ARMORED to 0;
armada_epoch.bos:   set ARMORED to 1;
armada_butler.bos:    set INBUILDSTANCE to 0;
armada_butler.bos:    set INBUILDSTANCE to 1;
armada_ferret.bos:  set ARMORED to 0;
armada_ferret.bos:  set ARMORED to 1;
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 1;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 0;
armada_fusionreactor.bos:     set ARMORED to 1;
armada_fusionreactor.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 1;
armada_hovercraftplatform.bos:      set YARD_OPEN to 1;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 1;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set YARD_OPEN to 0;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 0;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 1;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 0;
armada_umbra.bos:             // Set values for tilt
armada_umbra.bos:             // Set Values for differential system
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 100;
armada_botlab.bos:     set YARD_OPEN to 1;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 1;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set YARD_OPEN to 0;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 0;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set INBUILDSTANCE to 1;
armada_botlab.bos:     set INBUILDSTANCE to 0;
fgrep: armada_marauder_lus: Is a directory
armada_mercury.bos: set DELAY_UNIT_VAR to 0;
armada_ambassador.bos:    set ARMORED to 1;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:    set ARMORED to 0;
armada_possum.bos:              // Set values for tilt
armada_voyager.bos:     set INBUILDSTANCE to 1;
armada_voyager.bos:     set INBUILDSTANCE to 0;
armada_groundhog.bos:     set INBUILDSTANCE to 1;
armada_groundhog.bos:     set INBUILDSTANCE to 0;
armada_advancedenergyconverter.bos:    set ARMORED to 0; //Not needed as MM in BAR have no damage modif
yer tag set
armada_advancedenergyconverter.bos:    set ARMORED to 1;
armada_constructionturret.bos:  set INBUILDSTANCE to 1;
armada_constructionturret.bos:  set INBUILDSTANCE to 0;
armada_navalconstructionturret.bos:      set INBUILDSTANCE to 1;
armada_navalconstructionturret.bos:      set INBUILDSTANCE to 0;
armada_pitbull.bos:      set ARMORED to 0;
armada_pitbull.bos:      set ARMORED to 1;
armada_seaplaneplatform.bos:    set ARMORED to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
armada_seaplaneplatform.bos:    set YARD_OPEN to 1;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 1;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set YARD_OPEN to 0;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 0;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 1;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
armada_grimreaper.bos:    set INBUILDSTANCE to 1;
armada_grimreaper.bos:    set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 1;
armrectrt4.bos: set INBUILDSTANCE to 0;
armrectrt4.bos: set INBUILDSTANCE to 1;
armada_serpent.bos:            // Set values for tilt
armada_seeker.bos:              // Set values for tilt
armada_experimentalgantry.bos:   set YARD_OPEN to 1;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 1;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set YARD_OPEN to 0;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 0;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 1;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 0;
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 100;
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 1;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 0;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:   set ARMORED to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:   set ARMORED to 1;
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 100;
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:     set INBUILDSTANCE to 1;
armada_ghost.bos:     set INBUILDSTANCE to 0;
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:             set ACTIVATION to 100;
armada_shipyard.bos:      set YARD_OPEN to 1;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 1;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set YARD_OPEN to 0;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 0;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set INBUILDSTANCE to 1;
armada_shipyard.bos:      set INBUILDSTANCE to 0;
armada_pinpointer.bos:    set ARMORED to 1;
armada_pinpointer.bos:    set ACTIVATION to 0;
armada_pinpointer.bos:    set ACTIVATION to 1;
armada_bearer.bos:           // Set values for tilt
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           set BUSY to 0;
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           set BUSY to 0;
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           set BUSY to 0;
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           set BUSY to 0;
armada_vehicleplant.bos:      set ARMORED to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
armada_vehicleplant.bos:      set YARD_OPEN to 1;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 1;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set YARD_OPEN to 0;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 0;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set INBUILDSTANCE to 1;
armada_vehicleplant.bos:      set INBUILDSTANCE to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
armada_windturbine.bos:                     set ACTIVATION to 100;
armada_windturbine.bos:             set ACTIVATION to 0;
armada_windturbine.bos:             set ACTIVATION to 100;
constants.h:** EXPtype.h -- Explosion Type information and GET/SET constants for
 scripts
constants.h:#define ACTIVATION           1  // set or get
constants.h:#define STANDINGMOVEORDERS   2  // set or get
constants.h:#define STANDINGFIREORDERS   3  // set or get
constants.h:#define INBUILDSTANCE        5  // set or get
constants.h:#define BUSY                 6  // set or get (used by misc. special
 case missions like transport ships)
constants.h:#define YARD_OPEN           18  // set or get (change which plots we
 occupy when building opens and closes)
constants.h:#define BUGGER_OFF          19  // set or get (ask other units to cl
ear the area)
constants.h:#define ARMORED             20  // set or get
constants.h:#define UPRIGHT                   79 // set or get
constants.h:#define LOS_RADIUS                85 // set or get
constants.h:#define AIR_LOS_RADIUS            86 // set or get
constants.h:#define RADAR_RADIUS              87 // set or get
constants.h:#define JAMMER_RADIUS             88 // set or get
constants.h:#define SONAR_RADIUS              89 // set or get
constants.h:#define SONAR_JAM_RADIUS          90 // set or get
constants.h:#define SEISMIC_RADIUS            91 // set or get
constants.h:#define CURRENT_FUEL              93 // set or get
constants.h:#define SHIELD_POWER              95 // set or get
constants.h:#define STEALTH                   96 // set or get
constants.h:#define CRASHING                  97 // set or get, returns whether
aircraft isCrashing state
constants.h:#define CHANGE_TARGET             98 // set, the value it's set to d
etermines the affected weapon
constants.h:#define ALPHA_THRESHOLD          103 // set or get
constants.h:#define SONAR_STEALTH            108 // set or get
constants.h:#define FLANK_B_MODE                120 // set or get
constants.h:#define FLANK_B_DIR         121 // set or get, set is through get fo
r multiple args
constants.h:#define FLANK_B_MOBILITY_ADD        122 // set or get
constants.h:#define FLANK_B_MAX_DAMAGE  123 // set or get
constants.h:#define FLANK_B_MIN_DAMAGE  124 // set or get
constants.h:#define ENERGY_MAKE             140 // set or get (100*E production)

constants.h:#define METAL_MAKE              141 // set or get (100*M production)

cortex_advancedaircraftplant.bos:     set YARD_OPEN to 1;
cortex_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
cortex_advancedaircraftplant.bos:             set YARD_OPEN to 1;
cortex_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
cortex_advancedaircraftplant.bos:     set YARD_OPEN to 0;
cortex_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
cortex_advancedaircraftplant.bos:             set YARD_OPEN to 0;
cortex_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
cortex_advancedaircraftplant.bos:     set INBUILDSTANCE to 1;
cortex_advancedaircraftplant.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 1;
cortex_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionbot.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionbot.bos:     set INBUILDSTANCE to 1;
cortex_advancedconstructionsub.bos:   set INBUILDSTANCE to 0;
cortex_advancedconstructionsub.bos:   set INBUILDSTANCE to 1;
cortex_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 1;
cortex_advancedsolarcollector.bos:/*    57:*/       set ARMORED to 0;
cortex_advancedsolarcollector.bos:/*    5f:*/       set ARMORED to 1;
cortex_advancedsolarcollector.bos:/*    7d:*/       set ACTIVATION to 0;
cortex_advancedsolarcollector.bos:/*    85:*/       set ACTIVATION to 100;
cortex_advancedfusionreactor.bos:/*    b0:*/ set ARMORED to 1;
cortex_advancedfusionreactor.bos:/*    ba:*/ set ARMORED to 0;
cortex_birdeater.bos:              // Set values for tilt
cortex_amphibiouscomplex.bos:/*    87:*/        set YARD_OPEN to 1;
cortex_amphibiouscomplex.bos:/*    92:*/                set BUGGER_OFF to 1;
cortex_amphibiouscomplex.bos:/*    9a:*/                set YARD_OPEN to 1;
cortex_amphibiouscomplex.bos:/*    a1:*/        set BUGGER_OFF to 0;
cortex_amphibiouscomplex.bos:/*    a9:*/        set YARD_OPEN to 0;
cortex_amphibiouscomplex.bos:/*    b3:*/                set BUGGER_OFF to 1;
cortex_amphibiouscomplex.bos:/*    bb:*/                set YARD_OPEN to 0;
cortex_amphibiouscomplex.bos:/*    c2:*/        set BUGGER_OFF to 0;
cortex_amphibiouscomplex.bos:/*    d0:*/        set INBUILDSTANCE to 1;
cortex_amphibiouscomplex.bos:/*    d8:*/        set INBUILDSTANCE to 0;
cortex_aircraftplant.bos:/*   17e:*/   set YARD_OPEN to 1;
cortex_aircraftplant.bos:/*   189:*/           set BUGGER_OFF to 1;
cortex_aircraftplant.bos:/*   191:*/           set YARD_OPEN to 1;
cortex_aircraftplant.bos:/*   198:*/   set BUGGER_OFF to 0;
cortex_aircraftplant.bos:/*   1a0:*/   set YARD_OPEN to 0;
cortex_aircraftplant.bos:/*   1aa:*/           set BUGGER_OFF to 1;
cortex_aircraftplant.bos:/*   1b2:*/           set YARD_OPEN to 0;
cortex_aircraftplant.bos:/*   1b9:*/   set BUGGER_OFF to 0;
cortex_aircraftplant.bos:/*   1d5:*/   set INBUILDSTANCE to 1;
cortex_aircraftplant.bos:/*   1dd:*/   set INBUILDSTANCE to 0;
cortex_advancedshipyard.bos:     set YARD_OPEN to 1;
cortex_advancedshipyard.bos:             set BUGGER_OFF to 1;
cortex_advancedshipyard.bos:             set YARD_OPEN to 1;
cortex_advancedshipyard.bos:     set BUGGER_OFF to 0;
cortex_advancedshipyard.bos:     set YARD_OPEN to 0;
cortex_advancedshipyard.bos:             set BUGGER_OFF to 1;
cortex_advancedshipyard.bos:             set YARD_OPEN to 0;
cortex_advancedshipyard.bos:     set BUGGER_OFF to 0;
cortex_advancedshipyard.bos:     set INBUILDSTANCE to 1;
cortex_advancedshipyard.bos:     set INBUILDSTANCE to 0;
cortex_advancedshipyarde.bos:    set YARD_OPEN to 1;
cortex_advancedshipyarde.bos:            set BUGGER_OFF to 1;
cortex_advancedshipyarde.bos:            set YARD_OPEN to 1;
cortex_advancedshipyarde.bos:    set BUGGER_OFF to 0;
cortex_advancedshipyarde.bos:    set YARD_OPEN to 0;
cortex_advancedshipyarde.bos:            set BUGGER_OFF to 1;
cortex_advancedshipyarde.bos:            set YARD_OPEN to 0;
cortex_advancedshipyarde.bos:    set BUGGER_OFF to 0;
cortex_advancedshipyarde.bos:    set INBUILDSTANCE to 1;
cortex_advancedshipyarde.bos:    set INBUILDSTANCE to 0;
cortex_advancedvehicleplant.bos:     set YARD_OPEN to 1;
cortex_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
cortex_advancedvehicleplant.bos:             set YARD_OPEN to 1;
cortex_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
cortex_advancedvehicleplant.bos:     set YARD_OPEN to 0;
cortex_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
cortex_advancedvehicleplant.bos:             set YARD_OPEN to 0;
cortex_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
cortex_advancedvehicleplant.bos:     set INBUILDSTANCE to 1;
cortex_advancedvehicleplant.bos:     set INBUILDSTANCE to 0;
cortex_cerberus.bos:   set ACTIVATION to 100;
cortex_cerberus.bos:   set ACTIVATION to 0;
cortex_blackhydra.bos: set ARMORED to 1;
cortex_shuriken.bos:                      set UNKNOWN_UNIT_VALUE(82) to 0 - 1500 + get UNK
NOWN_UNIT_VALUE(82);
cortex_shuriken.bos:                      set UNKNOWN_UNIT_VALUE(82) to 1500 + get UNKNOWN
_UNIT_VALUE(82);
cortex_constructionaircraft.bos:      set INBUILDSTANCE to 1;
cortex_constructionaircraft.bos:      set INBUILDSTANCE to 0;
cortex_constructionhovercraft.bos:      set INBUILDSTANCE to 0;
cortex_constructionhovercraft.bos:              // Set values for tilt
cortex_constructionhovercraft.bos:      set INBUILDSTANCE to 1;
cortex_constructionbot.bos:      set INBUILDSTANCE to 0;
cortex_constructionbot.bos:      set INBUILDSTANCE to 1;
cortex_commander.bos:     set INBUILDSTANCE to 1;
cortex_commander.bos:     set INBUILDSTANCE to 0;
cortex_commanderboss.bos: set INBUILDSTANCE to 1;
cortex_commanderboss.bos: set INBUILDSTANCE to 0;
cortex_constructionship.bos:      set INBUILDSTANCE to 1;
cortex_constructionship.bos:      set INBUILDSTANCE to 0;
cortex_constructionseaplane.bos:     set INBUILDSTANCE to 1;
cortex_constructionseaplane.bos:     set INBUILDSTANCE to 0;
cortex_constructionvehicle.bos:      set INBUILDSTANCE to 0;
cortex_constructionvehicle.bos:      set INBUILDSTANCE to 1;
cortex_calamity.bos:    set ARMORED to 0;
cortex_calamity.bos:    set ARMORED to 1;
cortex_eradicator.bos:            set CHANGE_TARGET to 1;
cortex_obscurer.bos:            set ACTIVATION to 0;
cortex_obscurer.bos:            set ACTIVATION to 0;
cortex_obscurer.bos:            set ACTIVATION to 100;
cortex_twitcher.bos:    set INBUILDSTANCE to 1;
cortex_twitcher.bos:    set INBUILDSTANCE to 0;
cortex_navalhovercraftplatform.bos:/*   162:*/  set YARD_OPEN to 1;
cortex_navalhovercraftplatform.bos:/*   16d:*/          set BUGGER_OFF to 1;
cortex_navalhovercraftplatform.bos:/*   175:*/          set YARD_OPEN to 1;
cortex_navalhovercraftplatform.bos:/*   17c:*/  set BUGGER_OFF to 0;
cortex_navalhovercraftplatform.bos:/*   184:*/  set YARD_OPEN to 0;
cortex_navalhovercraftplatform.bos:/*   18e:*/          set BUGGER_OFF to 1;
cortex_navalhovercraftplatform.bos:/*   196:*/          set YARD_OPEN to 0;
cortex_navalhovercraftplatform.bos:/*   19d:*/  set BUGGER_OFF to 0;
cortex_navalhovercraftplatform.bos:/*   1bb:*/  set INBUILDSTANCE to 1;
cortex_navalhovercraftplatform.bos:/*   1c3:*/  set INBUILDSTANCE to 0;
cortex_navalenergyconverter.bos:                    set ACTIVATION to 1;
cortex_navalenergyconverter.bos:                    set ACTIVATION to 0;
cortex_experimentalgantry.bos:    set YARD_OPEN to 1;
cortex_experimentalgantry.bos:            set BUGGER_OFF to 1;
cortex_experimentalgantry.bos:            set YARD_OPEN to 1;
cortex_experimentalgantry.bos:    set BUGGER_OFF to 0;
cortex_experimentalgantry.bos:    set YARD_OPEN to 0;
cortex_experimentalgantry.bos:            set BUGGER_OFF to 1;
cortex_experimentalgantry.bos:            set YARD_OPEN to 0;
cortex_experimentalgantry.bos:    set BUGGER_OFF to 0;
cortex_experimentalgantry.bos:    set INBUILDSTANCE to 1;
cortex_experimentalgantry.bos:    set INBUILDSTANCE to 0;
cortex_halberd.bos:             // Set values for tilt
cortex_hovercraftplatform.bos:/*   162:*/   set YARD_OPEN to 1;
cortex_hovercraftplatform.bos:/*   16d:*/           set BUGGER_OFF to 1;
cortex_hovercraftplatform.bos:/*   175:*/           set YARD_OPEN to 1;
cortex_hovercraftplatform.bos:/*   17c:*/   set BUGGER_OFF to 0;
cortex_hovercraftplatform.bos:/*   184:*/   set YARD_OPEN to 0;
cortex_hovercraftplatform.bos:/*   18e:*/           set BUGGER_OFF to 1;
cortex_hovercraftplatform.bos:/*   196:*/           set YARD_OPEN to 0;
cortex_hovercraftplatform.bos:/*   19d:*/   set BUGGER_OFF to 0;
cortex_hovercraftplatform.bos:/*   1bb:*/   set INBUILDSTANCE to 1;
cortex_hovercraftplatform.bos:/*   1c3:*/   set INBUILDSTANCE to 0;
cortex_intruder.bos:    set ARMORED to 1;
cortex_intruder.bos:            set BUSY to 1;
cortex_intruder.bos:            set BUSY to 0;
cortex_intruder.bos:    set BUSY to 1;
cortex_intruder.bos:    set BUSY to 0;
cortex_behemoth.bos:    set CHANGE_TARGET to 2;
cortex_behemoth.bos:    set CHANGE_TARGET to 3;
cortex_behemoth.bos:    set CHANGE_TARGET to 4;
cortex_juggernaut.bos:    set ARMORED to 1;
cortex_energyconverter.bos:                            set ACTIVATION to 1;
cortex_energyconverter.bos:                            set ACTIVATION to 0;
cortex_commando.bos:   set INBUILDSTANCE to 0;
cortex_commando.bos:   set INBUILDSTANCE to 1;
cortex_dragonsmaw.bos:     set ARMORED to 0;
cortex_dragonsmaw.bos:     set ARMORED to 1;
cortex_metalextractor.bos:     set ARMORED to 0;
cortex_metalextractor.bos:     set ARMORED to 1;
cortex_advancedexploiter.bos:    set ARMORED to 0;
cortex_advancedexploiter.bos:    set ARMORED to 1;
cortex_advancedexploiter.bos:    set ACTIVATION to 100;
cortex_advancedexploiter.bos:            set ACTIVATION to 0;
cortex_advancedexploiter.bos:    set ARMORED to 0;
cortex_mangonel.bos:              // Set values for tilt
cortex_pathfinder.bos:     set INBUILDSTANCE to 1;
cortex_pathfinder.bos:     set INBUILDSTANCE to 0;
cortex_trapper.bos:     set INBUILDSTANCE to 0;
cortex_trapper.bos:     set INBUILDSTANCE to 1;
cortex_advancedenergyconverter.bos:    set ARMORED to 0;  //Not needed as MM in BAR have no damage modi
fyer tag set
cortex_advancedenergyconverter.bos:    set ARMORED to 1;
cortex_advancedmetalextractor.bos:    set ARMORED to 0;
cortex_advancedmetalextractor.bos:    set ARMORED to 1;
cortex_advancedmetalextractor.bos:    set ARMORED to 1;
cortex_muskrat.bos: set INBUILDSTANCE to 1;
cortex_muskrat.bos: set INBUILDSTANCE to 0;
cortex_muskrat.bos: set INBUILDSTANCE to 1;
cortex_constructionturret.bos:  set INBUILDSTANCE to 1;
cortex_constructionturret.bos:  set INBUILDSTANCE to 0;
cortex_navalconstructionturret.bos:      set INBUILDSTANCE to 1;
cortex_navalconstructionturret.bos:      set INBUILDSTANCE to 0;
cortex_graverobber.bos:   set INBUILDSTANCE to 0;
cortex_graverobber.bos:   set INBUILDSTANCE to 1;
cortex_seaplaneplatform.bos:    set ARMORED to 0;
cortex_seaplaneplatform.bos:    set ARMORED to 1;
cortex_seaplaneplatform.bos:    set YARD_OPEN to 1;
cortex_seaplaneplatform.bos:            set BUGGER_OFF to 1;
cortex_seaplaneplatform.bos:            set YARD_OPEN to 1;
cortex_seaplaneplatform.bos:    set BUGGER_OFF to 0;
cortex_seaplaneplatform.bos:    set YARD_OPEN to 0;
cortex_seaplaneplatform.bos:            set BUGGER_OFF to 1;
cortex_seaplaneplatform.bos:            set YARD_OPEN to 0;
cortex_seaplaneplatform.bos:    set BUGGER_OFF to 0;
cortex_seaplaneplatform.bos:    set INBUILDSTANCE to 1;
cortex_seaplaneplatform.bos:    set INBUILDSTANCE to 0;
cortex_seaplaneplatform.bos:    set ARMORED to 1;
cortex_deathcavalry.bos:    set INBUILDSTANCE to 1;
cortex_deathcavalry.bos:    set INBUILDSTANCE to 0;
cortex_goon.bos:              // Set values for tilt
cortex_shiva.bos:   set ARMORED to 1;
cortex_shiva.bos:   set ARMORED to 0;
cortex_shiva.bos:   set ARMORED to 1;
cortex_shroud.bos:/*    80:*/               set ACTIVATION to 0;
cortex_shroud.bos:/*   138:*/               set ACTIVATION to 0;
cortex_shroud.bos:/*   144:*/               set ACTIVATION to 100;
cortex_phantasm.bos:            set ACTIVATION to 0;
cortex_phantasm.bos:            set ACTIVATION to 0;
cortex_phantasm.bos:            set ACTIVATION to 100;
cortex_cayman.bos:            // Set values for tilt
cortex_solarcollector.bos:   set YARD_OPEN to 1;
cortex_solarcollector.bos:           set BUGGER_OFF to 1;
cortex_solarcollector.bos:           set YARD_OPEN to 1;
cortex_solarcollector.bos:   set BUGGER_OFF to 0;
cortex_solarcollector.bos:   set YARD_OPEN to 0;
cortex_solarcollector.bos:           set BUGGER_OFF to 1;
cortex_solarcollector.bos:           set YARD_OPEN to 0;
cortex_solarcollector.bos:   set BUGGER_OFF to 0;
cortex_solarcollector.bos:   set ACTIVATION to 100;
cortex_solarcollector.bos:           set ACTIVATION to 0;
cortex_solarcollector.bos:   set ARMORED to 0;
cortex_solarcollector.bos:   set ARMORED to 1;
cortex_solarcollector.bos:           set ACTIVATION to 0;
cortex_solarcollector.bos:           set ACTIVATION to 100;
cortex_deceiver.bos:            set ACTIVATION to 0;
cortex_deceiver.bos:            set ACTIVATION to 0;
cortex_deceiver.bos:            set ACTIVATION to 100;
cortex_spectre.bos:     set INBUILDSTANCE to 1;
cortex_spectre.bos:     set INBUILDSTANCE to 0;
cortex_shipyard.bos:      set YARD_OPEN to 1;
cortex_shipyard.bos:              set BUGGER_OFF to 1;
cortex_shipyard.bos:              set YARD_OPEN to 1;
cortex_shipyard.bos:      set BUGGER_OFF to 0;
cortex_shipyard.bos:      set YARD_OPEN to 0;
cortex_shipyard.bos:              set BUGGER_OFF to 1;
cortex_shipyard.bos:              set YARD_OPEN to 0;
cortex_shipyard.bos:      set BUGGER_OFF to 0;
cortex_shipyard.bos:      set INBUILDSTANCE to 1;
cortex_shipyard.bos:      set INBUILDSTANCE to 0;
cortex_pinpointer.bos:/*   1a6:*/ set ACTIVATION to 0;
cortex_pinpointer.bos:/*   1ae:*/ set ACTIVATION to 1;
cortex_caravan.bos:           // Set values for tilt
cortex_caravan.bos:           set BUSY to 1;
cortex_caravan.bos:           set BUSY to 0;
cortex_caravan.bos:           set BUSY to 1;
cortex_caravan.bos:           set BUSY to 0;
cortex_persecutor.bos:   set ARMORED to 0;
cortex_persecutor.bos:   set ARMORED to 1;
cortex_coffin.bos:           set BUSY to 1;
cortex_coffin.bos:           set BUSY to 0;
cortex_coffin.bos:           set BUSY to 1;
cortex_coffin.bos:           set BUSY to 0;
cortex_navaladvancedmetalextractor.bos:   set ARMORED to 0;
cortex_navaladvancedmetalextractor.bos:   set ARMORED to 1;
cortex_navaladvancedmetalextractor.bos:   set ARMORED to 1;
cortex_vehicleplant.bos:      set YARD_OPEN to 1;
cortex_vehicleplant.bos:              set BUGGER_OFF to 1;
cortex_vehicleplant.bos:              set YARD_OPEN to 1;
cortex_vehicleplant.bos:      set BUGGER_OFF to 0;
cortex_vehicleplant.bos:      set YARD_OPEN to 0;
cortex_vehicleplant.bos:              set BUGGER_OFF to 1;
cortex_vehicleplant.bos:              set YARD_OPEN to 0;
cortex_vehicleplant.bos:      set BUGGER_OFF to 0;
cortex_vehicleplant.bos:      set INBUILDSTANCE to 1;
cortex_vehicleplant.bos:      set INBUILDSTANCE to 0;
cortex_windturbine.bos:                     set ACTIVATION to 100;
cortex_windturbine.bos:             set ACTIVATION to 0;
cortex_windturbine.bos:             set ACTIVATION to 100;
exptype.h:** EXPtype.h -- Explosion Type information and GET/SET constants for s
cripts
exptype.h:#define ACTIVATION           1  // set or get
exptype.h:#define STANDINGMOVEORDERS   2  // set or get
exptype.h:#define STANDINGFIREORDERS   3  // set or get
exptype.h:#define INBUILDSTANCE        5  // set or get
exptype.h:#define BUSY                 6  // set or get (used by misc. special c
ase missions like transport ships)
exptype.h:#define YARD_OPEN           18  // set or get (change which plots we o
ccupy when building opens and closes)
exptype.h:#define BUGGER_OFF          19  // set or get (ask other units to clea
r the area)
exptype.h:#define ARMORED             20  // set or get
exptype.h:#define UPRIGHT                   79 // set or get
exptype.h:#define LOS_RADIUS                85 // set or get
exptype.h:#define AIR_LOS_RADIUS            86 // set or get
exptype.h:#define RADAR_RADIUS              87 // set or get
exptype.h:#define JAMMER_RADIUS             88 // set or get
exptype.h:#define SONAR_RADIUS              89 // set or get
exptype.h:#define SONAR_JAM_RADIUS          90 // set or get
exptype.h:#define SEISMIC_RADIUS            91 // set or get
exptype.h:#define CURRENT_FUEL              93 // set or get
exptype.h:#define SHIELD_POWER              95 // set or get
exptype.h:#define STEALTH                   96 // set or get
exptype.h:#define CRASHING                  97 // set or get, returns whether ai
rcraft isCrashing state
exptype.h:#define CHANGE_TARGET             98 // set, the value it's set to det
ermines the affected weapon
exptype.h:#define ALPHA_THRESHOLD          103 // set or get
exptype.h:#define SONAR_STEALTH            108 // set or get
exptype.h:#define FLANK_B_MODE          120 // set or get
exptype.h:#define FLANK_B_DIR           121 // set or get, set is through get fo
r multiple args
exptype.h:#define FLANK_B_MOBILITY_ADD  122 // set or get
exptype.h:#define FLANK_B_MAX_DAMAGE    123 // set or get
exptype.h:#define FLANK_B_MIN_DAMAGE    124 // set or get
exptype.h:#define ENERGY_MAKE             140 // set or get (100*E production)
exptype.h:#define METAL_MAKE              141 // set or get (100*M production)
Binary file fgrep.exe matches
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 1;
meteor.bos:     set ARMORED to 0;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 0;
fgrep: New folder: Is a directory
roost.bos:      set ARMORED to 0;
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
standard_commands_gpl.h:#define ACTIVATION              1       // set or get
standard_commands_gpl.h:#define STANDINGMOVEORDERS      2       // set or get
standard_commands_gpl.h:#define STANDINGFIREORDERS      3       // set or get
standard_commands_gpl.h:#define INBUILDSTANCE           5       // set or get
standard_commands_gpl.h:#define BUSY                    6       // set or get (u
sed by misc. special case missions like transport ships)
standard_commands_gpl.h:#define YARD_OPEN                       18      // set o
r get (change which plots we occupy when building opens and closes)
standard_commands_gpl.h:#define BUGGER_OFF              19      // set or get (a
sk other units to clear the area)
standard_commands_gpl.h:#define ARMORED                 20      // SET or GET.
Turns on the Armored state.
standard_commands_gpl.h:#define CURRENT_SPEED           29      // SET only, if
I'm reading the code right.  Gives us a new speed for the next frame ONLY.
standard_commands_gpl.h:#define VETERAN_LEVEL           32      // SET or GET.
Can make units super-accurate, or keep them inaccurate.
standard_commands_gpl.h:#define MAX_SPEED                       75      // SET o
nly.  Alters MaxVelocity for the given unit.
yard.h: set YARD_OPEN to TRUE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to TRUE;
yard.h: set BUGGER_OFF to FALSE;
yard.h: set YARD_OPEN to FALSE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to FALSE;
yard.h: set BUGGER_OFF to FALSE;

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i "SET.*to" *
fgrep: armada_marauder_lus: Is a directory
fgrep: New folder: Is a directory
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i SET.*to *
fgrep: armada_marauder_lus: Is a directory
fgrep: New folder: Is a directory
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i set.*to *
fgrep: armada_marauder_lus: Is a directory
fgrep: New folder: Is a directory
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep
Usage: fgrep [OPTION]... PATTERN [FILE]...
Try `fgrep --help' for more information.

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>man fgrep
'man' is not recognized as an internal or external command,
operable program or batch file.

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep --help
Usage: fgrep [OPTION]... PATTERN [FILE] ...
Search for PATTERN in each FILE or standard input.

Regexp selection and interpretation:
  -E, --extended-regexp     PATTERN is an extended regular expression
  -F, --fixed-regexp        PATTERN is a fixed string separated by newlines
  -G, --basic-regexp        PATTERN is a basic regular expression
  -e, --regexp=PATTERN      use PATTERN as a regular expression
  -f, --file=FILE           obtain PATTERN from FILE
  -i, --ignore-case         ignore case distinctions
  -w, --word-regexp         force PATTERN to match only whole words
  -x, --line-regexp         force PATTERN to match only whole lines

Miscellaneous:
  -s, --no-messages         suppress error messages
  -v, --revert-match        select non-matching lines
  -V, --version             print version information and exit
      --help                display this help and exit

Output control:
  -b, --byte-offset         print the byte offset with output lines
  -n, --line-number         print line number with output lines
  -H, --with-filename       print the filename for each match
  -h, --no-filename         suppress the prefixing filename on output
  -q, --quiet, --silent     suppress all normal output
  -a, --text                do not suppress binary output
  -d, --directories=ACTION  how to handle directories
                            ACTION is 'read', 'recurse', or 'skip'.
  -r, --recursive           equivalent to --directories=recurse.
  -L, --files-without-match only print FILE names containing no match
  -l, --files-with-matches  only print FILE names containing matches
  -c, --count               only print a count of matching lines per FILE

Context control:
  -B, --before-context=NUM  print NUM lines of leading context
  -A, --after-context=NUM   print NUM lines of trailing context
  -C, --context[=NUM]       print NUM (default 2) lines of output context
                            unless overriden by -A or -B
  -NUM                      same as --context=NUM
  -U, --binary              do not strip CR characters at EOL (MSDOS)
  -u, --unix-byte-offsets   report offsets as if CRs were not there (MSDOS)

If no -[GEF], then `egrep' assumes -E, `fgrep' -F, else -G.
With no FILE, or when FILE is -, read standard input. If less than
two FILEs given, assume -h. Exit with 0 if matches, with 1 if none.
Exit with 2 if syntax errors or system errors.

Report bugs to <bug-gnu-utils@gnu.org>.

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i -e set.*to *
fgrep: armada_marauder_lus: Is a directory
fgrep: New folder: Is a directory
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i -E set.*to *
Binary file armada_archangel.cob matches
armada_advancedaircraftplant.bos:     set YARD_OPEN to 1;
armada_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
armada_advancedaircraftplant.bos:             set YARD_OPEN to 1;
armada_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
armada_advancedaircraftplant.bos:     set YARD_OPEN to 0;
armada_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
armada_advancedaircraftplant.bos:             set YARD_OPEN to 0;
armada_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
armada_advancedaircraftplant.bos:     set INBUILDSTANCE to 1;
armada_advancedaircraftplant.bos:     set INBUILDSTANCE to 0;
Binary file armada_dragonslayer.cob matches
armada_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 1;
armada_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionbot.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionbot.bos:     set INBUILDSTANCE to 1;
armada_advancedconstructionsub.bos:   set INBUILDSTANCE to 0;
armada_advancedconstructionsub.bos:   set INBUILDSTANCE to 1;
armada_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 1;
Binary file armada_advancedconstructionvehicle.cob matches
armada_advancedsolarcollector.bos:  set ARMORED to 0;
armada_advancedsolarcollector.bos:  set ARMORED to 1;
armada_advancedfusionreactor.bos:    set ARMORED to 1;
armada_advancedfusionreactor.bos:    set ARMORED to 0;
Binary file armada_sweeper.cob matches
armada_advancedbotlab.bos:    set YARD_OPEN to 1;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 1;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set YARD_OPEN to 0;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 0;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 1;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 0;
armada_rattlesnake.bos:     set ARMORED to 0;
armada_rattlesnake.bos:     set ARMORED to 1;
Binary file armada_rattlesnake.cob matches
armada_citadel.bos:// OffsetToScriptCodeIndexArray        f64
armada_citadel.bos:// OffsetToScriptNameOffsetArray       fa8
armada_citadel.bos:// OffsetToPieceNameOffsetArray        fec
armada_citadel.bos:// OffsetToScriptCode                  2c
armada_citadel.bos:// OffsetToNameArray                   1010
armada_citadel.bos:// OffsetToFirstName                   1010
armada_twilight.bos:    set ARMORED to 0;
armada_twilight.bos:    set ARMORED to 1;
armada_twilight.bos:    set ACTIVATION to 0;
armada_twilight.bos:    set ACTIVATION to 100;
Binary file armada_amphibiousbot.cob matches
armada_amphibiouscomplex.bos:   set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 1;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 0;
Binary file armada_crocodile.cob matches
armada_pulsar.bos:    set ARMORED to 0;
armada_pulsar.bos:    set ARMORED to 1;
armada_aircraftplant.bos:      set YARD_OPEN to 1;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 1;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set YARD_OPEN to 0;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 0;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set INBUILDSTANCE to 1;
armada_aircraftplant.bos:      set INBUILDSTANCE to 0;
Binary file armada_shellshocker.cob matches
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 100;
Binary file armada_radarjammerbot.cob matches
armada_advancedshipyard.bos:     set YARD_OPEN to 1;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 1;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set YARD_OPEN to 0;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 0;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 1;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 0;
Binary file armada_moray.cob matches
armada_advancedvehicleplant.bos:     set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 1;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 0;
Binary file armada_titan.cob matches
Binary file armada_dreadnought.cob matches
armada_beaver.bos:  set INBUILDSTANCE to 0;
armada_beaver.bos:  set INBUILDSTANCE to 1;
Binary file armada_roughneck.cob matches
Binary file armada_bull.cob matches
armada_constructionaircraft.bos:      set INBUILDSTANCE to 1;
armada_constructionaircraft.bos:      set INBUILDSTANCE to 0;
Binary file armada_haven.cob matches
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 0;
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 1;
Binary file armada_constructionhovercraft.cob matches
Binary file armada_chainsaw.cob matches
armada_constructionbot.bos:      set INBUILDSTANCE to 0;
armada_constructionbot.bos:      set INBUILDSTANCE to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 1;
Binary file armada_dragonsclaw.cob matches
armada_commander.bos:     set INBUILDSTANCE to 1;
armada_commander.bos:     set INBUILDSTANCE to 0;
armada_commanderboss.bos: set INBUILDSTANCE to 1;
armada_commanderboss.bos: set INBUILDSTANCE to 0;
armada_consul.bos:  set INBUILDSTANCE to 1;
armada_consul.bos:  set INBUILDSTANCE to 0;
Binary file armada_turtle.cob matches
Binary file armada_paladin.cob matches
armada_constructionship.bos:      set INBUILDSTANCE to 0;
armada_constructionship.bos:      set INBUILDSTANCE to 1;
Binary file armada_constructionship.cob matches
armada_constructionseaplane.bos:     set INBUILDSTANCE to 1;
armada_constructionseaplane.bos:     set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 1;
Binary file armada_dolphin.cob matches
armada_decoyfusionreactor.bos:      set ARMORED to 1;
armada_decoyfusionreactor.bos:      set ARMORED to 0;
Binary file armada_paralyzer.cob matches
armada_epoch.bos:   set ARMORED to 1;
Binary file armada_epoch.cob matches
armada_butler.bos:    set INBUILDSTANCE to 0;
armada_butler.bos:    set INBUILDSTANCE to 1;
Binary file armada_sprinter.cob matches
Binary file armada_rover.cob matches
Binary file armada_fatboy.cob matches
armada_ferret.bos:  set ARMORED to 0;
armada_ferret.bos:  set ARMORED to 1;
Binary file armada_ferret.cob matches
Binary file armada_navalarbalest.cob matches
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 1;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 0;
Binary file armada_hound.cob matches
Binary file armada_arbalest.cob matches
Binary file armada_blitz.cob matches
Binary file armada_tick.cob matches
Binary file armada_navalnettle.cob matches
armada_fusionreactor.bos:     set ARMORED to 1;
armada_fusionreactor.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 1;
Binary file armada_gunplatform.cob matches
Binary file armada_gremlin.cob matches
Binary file armada_mace.cob matches
armada_hovercraftplatform.bos:      set YARD_OPEN to 1;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 1;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set YARD_OPEN to 0;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 0;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 1;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 0;
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 100;
Binary file armada_janus.cob matches
Binary file armada_crossbow.cob matches
Binary file armada_juno.cob matches
Binary file armada_banshee.cob matches
armada_botlab.bos:     set YARD_OPEN to 1;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 1;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set YARD_OPEN to 0;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 0;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set INBUILDSTANCE to 1;
armada_botlab.bos:     set INBUILDSTANCE to 0;
Binary file armada_jaguar.cob matches
Binary file armada_lunkhead.cob matches
Binary file armada_starlight.cob matches
Binary file armada_marauder.cob matches
fgrep: armada_marauder_lus: Is a directory
Binary file armada_compass.cob matches
Binary file armada_mauser.cob matches
Binary file armada_gunslinger.cob matches
armada_mercury.bos: set DELAY_UNIT_VAR to 0;
Binary file armada_mercury.cob matches
armada_ambassador.bos:    set ARMORED to 1;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:    set-signal-mask SIG_RESTORE;
Binary file armada_ambassador.cob matches
armada_possum.bos:      set-signal-mask SIG_RESTORE;
Binary file armada_possum.cob matches
armada_voyager.bos:     set INBUILDSTANCE to 1;
armada_voyager.bos:     set INBUILDSTANCE to 0;
Binary file armada_voyager.cob matches
armada_groundhog.bos:     set INBUILDSTANCE to 1;
armada_groundhog.bos:     set INBUILDSTANCE to 0;
armada_advancedenergyconverter.bos:    set ARMORED to 0; //Not needed as MM in BAR have no damage modif
yer tag set
armada_advancedenergyconverter.bos:    set ARMORED to 1;
Binary file armada_longbow.cob matches
armada_constructionturret.bos:  set INBUILDSTANCE to 1;
armada_constructionturret.bos:  set INBUILDSTANCE to 0;
Binary file armada_constructionturret.cob matches
armada_navalconstructionturret.bos:      set INBUILDSTANCE to 1;
armada_navalconstructionturret.bos:      set INBUILDSTANCE to 0;
Binary file armada_navalconstructionturret.cob matches
armada_pitbull.bos:      set ARMORED to 0;
armada_pitbull.bos:      set ARMORED to 1;
armada_pitbull.bos:      set-signal-mask SIG_RESTORE;
Binary file armada_pitbull.cob matches
Binary file armada_pincer.cob matches
armada_seaplaneplatform.bos:    set ARMORED to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
armada_seaplaneplatform.bos:    set YARD_OPEN to 1;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 1;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set YARD_OPEN to 0;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 0;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 1;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
Binary file armada_ellysaw.cob matches
Binary file armada_skater.cob matches
Binary file armada_harpoon2.cob matches
armada_pawn.bos:              bAnimate = TRUE; // this sets animation started, so that
 StopAnimate knows that it should restore state quickly
Binary file armada_pawn.cob matches
armada_grimreaper.bos:    set INBUILDSTANCE to 1;
armada_grimreaper.bos:    set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 1;
armrectrt4.bos: set INBUILDSTANCE to 0;
armrectrt4.bos: set INBUILDSTANCE to 1;
Binary file armada_nettle.cob matches
Binary file armada_rocketeer.cob matches
Binary file armada_corsair.cob matches
Binary file armada_sabre.cob matches
Binary file armada_whistler.cob matches
Binary file armada_tsunami.cob matches
Binary file armada_umbrella.cob matches
Binary file armada_serpent.cob matches
Binary file armada_seeker.cob matches
armada_experimentalgantry.bos:   set YARD_OPEN to 1;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 1;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set YARD_OPEN to 0;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 0;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 1;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 0;
armada_armageddon.bos:// OffsetToScriptCodeIndexArray        c08
armada_armageddon.bos:// OffsetToScriptNameOffsetArray       c4c
armada_armageddon.bos:// OffsetToPieceNameOffsetArray        c90
armada_armageddon.bos:// OffsetToScriptCode                  2c
armada_armageddon.bos:// OffsetToNameArray                   ca4
armada_armageddon.bos:// OffsetToFirstName                   ca4
Binary file armada_armageddon.cob matches
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 100;
Binary file armada_bermuda.cob matches
Binary file armada_sharpshooter.cob matches
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 1;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 0;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:   set ARMORED to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:   set ARMORED to 1;
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 100;
Binary file armada_webber.cob matches
Binary file armada_recluse.cob matches
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:     set INBUILDSTANCE to 1;
armada_ghost.bos:     set INBUILDSTANCE to 0;
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:             set ACTIVATION to 100;
Binary file armada_stout.cob matches
Binary file armada_eel.cob matches
armada_shipyard.bos:      set YARD_OPEN to 1;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 1;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set YARD_OPEN to 0;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 0;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set INBUILDSTANCE to 1;
armada_shipyard.bos:      set INBUILDSTANCE to 0;
armada_pinpointer.bos:    set ARMORED to 1;
armada_pinpointer.bos:    set ACTIVATION to 0;
armada_pinpointer.bos:    set ACTIVATION to 1;
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           set BUSY to 0;
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           set BUSY to 0;
Binary file armada_bearer.cob matches
Binary file armada_harpoon.cob matches
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           set BUSY to 0;
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           set BUSY to 0;
Binary file armada_convoy.cob matches
Binary file armada_vanguard.cob matches
armada_vehicleplant.bos:      set ARMORED to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
armada_vehicleplant.bos:      set YARD_OPEN to 1;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 1;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set YARD_OPEN to 0;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 0;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set INBUILDSTANCE to 1;
armada_vehicleplant.bos:      set INBUILDSTANCE to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
Binary file armada_centurion.cob matches
armada_windturbine.bos:                     set ACTIVATION to 100;
armada_windturbine.bos:             set ACTIVATION to 0;
armada_windturbine.bos:             set ACTIVATION to 100;
Binary file armada_windturbine.cob matches
Binary file armada_shredder.cob matches
Binary file armada_welder.cob matches
Binary file cob_file.pyc matches
constants.h:#define BUGGER_OFF          19  // set or get (ask other units to cl
ear the area)
constants.h:#define CHANGE_TARGET             98 // set, the value it's set to d
etermines the affected weapon
cortex_advancedaircraftplant.bos:     set YARD_OPEN to 1;
cortex_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
cortex_advancedaircraftplant.bos:             set YARD_OPEN to 1;
cortex_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
cortex_advancedaircraftplant.bos:     set YARD_OPEN to 0;
cortex_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
cortex_advancedaircraftplant.bos:             set YARD_OPEN to 0;
cortex_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
cortex_advancedaircraftplant.bos:     set INBUILDSTANCE to 1;
cortex_advancedaircraftplant.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 1;
cortex_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionbot.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionbot.bos:     set INBUILDSTANCE to 1;
cortex_advancedconstructionsub.bos:   set INBUILDSTANCE to 0;
cortex_advancedconstructionsub.bos:   set INBUILDSTANCE to 1;
cortex_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 1;
Binary file cortex_advancedconstructionvehicle.cob matches
cortex_advancedsolarcollector.bos:// OffsetToScriptCodeIndexArray        54c
cortex_advancedsolarcollector.bos:// OffsetToScriptNameOffsetArray       568
cortex_advancedsolarcollector.bos:// OffsetToPieceNameOffsetArray        584
cortex_advancedsolarcollector.bos:// OffsetToScriptCode                  2c
cortex_advancedsolarcollector.bos:// OffsetToNameArray                   59c
cortex_advancedsolarcollector.bos:// OffsetToFirstName                   59c
cortex_advancedsolarcollector.bos:/*    57:*/       set ARMORED to 0;
cortex_advancedsolarcollector.bos:/*    5f:*/       set ARMORED to 1;
cortex_advancedsolarcollector.bos:/*    7d:*/       set ACTIVATION to 0;
cortex_advancedsolarcollector.bos:/*    85:*/       set ACTIVATION to 100;
cortex_advancedfusionreactor.bos:// OffsetToScriptCodeIndexArray        730
cortex_advancedfusionreactor.bos:// OffsetToScriptNameOffsetArray       758
cortex_advancedfusionreactor.bos:// OffsetToPieceNameOffsetArray        780
cortex_advancedfusionreactor.bos:// OffsetToScriptCode                  2c
cortex_advancedfusionreactor.bos:// OffsetToNameArray                   794
cortex_advancedfusionreactor.bos:// OffsetToFirstName                   794
cortex_advancedfusionreactor.bos:/*    b0:*/ set ARMORED to 1;
cortex_advancedfusionreactor.bos:/*    ba:*/ set ARMORED to 0;
Binary file cortex_birdeater.cob matches
Binary file cortex_grunt.cob matches
Binary file cortex_duck.cob matches
cortex_amphibiouscomplex.bos:// OffsetToScriptCodeIndexArray        bc0
cortex_amphibiouscomplex.bos:// OffsetToScriptNameOffsetArray       c00
cortex_amphibiouscomplex.bos:// OffsetToPieceNameOffsetArray        c40
cortex_amphibiouscomplex.bos:// OffsetToScriptCode                  2c
cortex_amphibiouscomplex.bos:// OffsetToNameArray                   c78
cortex_amphibiouscomplex.bos:// OffsetToFirstName                   c78
cortex_amphibiouscomplex.bos:/*    87:*/        set YARD_OPEN to 1;
cortex_amphibiouscomplex.bos:/*    92:*/                set BUGGER_OFF to 1;
cortex_amphibiouscomplex.bos:/*    9a:*/                set YARD_OPEN to 1;
cortex_amphibiouscomplex.bos:/*    a1:*/        set BUGGER_OFF to 0;
cortex_amphibiouscomplex.bos:/*    a9:*/        set YARD_OPEN to 0;
cortex_amphibiouscomplex.bos:/*    b3:*/                set BUGGER_OFF to 1;
cortex_amphibiouscomplex.bos:/*    bb:*/                set YARD_OPEN to 0;
cortex_amphibiouscomplex.bos:/*    c2:*/        set BUGGER_OFF to 0;
cortex_amphibiouscomplex.bos:/*    d0:*/        set INBUILDSTANCE to 1;
cortex_amphibiouscomplex.bos:/*    d8:*/        set INBUILDSTANCE to 0;
cortex_aircraftplant.bos:// OffsetToScriptCodeIndexArray        11f0
cortex_aircraftplant.bos:// OffsetToScriptNameOffsetArray       123c
cortex_aircraftplant.bos:// OffsetToPieceNameOffsetArray        1288
cortex_aircraftplant.bos:// OffsetToScriptCode                  2c
cortex_aircraftplant.bos:// OffsetToNameArray                   12ac
cortex_aircraftplant.bos:// OffsetToFirstName                   12ac
cortex_aircraftplant.bos:/*   17e:*/   set YARD_OPEN to 1;
cortex_aircraftplant.bos:/*   189:*/           set BUGGER_OFF to 1;
cortex_aircraftplant.bos:/*   191:*/           set YARD_OPEN to 1;
cortex_aircraftplant.bos:/*   198:*/   set BUGGER_OFF to 0;
cortex_aircraftplant.bos:/*   1a0:*/   set YARD_OPEN to 0;
cortex_aircraftplant.bos:/*   1aa:*/           set BUGGER_OFF to 1;
cortex_aircraftplant.bos:/*   1b2:*/           set YARD_OPEN to 0;
cortex_aircraftplant.bos:/*   1b9:*/   set BUGGER_OFF to 0;
cortex_aircraftplant.bos:/*   1d5:*/   set INBUILDSTANCE to 1;
cortex_aircraftplant.bos:/*   1dd:*/   set INBUILDSTANCE to 0;
cortex_advancedradartower.bos:// OffsetToScriptCodeIndexArray        624
cortex_advancedradartower.bos:// OffsetToScriptNameOffsetArray       64c
cortex_advancedradartower.bos:// OffsetToPieceNameOffsetArray        674
cortex_advancedradartower.bos:// OffsetToScriptCode                  2c
cortex_advancedradartower.bos:// OffsetToNameArray                   680
cortex_advancedradartower.bos:// OffsetToFirstName                   680
Binary file cortex_arrowstorm.cob matches
cortex_airrepairpad.bos:// OffsetToScriptCodeIndexArray        a94
cortex_airrepairpad.bos:// OffsetToScriptNameOffsetArray       aac
cortex_airrepairpad.bos:// OffsetToPieceNameOffsetArray        ac4
cortex_airrepairpad.bos:// OffsetToScriptCode                  2c
cortex_airrepairpad.bos:// OffsetToNameArray                   b04
cortex_airrepairpad.bos:// OffsetToFirstName                   b04
cortex_advancedshipyard.bos:     set YARD_OPEN to 1;
cortex_advancedshipyard.bos:             set BUGGER_OFF to 1;
cortex_advancedshipyard.bos:             set YARD_OPEN to 1;
cortex_advancedshipyard.bos:     set BUGGER_OFF to 0;
cortex_advancedshipyard.bos:     set YARD_OPEN to 0;
cortex_advancedshipyard.bos:             set BUGGER_OFF to 1;
cortex_advancedshipyard.bos:             set YARD_OPEN to 0;
cortex_advancedshipyard.bos:     set BUGGER_OFF to 0;
cortex_advancedshipyard.bos:     set INBUILDSTANCE to 1;
cortex_advancedshipyard.bos:     set INBUILDSTANCE to 0;
cortex_advancedshipyarde.bos:    set YARD_OPEN to 1;
cortex_advancedshipyarde.bos:            set BUGGER_OFF to 1;
cortex_advancedshipyarde.bos:            set YARD_OPEN to 1;
cortex_advancedshipyarde.bos:    set BUGGER_OFF to 0;
cortex_advancedshipyarde.bos:    set YARD_OPEN to 0;
cortex_advancedshipyarde.bos:            set BUGGER_OFF to 1;
cortex_advancedshipyarde.bos:            set YARD_OPEN to 0;
cortex_advancedshipyarde.bos:    set BUGGER_OFF to 0;
cortex_advancedshipyarde.bos:    set INBUILDSTANCE to 1;
cortex_advancedshipyarde.bos:    set INBUILDSTANCE to 0;
cortex_advancedvehicleplant.bos:     set YARD_OPEN to 1;
cortex_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
cortex_advancedvehicleplant.bos:             set YARD_OPEN to 1;
cortex_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
cortex_advancedvehicleplant.bos:     set YARD_OPEN to 0;
cortex_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
cortex_advancedvehicleplant.bos:             set YARD_OPEN to 0;
cortex_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
cortex_advancedvehicleplant.bos:     set INBUILDSTANCE to 1;
cortex_advancedvehicleplant.bos:     set INBUILDSTANCE to 0;
Binary file cortex_banisher.cob matches
Binary file cortex_despot.cob matches
cortex_cerberus.bos:   set ACTIVATION to 100;
cortex_cerberus.bos:   set ACTIVATION to 0;
cortex_blackhydra.bos: set ARMORED to 1;
Binary file cortex_blackhydra.cob matches
cortex_shuriken.bos:                      set UNKNOWN_UNIT_VALUE(82) to 0 - 1500 + get UNK
NOWN_UNIT_VALUE(82);
cortex_shuriken.bos:                      set UNKNOWN_UNIT_VALUE(82) to 1500 + get UNKNOWN
_UNIT_VALUE(82);
cortex_constructionaircraft.bos:      set INBUILDSTANCE to 1;
cortex_constructionaircraft.bos:      set INBUILDSTANCE to 0;
Binary file cortex_sumo.cob matches
Binary file cortex_oasis.cob matches
Binary file cortex_catapult.cob matches
cortex_constructionhovercraft.bos:      set INBUILDSTANCE to 0;
cortex_constructionhovercraft.bos:      set INBUILDSTANCE to 1;
Binary file cortex_constructionhovercraft.cob matches
cortex_constructionbot.bos:      set INBUILDSTANCE to 0;
cortex_constructionbot.bos:      set INBUILDSTANCE to 1;
cortex_commander.bos:     set INBUILDSTANCE to 1;
cortex_commander.bos:     set INBUILDSTANCE to 0;
cortex_commanderboss.bos: set INBUILDSTANCE to 1;
cortex_commanderboss.bos: set INBUILDSTANCE to 0;
Binary file cortex_trasher.cob matches
Binary file cortex_buccaneer.cob matches
Binary file cortex_dragonold.cob matches
cortex_constructionship.bos:      set INBUILDSTANCE to 1;
cortex_constructionship.bos:      set INBUILDSTANCE to 0;
cortex_constructionseaplane.bos:     set INBUILDSTANCE to 1;
cortex_constructionseaplane.bos:     set INBUILDSTANCE to 0;
Binary file cortex_cutlass.cob matches
cortex_constructionvehicle.bos:      set INBUILDSTANCE to 0;
cortex_constructionvehicle.bos:      set INBUILDSTANCE to 1;
cortex_jellyfish.bos:// OffsetToScriptCodeIndexArray        77c
cortex_jellyfish.bos:// OffsetToScriptNameOffsetArray       79c
cortex_jellyfish.bos:// OffsetToPieceNameOffsetArray        7bc
cortex_jellyfish.bos:// OffsetToScriptCode                  2c
cortex_jellyfish.bos:// OffsetToNameArray                   7cc
cortex_jellyfish.bos:// OffsetToFirstName                   7cc
cortex_calamity.bos:    set ARMORED to 0;
cortex_calamity.bos:    set ARMORED to 1;
cortex_dragonsteeth.bos:// OffsetToScriptCodeIndexArray        38
cortex_dragonsteeth.bos:// OffsetToScriptNameOffsetArray       3c
cortex_dragonsteeth.bos:// OffsetToPieceNameOffsetArray        40
cortex_dragonsteeth.bos:// OffsetToScriptCode                  2c
cortex_dragonsteeth.bos:// OffsetToNameArray                   40
cortex_dragonsteeth.bos:// OffsetToFirstName                   40
Binary file cortex_navalbirdshot.cob matches
cortex_eradicator.bos:            set CHANGE_TARGET to 1;
Binary file cortex_eradicator.cob matches
cortex_energystorage.bos:// OffsetToScriptCodeIndexArray        3e8
cortex_energystorage.bos:// OffsetToScriptNameOffsetArray       3f8
cortex_energystorage.bos:// OffsetToPieceNameOffsetArray        408
cortex_energystorage.bos:// OffsetToScriptCode                  2c
cortex_energystorage.bos:// OffsetToNameArray                   414
cortex_energystorage.bos:// OffsetToFirstName                   414
Binary file cortex_supporter.cob matches
cortex_obscurer.bos:            set ACTIVATION to 0;
cortex_obscurer.bos:            set ACTIVATION to 0;
cortex_obscurer.bos:            set ACTIVATION to 100;
Binary file cortex_exploiter.cob matches
cortex_twitcher.bos:    set INBUILDSTANCE to 1;
cortex_twitcher.bos:    set INBUILDSTANCE to 0;
Binary file cortex_rascal.cob matches
cortex_navalhovercraftplatform.bos:// OffsetToScriptCodeIndexArray        11e4
cortex_navalhovercraftplatform.bos:// OffsetToScriptNameOffsetArray       1230
cortex_navalhovercraftplatform.bos:// OffsetToPieceNameOffsetArray        127c
cortex_navalhovercraftplatform.bos:// OffsetToScriptCode                  2c
cortex_navalhovercraftplatform.bos:// OffsetToNameArray                   12a4
cortex_navalhovercraftplatform.bos:// OffsetToFirstName                   12a4
cortex_navalhovercraftplatform.bos:/*   162:*/  set YARD_OPEN to 1;
cortex_navalhovercraftplatform.bos:/*   16d:*/          set BUGGER_OFF to 1;
cortex_navalhovercraftplatform.bos:/*   175:*/          set YARD_OPEN to 1;
cortex_navalhovercraftplatform.bos:/*   17c:*/  set BUGGER_OFF to 0;
cortex_navalhovercraftplatform.bos:/*   184:*/  set YARD_OPEN to 0;
cortex_navalhovercraftplatform.bos:/*   18e:*/          set BUGGER_OFF to 1;
cortex_navalhovercraftplatform.bos:/*   196:*/          set YARD_OPEN to 0;
cortex_navalhovercraftplatform.bos:/*   19d:*/  set BUGGER_OFF to 0;
cortex_navalhovercraftplatform.bos:/*   1bb:*/  set INBUILDSTANCE to 1;
cortex_navalhovercraftplatform.bos:/*   1c3:*/  set INBUILDSTANCE to 0;
Binary file corflak.cob matches
cortex_navalenergyconverter.bos:                    set ACTIVATION to 1;
cortex_navalenergyconverter.bos:                    set ACTIVATION to 0;
Binary file cortex_janitor.cob matches
Binary file cortex_slingshot.cob matches
cortex_fusionreactor.bos:// OffsetToScriptCodeIndexArray        52c
cortex_fusionreactor.bos:// OffsetToScriptNameOffsetArray       53c
cortex_fusionreactor.bos:// OffsetToPieceNameOffsetArray        54c
cortex_fusionreactor.bos:// OffsetToScriptCode                  2c
cortex_fusionreactor.bos:// OffsetToNameArray                   564
cortex_fusionreactor.bos:// OffsetToFirstName                   564
cortex_experimentalgantry.bos:    set YARD_OPEN to 1;
cortex_experimentalgantry.bos:            set BUGGER_OFF to 1;
cortex_experimentalgantry.bos:            set YARD_OPEN to 1;
cortex_experimentalgantry.bos:    set BUGGER_OFF to 0;
cortex_experimentalgantry.bos:    set YARD_OPEN to 0;
cortex_experimentalgantry.bos:            set BUGGER_OFF to 1;
cortex_experimentalgantry.bos:            set YARD_OPEN to 0;
cortex_experimentalgantry.bos:    set BUGGER_OFF to 0;
cortex_experimentalgantry.bos:    set INBUILDSTANCE to 1;
cortex_experimentalgantry.bos:    set INBUILDSTANCE to 0;
Binary file cortex_garpike.cob matches
Binary file cortex_incisor.cob matches
Binary file cortex_tzar.cob matches
Binary file cortex_halberd.cob matches
cortex_hovercraftplatform.bos:// OffsetToScriptCodeIndexArray        11e4
cortex_hovercraftplatform.bos:// OffsetToScriptNameOffsetArray       1230
cortex_hovercraftplatform.bos:// OffsetToPieceNameOffsetArray        127c
cortex_hovercraftplatform.bos:// OffsetToScriptCode                  2c
cortex_hovercraftplatform.bos:// OffsetToNameArray                   12a4
cortex_hovercraftplatform.bos:// OffsetToFirstName                   12a4
cortex_hovercraftplatform.bos:/*   162:*/   set YARD_OPEN to 1;
cortex_hovercraftplatform.bos:/*   16d:*/           set BUGGER_OFF to 1;
cortex_hovercraftplatform.bos:/*   175:*/           set YARD_OPEN to 1;
cortex_hovercraftplatform.bos:/*   17c:*/   set BUGGER_OFF to 0;
cortex_hovercraftplatform.bos:/*   184:*/   set YARD_OPEN to 0;
cortex_hovercraftplatform.bos:/*   18e:*/           set BUGGER_OFF to 1;
cortex_hovercraftplatform.bos:/*   196:*/           set YARD_OPEN to 0;
cortex_hovercraftplatform.bos:/*   19d:*/   set BUGGER_OFF to 0;
cortex_hovercraftplatform.bos:/*   1bb:*/   set INBUILDSTANCE to 1;
cortex_hovercraftplatform.bos:/*   1c3:*/   set INBUILDSTANCE to 0;
Binary file cortex_arbiter.cob matches
cortex_intruder.bos:    set ARMORED to 1;
cortex_intruder.bos:            set BUSY to 1;
cortex_intruder.bos:            set BUSY to 0;
cortex_intruder.bos:    set BUSY to 1;
cortex_intruder.bos:    set BUSY to 0;
cortex_castro.bos:// OffsetToScriptCodeIndexArray        744
cortex_castro.bos:// OffsetToScriptNameOffsetArray       76c
cortex_castro.bos:// OffsetToPieceNameOffsetArray        794
cortex_castro.bos:// OffsetToScriptCode                  2c
cortex_castro.bos:// OffsetToNameArray                   7a8
cortex_castro.bos:// OffsetToFirstName                   7a8
cortex_behemoth.bos:    set CHANGE_TARGET to 2;
cortex_behemoth.bos:    set CHANGE_TARGET to 3;
cortex_behemoth.bos:    set CHANGE_TARGET to 4;
Binary file cortex_behemoth.cob matches
cortex_behemoth.lua_old:        SetSignalMask( SIG_stop )
cortex_juno.bos:// OffsetToScriptCodeIndexArray        d80
cortex_juno.bos:// OffsetToScriptNameOffsetArray       dc4
cortex_juno.bos:// OffsetToPieceNameOffsetArray        e08
cortex_juno.bos:// OffsetToScriptCode                  2c
cortex_juno.bos:// OffsetToNameArray                   e4c
cortex_juno.bos:// OffsetToFirstName                   e4c
Binary file cortex_juno.cob matches
cortex_karganeth.lua_old:        SetSignalMask(SIG_RESTORE)
cortex_juggernaut.bos:    set ARMORED to 1;
cortex_juggernaut.bos:    set-signal-mask SIG_FOOTSTOMP_L;
cortex_juggernaut.bos:    set-signal-mask SIG_FOOTSTOMP_R;
Binary file cortex_juggernaut.cob matches
Binary file cortex_pounder.cob matches
Binary file cortex_saviour.cob matches
cortex_energyconverter.bos:                            set ACTIVATION to 1;
cortex_energyconverter.bos:                            set ACTIVATION to 0;
cortex_commando.bos:   set INBUILDSTANCE to 0;
cortex_commando.bos:   set INBUILDSTANCE to 1;
Binary file cortex_quaker.cob matches
cortex_dragonsmaw.bos:     set ARMORED to 0;
cortex_dragonsmaw.bos:     set ARMORED to 1;
Binary file cortex_dragonsmaw.cob matches
cortex_metalextractor.bos:     set ARMORED to 0;
cortex_metalextractor.bos:     set ARMORED to 1;
cortex_advancedexploiter.bos:    set ARMORED to 0;
cortex_advancedexploiter.bos:    set ARMORED to 1;
cortex_advancedexploiter.bos:    set ACTIVATION to 100;
cortex_advancedexploiter.bos:            set ACTIVATION to 0;
cortex_advancedexploiter.bos:    set ARMORED to 0;
Binary file cortex_advancedexploiter.cob matches
cortex_mangonel.bos:      set-signal-mask SIG_RESTORE;
Binary file cortex_mangonel.cob matches
Binary file cortex_lasher.cob matches
cortex_pathfinder.bos:     set INBUILDSTANCE to 1;
cortex_pathfinder.bos:     set INBUILDSTANCE to 0;
cortex_trapper.bos:     set INBUILDSTANCE to 0;
cortex_trapper.bos:     set INBUILDSTANCE to 1;
cortex_advancedenergyconverter.bos:    set ARMORED to 0;  //Not needed as MM in BAR have no damage modi
fyer tag set
cortex_advancedenergyconverter.bos:    set ARMORED to 1;
cortex_advancedmetalextractor.bos:    set ARMORED to 0;
cortex_advancedmetalextractor.bos:    set ARMORED to 1;
cortex_advancedmetalextractor.bos:    set ARMORED to 1;
Binary file cortex_sheldon.cob matches
Binary file cortex_messenger.cob matches
cortex_metalstorage.bos:// OffsetToScriptCodeIndexArray        2f8
cortex_metalstorage.bos:// OffsetToScriptNameOffsetArray       308
cortex_metalstorage.bos:// OffsetToPieceNameOffsetArray        318
cortex_metalstorage.bos:// OffsetToScriptCode                  2c
cortex_metalstorage.bos:// OffsetToNameArray                   31c
cortex_metalstorage.bos:// OffsetToFirstName                   31c
cortex_muskrat.bos: set INBUILDSTANCE to 1;
cortex_muskrat.bos: set INBUILDSTANCE to 0;
cortex_muskrat.bos: set INBUILDSTANCE to 1;
cortex_constructionturret.bos:  set INBUILDSTANCE to 1;
cortex_constructionturret.bos:  set INBUILDSTANCE to 0;
Binary file cortex_constructionturret.cob matches
cortex_navalconstructionturret.bos:      set INBUILDSTANCE to 1;
cortex_navalconstructionturret.bos:      set INBUILDSTANCE to 0;
Binary file cortex_navalconstructionturret.cob matches
cortex_graverobber.bos:   set INBUILDSTANCE to 0;
cortex_graverobber.bos:   set INBUILDSTANCE to 1;
Binary file cortex_poisonarrow.cob matches
cortex_seaplaneplatform.bos:    set ARMORED to 0;
cortex_seaplaneplatform.bos:    set ARMORED to 1;
cortex_seaplaneplatform.bos:    set YARD_OPEN to 1;
cortex_seaplaneplatform.bos:            set BUGGER_OFF to 1;
cortex_seaplaneplatform.bos:            set YARD_OPEN to 1;
cortex_seaplaneplatform.bos:    set BUGGER_OFF to 0;
cortex_seaplaneplatform.bos:    set YARD_OPEN to 0;
cortex_seaplaneplatform.bos:            set BUGGER_OFF to 1;
cortex_seaplaneplatform.bos:            set YARD_OPEN to 0;
cortex_seaplaneplatform.bos:    set BUGGER_OFF to 0;
cortex_seaplaneplatform.bos:    set INBUILDSTANCE to 1;
cortex_seaplaneplatform.bos:    set INBUILDSTANCE to 0;
cortex_seaplaneplatform.bos:    set ARMORED to 1;
Binary file cortex_riptide.cob matches
Binary file cortex_herring.cob matches
Binary file cortex_fiend.cob matches
cortex_radartower.bos:// OffsetToScriptCodeIndexArray        54c
cortex_radartower.bos:// OffsetToScriptNameOffsetArray       574
cortex_radartower.bos:// OffsetToPieceNameOffsetArray        59c
cortex_radartower.bos:// OffsetToScriptCode                  2c
cortex_radartower.bos:// OffsetToNameArray                   5a4
cortex_radartower.bos:// OffsetToFirstName                   5a4
Binary file cortex_brute.cob matches
Binary file cortex_tiger.cob matches
cortex_deathcavalry.bos:    set INBUILDSTANCE to 1;
cortex_deathcavalry.bos:    set INBUILDSTANCE to 0;
cortex_thistle.bos:// OffsetToScriptCodeIndexArray        9cc
cortex_thistle.bos:// OffsetToScriptNameOffsetArray       9ec
cortex_thistle.bos:// OffsetToPieceNameOffsetArray        a0c
cortex_thistle.bos:// OffsetToScriptCode                  2c
cortex_thistle.bos:// OffsetToNameArray                   a2c
cortex_thistle.bos:// OffsetToFirstName                   a2c
Binary file cortex_thistle.cob matches
Binary file cortex_oppressor.cob matches
Binary file cortex_dambuster.cob matches
Binary file cortex_screamer.cob matches
cortex_nemesis.bos:// OffsetToScriptCodeIndexArray        43c
cortex_nemesis.bos:// OffsetToScriptNameOffsetArray       44c
cortex_nemesis.bos:// OffsetToPieceNameOffsetArray        45c
cortex_nemesis.bos:// OffsetToScriptCode                  2c
cortex_nemesis.bos:// OffsetToNameArray                   460
cortex_nemesis.bos:// OffsetToFirstName                   460
Binary file cortex_alligator.cob matches
Binary file cortex_fury.cob matches
Binary file cortex_goon.cob matches
cortex_shiva.bos:   set ARMORED to 1;
cortex_shiva.bos:   set ARMORED to 0;
cortex_shiva.bos:   set ARMORED to 1;
Binary file cortex_shiva.cob matches
cortex_shiva.lua_old:       SetSignalMask( SIG_stop )
cortex_shiva.lua_old:       SetSignalMask( SIG_stop )
cortex_shroud.bos:// OffsetToScriptCodeIndexArray        898
cortex_shroud.bos:// OffsetToScriptNameOffsetArray       8c4
cortex_shroud.bos:// OffsetToPieceNameOffsetArray        8f0
cortex_shroud.bos:// OffsetToScriptCode                  2c
cortex_shroud.bos:// OffsetToNameArray                   904
cortex_shroud.bos:// OffsetToFirstName                   904
cortex_shroud.bos:/*    80:*/               set ACTIVATION to 0;
cortex_shroud.bos:/*   138:*/               set ACTIVATION to 0;
cortex_shroud.bos:/*   144:*/               set ACTIVATION to 100;
cortex_apocalypse.bos:// OffsetToScriptCodeIndexArray        c08
cortex_apocalypse.bos:// OffsetToScriptNameOffsetArray       c4c
cortex_apocalypse.bos:// OffsetToPieceNameOffsetArray        c90
cortex_apocalypse.bos:// OffsetToScriptCode                  2c
cortex_apocalypse.bos:// OffsetToNameArray                   ca4
cortex_apocalypse.bos:// OffsetToFirstName                   ca4
Binary file cortex_apocalypse.cob matches
cortex_phantasm.bos:            set ACTIVATION to 0;
cortex_phantasm.bos:            set ACTIVATION to 0;
cortex_phantasm.bos:            set ACTIVATION to 100;
Binary file cortex_cayman.cob matches
Binary file cortex_cataphract.cob matches
cortex_solarcollector.bos:   set YARD_OPEN to 1;
cortex_solarcollector.bos:           set BUGGER_OFF to 1;
cortex_solarcollector.bos:           set YARD_OPEN to 1;
cortex_solarcollector.bos:   set BUGGER_OFF to 0;
cortex_solarcollector.bos:   set YARD_OPEN to 0;
cortex_solarcollector.bos:           set BUGGER_OFF to 1;
cortex_solarcollector.bos:           set YARD_OPEN to 0;
cortex_solarcollector.bos:   set BUGGER_OFF to 0;
cortex_solarcollector.bos:   set ACTIVATION to 100;
cortex_solarcollector.bos:           set ACTIVATION to 0;
cortex_solarcollector.bos:   set ARMORED to 0;
cortex_solarcollector.bos:   set ARMORED to 1;
cortex_solarcollector.bos:           set ACTIVATION to 0;
cortex_solarcollector.bos:           set ACTIVATION to 100;
cortex_sonarstation.bos:// OffsetToScriptCodeIndexArray        42c
cortex_sonarstation.bos:// OffsetToScriptNameOffsetArray       450
cortex_sonarstation.bos:// OffsetToPieceNameOffsetArray        474
cortex_sonarstation.bos:// OffsetToScriptCode                  2c
cortex_sonarstation.bos:// OffsetToNameArray                   47c
cortex_sonarstation.bos:// OffsetToFirstName                   47c
cortex_deceiver.bos:            set ACTIVATION to 0;
cortex_deceiver.bos:            set ACTIVATION to 0;
cortex_deceiver.bos:            set ACTIVATION to 100;
Binary file cortex_deceiver.cob matches
cortex_spectre.bos:     set INBUILDSTANCE to 1;
cortex_spectre.bos:     set INBUILDSTANCE to 0;
Binary file cortex_aggravator.cob matches
Binary file cortex_mammoth.cob matches
cortex_mammoth.lua_old:    SetSignalMask(SIG_RESTORE)
cortex_shipyard.bos:      set YARD_OPEN to 1;
cortex_shipyard.bos:              set BUGGER_OFF to 1;
cortex_shipyard.bos:              set YARD_OPEN to 1;
cortex_shipyard.bos:      set BUGGER_OFF to 0;
cortex_shipyard.bos:      set YARD_OPEN to 0;
cortex_shipyard.bos:              set BUGGER_OFF to 1;
cortex_shipyard.bos:              set YARD_OPEN to 0;
cortex_shipyard.bos:      set BUGGER_OFF to 0;
cortex_shipyard.bos:      set INBUILDSTANCE to 1;
cortex_shipyard.bos:      set INBUILDSTANCE to 0;
cortex_pinpointer.bos:// OffsetToScriptCodeIndexArray        d6c
cortex_pinpointer.bos:// OffsetToScriptNameOffsetArray       d98
cortex_pinpointer.bos:// OffsetToPieceNameOffsetArray        dc4
cortex_pinpointer.bos:// OffsetToScriptCode                  2c
cortex_pinpointer.bos:// OffsetToNameArray                   dec
cortex_pinpointer.bos:// OffsetToFirstName                   dec
cortex_pinpointer.bos:/*   1a6:*/ set ACTIVATION to 0;
cortex_pinpointer.bos:/*   1ae:*/ set ACTIVATION to 1;
Binary file cortex_termite.cob matches
cortex_caravan.bos:           set BUSY to 1;
cortex_caravan.bos:           set BUSY to 0;
cortex_caravan.bos:           set BUSY to 1;
cortex_caravan.bos:           set BUSY to 0;
Binary file cortex_caravan.cob matches
Binary file cortex_thug.cob matches
cortex_persecutor.bos:   set ARMORED to 0;
cortex_persecutor.bos:   set ARMORED to 1;
Binary file cortex_persecutor.cob matches
Binary file cortex_tremor.cob matches
cortex_catalyst.bos:// OffsetToScriptCodeIndexArray        c08
cortex_catalyst.bos:// OffsetToScriptNameOffsetArray       c4c
cortex_catalyst.bos:// OffsetToPieceNameOffsetArray        c90
cortex_catalyst.bos:// OffsetToScriptCode                  2c
cortex_catalyst.bos:// OffsetToNameArray                   ca4
cortex_catalyst.bos:// OffsetToFirstName                   ca4
Binary file cortex_catalyst.cob matches
cortex_coffin.bos:           set BUSY to 1;
cortex_coffin.bos:           set BUSY to 0;
cortex_coffin.bos:           set BUSY to 1;
cortex_coffin.bos:           set BUSY to 0;
Binary file cortex_coffin.cob matches
cortex_hardenedenergystorage.bos:// OffsetToScriptCodeIndexArray        5b0
cortex_hardenedenergystorage.bos:// OffsetToScriptNameOffsetArray       5c0
cortex_hardenedenergystorage.bos:// OffsetToPieceNameOffsetArray        5d0
cortex_hardenedenergystorage.bos:// OffsetToScriptCode                  2c
cortex_hardenedenergystorage.bos:// OffsetToNameArray                   5e4
cortex_hardenedenergystorage.bos:// OffsetToFirstName                   5e4
cortex_hardenedmetalstorage.bos:// OffsetToScriptCodeIndexArray        420
cortex_hardenedmetalstorage.bos:// OffsetToScriptNameOffsetArray       430
cortex_hardenedmetalstorage.bos:// OffsetToPieceNameOffsetArray        440
cortex_hardenedmetalstorage.bos:// OffsetToScriptCode                  2c
cortex_hardenedmetalstorage.bos:// OffsetToNameArray                   448
cortex_hardenedmetalstorage.bos:// OffsetToFirstName                   448
cortex_navalenergystorage.bos:// OffsetToScriptCodeIndexArray        2f4
cortex_navalenergystorage.bos:// OffsetToScriptNameOffsetArray       304
cortex_navalenergystorage.bos:// OffsetToPieceNameOffsetArray        314
cortex_navalenergystorage.bos:// OffsetToScriptCode                  2c
cortex_navalenergystorage.bos:// OffsetToNameArray                   31c
cortex_navalenergystorage.bos:// OffsetToFirstName                   31c
cortex_navalfusionreactor.bos:// OffsetToScriptCodeIndexArray        1f0
cortex_navalfusionreactor.bos:// OffsetToScriptNameOffsetArray       200
cortex_navalfusionreactor.bos:// OffsetToPieceNameOffsetArray        210
cortex_navalfusionreactor.bos:// OffsetToScriptCode                  2c
cortex_navalfusionreactor.bos:// OffsetToNameArray                   218
cortex_navalfusionreactor.bos:// OffsetToFirstName                   218
cortex_navaladvancedmetalextractor.bos:   set ARMORED to 0;
cortex_navaladvancedmetalextractor.bos:   set ARMORED to 1;
cortex_navaladvancedmetalextractor.bos:   set ARMORED to 1;
cortex_navalmetalstorage.bos:// OffsetToScriptCodeIndexArray        2ec
cortex_navalmetalstorage.bos:// OffsetToScriptNameOffsetArray       2fc
cortex_navalmetalstorage.bos:// OffsetToPieceNameOffsetArray        30c
cortex_navalmetalstorage.bos:// OffsetToScriptCode                  2c
cortex_navalmetalstorage.bos:// OffsetToNameArray                   310
cortex_navalmetalstorage.bos:// OffsetToFirstName                   310
Binary file cortex_augur.cob matches
cortex_vehicleplant.bos:      set YARD_OPEN to 1;
cortex_vehicleplant.bos:              set BUGGER_OFF to 1;
cortex_vehicleplant.bos:              set YARD_OPEN to 1;
cortex_vehicleplant.bos:      set BUGGER_OFF to 0;
cortex_vehicleplant.bos:      set YARD_OPEN to 0;
cortex_vehicleplant.bos:              set BUGGER_OFF to 1;
cortex_vehicleplant.bos:              set YARD_OPEN to 0;
cortex_vehicleplant.bos:      set BUGGER_OFF to 0;
cortex_vehicleplant.bos:      set INBUILDSTANCE to 1;
cortex_vehicleplant.bos:      set INBUILDSTANCE to 0;
cortex_negotiator.bos:    set-signal-mask SIG_RESTORE;
Binary file cortex_negotiator.cob matches
cortex_windturbine.bos:                     set ACTIVATION to 100;
cortex_windturbine.bos:             set ACTIVATION to 0;
cortex_windturbine.bos:             set ACTIVATION to 100;
Binary file cortex_windturbine.cob matches
Binary file cortex_wolverine.cob matches
exptype.h:#define BUGGER_OFF          19  // set or get (ask other units to clea
r the area)
exptype.h:#define CHANGE_TARGET             98 // set, the value it's set to det
ermines the affected weapon
Binary file fgrep.exe matches
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 1;
meteor.bos:     set ARMORED to 0;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 0;
fgrep: New folder: Is a directory
roost.bos:      set ARMORED to 0;
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
standard_commands_gpl.h:#define BUGGER_OFF              19      // set or get (a
sk other units to clear the area)
yard.h: set YARD_OPEN to TRUE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to TRUE;
yard.h: set BUGGER_OFF to FALSE;
yard.h: set YARD_OPEN to FALSE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to FALSE;
yard.h: set BUGGER_OFF to FALSE;

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i -E set.*to.*; *
armada_advancedaircraftplant.bos:     set YARD_OPEN to 1;
armada_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
armada_advancedaircraftplant.bos:             set YARD_OPEN to 1;
armada_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
armada_advancedaircraftplant.bos:     set YARD_OPEN to 0;
armada_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
armada_advancedaircraftplant.bos:             set YARD_OPEN to 0;
armada_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
armada_advancedaircraftplant.bos:     set INBUILDSTANCE to 1;
armada_advancedaircraftplant.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 1;
armada_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionbot.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionbot.bos:     set INBUILDSTANCE to 1;
armada_advancedconstructionsub.bos:   set INBUILDSTANCE to 0;
armada_advancedconstructionsub.bos:   set INBUILDSTANCE to 1;
armada_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 1;
armada_advancedsolarcollector.bos:  set ARMORED to 0;
armada_advancedsolarcollector.bos:  set ARMORED to 1;
armada_advancedfusionreactor.bos:    set ARMORED to 1;
armada_advancedfusionreactor.bos:    set ARMORED to 0;
armada_advancedbotlab.bos:    set YARD_OPEN to 1;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 1;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set YARD_OPEN to 0;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 0;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 1;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 0;
armada_rattlesnake.bos:     set ARMORED to 0;
armada_rattlesnake.bos:     set ARMORED to 1;
armada_twilight.bos:    set ARMORED to 0;
armada_twilight.bos:    set ARMORED to 1;
armada_twilight.bos:    set ACTIVATION to 0;
armada_twilight.bos:    set ACTIVATION to 100;
armada_amphibiouscomplex.bos:   set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 1;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 0;
armada_pulsar.bos:    set ARMORED to 0;
armada_pulsar.bos:    set ARMORED to 1;
armada_aircraftplant.bos:      set YARD_OPEN to 1;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 1;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set YARD_OPEN to 0;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 0;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set INBUILDSTANCE to 1;
armada_aircraftplant.bos:      set INBUILDSTANCE to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 100;
armada_advancedshipyard.bos:     set YARD_OPEN to 1;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 1;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set YARD_OPEN to 0;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 0;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 1;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 0;
armada_advancedvehicleplant.bos:     set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 1;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 0;
armada_beaver.bos:  set INBUILDSTANCE to 0;
armada_beaver.bos:  set INBUILDSTANCE to 1;
armada_constructionaircraft.bos:      set INBUILDSTANCE to 1;
armada_constructionaircraft.bos:      set INBUILDSTANCE to 0;
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 0;
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 1;
armada_constructionbot.bos:      set INBUILDSTANCE to 0;
armada_constructionbot.bos:      set INBUILDSTANCE to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 1;
armada_commander.bos:     set INBUILDSTANCE to 1;
armada_commander.bos:     set INBUILDSTANCE to 0;
armada_commanderboss.bos: set INBUILDSTANCE to 1;
armada_commanderboss.bos: set INBUILDSTANCE to 0;
armada_consul.bos:  set INBUILDSTANCE to 1;
armada_consul.bos:  set INBUILDSTANCE to 0;
armada_constructionship.bos:      set INBUILDSTANCE to 0;
armada_constructionship.bos:      set INBUILDSTANCE to 1;
armada_constructionseaplane.bos:     set INBUILDSTANCE to 1;
armada_constructionseaplane.bos:     set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 1;
armada_decoyfusionreactor.bos:      set ARMORED to 1;
armada_decoyfusionreactor.bos:      set ARMORED to 0;
armada_epoch.bos:   set ARMORED to 1;
armada_butler.bos:    set INBUILDSTANCE to 0;
armada_butler.bos:    set INBUILDSTANCE to 1;
armada_ferret.bos:  set ARMORED to 0;
armada_ferret.bos:  set ARMORED to 1;
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 1;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 0;
armada_fusionreactor.bos:     set ARMORED to 1;
armada_fusionreactor.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 1;
armada_hovercraftplatform.bos:      set YARD_OPEN to 1;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 1;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set YARD_OPEN to 0;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 0;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 1;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 0;
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 100;
armada_botlab.bos:     set YARD_OPEN to 1;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 1;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set YARD_OPEN to 0;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 0;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set INBUILDSTANCE to 1;
armada_botlab.bos:     set INBUILDSTANCE to 0;
fgrep: armada_marauder_lus: Is a directory
armada_mercury.bos: set DELAY_UNIT_VAR to 0;
armada_ambassador.bos:    set ARMORED to 1;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:    set-signal-mask SIG_RESTORE;
armada_possum.bos:      set-signal-mask SIG_RESTORE;
armada_voyager.bos:     set INBUILDSTANCE to 1;
armada_voyager.bos:     set INBUILDSTANCE to 0;
armada_groundhog.bos:     set INBUILDSTANCE to 1;
armada_groundhog.bos:     set INBUILDSTANCE to 0;
armada_advancedenergyconverter.bos:    set ARMORED to 0; //Not needed as MM in BAR have no damage modif
yer tag set
armada_advancedenergyconverter.bos:    set ARMORED to 1;
armada_constructionturret.bos:  set INBUILDSTANCE to 1;
armada_constructionturret.bos:  set INBUILDSTANCE to 0;
armada_navalconstructionturret.bos:      set INBUILDSTANCE to 1;
armada_navalconstructionturret.bos:      set INBUILDSTANCE to 0;
armada_pitbull.bos:      set ARMORED to 0;
armada_pitbull.bos:      set ARMORED to 1;
armada_pitbull.bos:      set-signal-mask SIG_RESTORE;
armada_seaplaneplatform.bos:    set ARMORED to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
armada_seaplaneplatform.bos:    set YARD_OPEN to 1;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 1;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set YARD_OPEN to 0;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 0;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 1;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
armada_grimreaper.bos:    set INBUILDSTANCE to 1;
armada_grimreaper.bos:    set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 1;
armrectrt4.bos: set INBUILDSTANCE to 0;
armrectrt4.bos: set INBUILDSTANCE to 1;
armada_experimentalgantry.bos:   set YARD_OPEN to 1;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 1;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set YARD_OPEN to 0;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 0;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 1;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 0;
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 100;
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 1;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 0;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:   set ARMORED to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:   set ARMORED to 1;
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 100;
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:     set INBUILDSTANCE to 1;
armada_ghost.bos:     set INBUILDSTANCE to 0;
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:             set ACTIVATION to 100;
armada_shipyard.bos:      set YARD_OPEN to 1;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 1;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set YARD_OPEN to 0;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 0;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set INBUILDSTANCE to 1;
armada_shipyard.bos:      set INBUILDSTANCE to 0;
armada_pinpointer.bos:    set ARMORED to 1;
armada_pinpointer.bos:    set ACTIVATION to 0;
armada_pinpointer.bos:    set ACTIVATION to 1;
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           set BUSY to 0;
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           set BUSY to 0;
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           set BUSY to 0;
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           set BUSY to 0;
armada_vehicleplant.bos:      set ARMORED to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
armada_vehicleplant.bos:      set YARD_OPEN to 1;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 1;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set YARD_OPEN to 0;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 0;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set INBUILDSTANCE to 1;
armada_vehicleplant.bos:      set INBUILDSTANCE to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
armada_windturbine.bos:                     set ACTIVATION to 100;
armada_windturbine.bos:             set ACTIVATION to 0;
armada_windturbine.bos:             set ACTIVATION to 100;
cortex_advancedaircraftplant.bos:     set YARD_OPEN to 1;
cortex_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
cortex_advancedaircraftplant.bos:             set YARD_OPEN to 1;
cortex_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
cortex_advancedaircraftplant.bos:     set YARD_OPEN to 0;
cortex_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
cortex_advancedaircraftplant.bos:             set YARD_OPEN to 0;
cortex_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
cortex_advancedaircraftplant.bos:     set INBUILDSTANCE to 1;
cortex_advancedaircraftplant.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 1;
cortex_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionbot.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionbot.bos:     set INBUILDSTANCE to 1;
cortex_advancedconstructionsub.bos:   set INBUILDSTANCE to 0;
cortex_advancedconstructionsub.bos:   set INBUILDSTANCE to 1;
cortex_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 1;
cortex_advancedsolarcollector.bos:/*    57:*/       set ARMORED to 0;
cortex_advancedsolarcollector.bos:/*    5f:*/       set ARMORED to 1;
cortex_advancedsolarcollector.bos:/*    7d:*/       set ACTIVATION to 0;
cortex_advancedsolarcollector.bos:/*    85:*/       set ACTIVATION to 100;
cortex_advancedfusionreactor.bos:/*    b0:*/ set ARMORED to 1;
cortex_advancedfusionreactor.bos:/*    ba:*/ set ARMORED to 0;
cortex_amphibiouscomplex.bos:/*    87:*/        set YARD_OPEN to 1;
cortex_amphibiouscomplex.bos:/*    92:*/                set BUGGER_OFF to 1;
cortex_amphibiouscomplex.bos:/*    9a:*/                set YARD_OPEN to 1;
cortex_amphibiouscomplex.bos:/*    a1:*/        set BUGGER_OFF to 0;
cortex_amphibiouscomplex.bos:/*    a9:*/        set YARD_OPEN to 0;
cortex_amphibiouscomplex.bos:/*    b3:*/                set BUGGER_OFF to 1;
cortex_amphibiouscomplex.bos:/*    bb:*/                set YARD_OPEN to 0;
cortex_amphibiouscomplex.bos:/*    c2:*/        set BUGGER_OFF to 0;
cortex_amphibiouscomplex.bos:/*    d0:*/        set INBUILDSTANCE to 1;
cortex_amphibiouscomplex.bos:/*    d8:*/        set INBUILDSTANCE to 0;
cortex_aircraftplant.bos:/*   17e:*/   set YARD_OPEN to 1;
cortex_aircraftplant.bos:/*   189:*/           set BUGGER_OFF to 1;
cortex_aircraftplant.bos:/*   191:*/           set YARD_OPEN to 1;
cortex_aircraftplant.bos:/*   198:*/   set BUGGER_OFF to 0;
cortex_aircraftplant.bos:/*   1a0:*/   set YARD_OPEN to 0;
cortex_aircraftplant.bos:/*   1aa:*/           set BUGGER_OFF to 1;
cortex_aircraftplant.bos:/*   1b2:*/           set YARD_OPEN to 0;
cortex_aircraftplant.bos:/*   1b9:*/   set BUGGER_OFF to 0;
cortex_aircraftplant.bos:/*   1d5:*/   set INBUILDSTANCE to 1;
cortex_aircraftplant.bos:/*   1dd:*/   set INBUILDSTANCE to 0;
cortex_advancedshipyard.bos:     set YARD_OPEN to 1;
cortex_advancedshipyard.bos:             set BUGGER_OFF to 1;
cortex_advancedshipyard.bos:             set YARD_OPEN to 1;
cortex_advancedshipyard.bos:     set BUGGER_OFF to 0;
cortex_advancedshipyard.bos:     set YARD_OPEN to 0;
cortex_advancedshipyard.bos:             set BUGGER_OFF to 1;
cortex_advancedshipyard.bos:             set YARD_OPEN to 0;
cortex_advancedshipyard.bos:     set BUGGER_OFF to 0;
cortex_advancedshipyard.bos:     set INBUILDSTANCE to 1;
cortex_advancedshipyard.bos:     set INBUILDSTANCE to 0;
cortex_advancedshipyarde.bos:    set YARD_OPEN to 1;
cortex_advancedshipyarde.bos:            set BUGGER_OFF to 1;
cortex_advancedshipyarde.bos:            set YARD_OPEN to 1;
cortex_advancedshipyarde.bos:    set BUGGER_OFF to 0;
cortex_advancedshipyarde.bos:    set YARD_OPEN to 0;
cortex_advancedshipyarde.bos:            set BUGGER_OFF to 1;
cortex_advancedshipyarde.bos:            set YARD_OPEN to 0;
cortex_advancedshipyarde.bos:    set BUGGER_OFF to 0;
cortex_advancedshipyarde.bos:    set INBUILDSTANCE to 1;
cortex_advancedshipyarde.bos:    set INBUILDSTANCE to 0;
cortex_advancedvehicleplant.bos:     set YARD_OPEN to 1;
cortex_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
cortex_advancedvehicleplant.bos:             set YARD_OPEN to 1;
cortex_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
cortex_advancedvehicleplant.bos:     set YARD_OPEN to 0;
cortex_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
cortex_advancedvehicleplant.bos:             set YARD_OPEN to 0;
cortex_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
cortex_advancedvehicleplant.bos:     set INBUILDSTANCE to 1;
cortex_advancedvehicleplant.bos:     set INBUILDSTANCE to 0;
cortex_cerberus.bos:   set ACTIVATION to 100;
cortex_cerberus.bos:   set ACTIVATION to 0;
cortex_blackhydra.bos: set ARMORED to 1;
cortex_shuriken.bos:                      set UNKNOWN_UNIT_VALUE(82) to 0 - 1500 + get UNK
NOWN_UNIT_VALUE(82);
cortex_shuriken.bos:                      set UNKNOWN_UNIT_VALUE(82) to 1500 + get UNKNOWN
_UNIT_VALUE(82);
cortex_constructionaircraft.bos:      set INBUILDSTANCE to 1;
cortex_constructionaircraft.bos:      set INBUILDSTANCE to 0;
cortex_constructionhovercraft.bos:      set INBUILDSTANCE to 0;
cortex_constructionhovercraft.bos:      set INBUILDSTANCE to 1;
cortex_constructionbot.bos:      set INBUILDSTANCE to 0;
cortex_constructionbot.bos:      set INBUILDSTANCE to 1;
cortex_commander.bos:     set INBUILDSTANCE to 1;
cortex_commander.bos:     set INBUILDSTANCE to 0;
cortex_commanderboss.bos: set INBUILDSTANCE to 1;
cortex_commanderboss.bos: set INBUILDSTANCE to 0;
cortex_constructionship.bos:      set INBUILDSTANCE to 1;
cortex_constructionship.bos:      set INBUILDSTANCE to 0;
cortex_constructionseaplane.bos:     set INBUILDSTANCE to 1;
cortex_constructionseaplane.bos:     set INBUILDSTANCE to 0;
cortex_constructionvehicle.bos:      set INBUILDSTANCE to 0;
cortex_constructionvehicle.bos:      set INBUILDSTANCE to 1;
cortex_calamity.bos:    set ARMORED to 0;
cortex_calamity.bos:    set ARMORED to 1;
cortex_eradicator.bos:            set CHANGE_TARGET to 1;
cortex_obscurer.bos:            set ACTIVATION to 0;
cortex_obscurer.bos:            set ACTIVATION to 0;
cortex_obscurer.bos:            set ACTIVATION to 100;
cortex_twitcher.bos:    set INBUILDSTANCE to 1;
cortex_twitcher.bos:    set INBUILDSTANCE to 0;
cortex_navalhovercraftplatform.bos:/*   162:*/  set YARD_OPEN to 1;
cortex_navalhovercraftplatform.bos:/*   16d:*/          set BUGGER_OFF to 1;
cortex_navalhovercraftplatform.bos:/*   175:*/          set YARD_OPEN to 1;
cortex_navalhovercraftplatform.bos:/*   17c:*/  set BUGGER_OFF to 0;
cortex_navalhovercraftplatform.bos:/*   184:*/  set YARD_OPEN to 0;
cortex_navalhovercraftplatform.bos:/*   18e:*/          set BUGGER_OFF to 1;
cortex_navalhovercraftplatform.bos:/*   196:*/          set YARD_OPEN to 0;
cortex_navalhovercraftplatform.bos:/*   19d:*/  set BUGGER_OFF to 0;
cortex_navalhovercraftplatform.bos:/*   1bb:*/  set INBUILDSTANCE to 1;
cortex_navalhovercraftplatform.bos:/*   1c3:*/  set INBUILDSTANCE to 0;
cortex_navalenergyconverter.bos:                    set ACTIVATION to 1;
cortex_navalenergyconverter.bos:                    set ACTIVATION to 0;
cortex_experimentalgantry.bos:    set YARD_OPEN to 1;
cortex_experimentalgantry.bos:            set BUGGER_OFF to 1;
cortex_experimentalgantry.bos:            set YARD_OPEN to 1;
cortex_experimentalgantry.bos:    set BUGGER_OFF to 0;
cortex_experimentalgantry.bos:    set YARD_OPEN to 0;
cortex_experimentalgantry.bos:            set BUGGER_OFF to 1;
cortex_experimentalgantry.bos:            set YARD_OPEN to 0;
cortex_experimentalgantry.bos:    set BUGGER_OFF to 0;
cortex_experimentalgantry.bos:    set INBUILDSTANCE to 1;
cortex_experimentalgantry.bos:    set INBUILDSTANCE to 0;
cortex_hovercraftplatform.bos:/*   162:*/   set YARD_OPEN to 1;
cortex_hovercraftplatform.bos:/*   16d:*/           set BUGGER_OFF to 1;
cortex_hovercraftplatform.bos:/*   175:*/           set YARD_OPEN to 1;
cortex_hovercraftplatform.bos:/*   17c:*/   set BUGGER_OFF to 0;
cortex_hovercraftplatform.bos:/*   184:*/   set YARD_OPEN to 0;
cortex_hovercraftplatform.bos:/*   18e:*/           set BUGGER_OFF to 1;
cortex_hovercraftplatform.bos:/*   196:*/           set YARD_OPEN to 0;
cortex_hovercraftplatform.bos:/*   19d:*/   set BUGGER_OFF to 0;
cortex_hovercraftplatform.bos:/*   1bb:*/   set INBUILDSTANCE to 1;
cortex_hovercraftplatform.bos:/*   1c3:*/   set INBUILDSTANCE to 0;
cortex_intruder.bos:    set ARMORED to 1;
cortex_intruder.bos:            set BUSY to 1;
cortex_intruder.bos:            set BUSY to 0;
cortex_intruder.bos:    set BUSY to 1;
cortex_intruder.bos:    set BUSY to 0;
cortex_behemoth.bos:    set CHANGE_TARGET to 2;
cortex_behemoth.bos:    set CHANGE_TARGET to 3;
cortex_behemoth.bos:    set CHANGE_TARGET to 4;
cortex_juggernaut.bos:    set ARMORED to 1;
cortex_juggernaut.bos:    set-signal-mask SIG_FOOTSTOMP_L;
cortex_juggernaut.bos:    set-signal-mask SIG_FOOTSTOMP_R;
cortex_energyconverter.bos:                            set ACTIVATION to 1;
cortex_energyconverter.bos:                            set ACTIVATION to 0;
cortex_commando.bos:   set INBUILDSTANCE to 0;
cortex_commando.bos:   set INBUILDSTANCE to 1;
cortex_dragonsmaw.bos:     set ARMORED to 0;
cortex_dragonsmaw.bos:     set ARMORED to 1;
cortex_metalextractor.bos:     set ARMORED to 0;
cortex_metalextractor.bos:     set ARMORED to 1;
cortex_advancedexploiter.bos:    set ARMORED to 0;
cortex_advancedexploiter.bos:    set ARMORED to 1;
cortex_advancedexploiter.bos:    set ACTIVATION to 100;
cortex_advancedexploiter.bos:            set ACTIVATION to 0;
cortex_advancedexploiter.bos:    set ARMORED to 0;
cortex_mangonel.bos:      set-signal-mask SIG_RESTORE;
cortex_pathfinder.bos:     set INBUILDSTANCE to 1;
cortex_pathfinder.bos:     set INBUILDSTANCE to 0;
cortex_trapper.bos:     set INBUILDSTANCE to 0;
cortex_trapper.bos:     set INBUILDSTANCE to 1;
cortex_advancedenergyconverter.bos:    set ARMORED to 0;  //Not needed as MM in BAR have no damage modi
fyer tag set
cortex_advancedenergyconverter.bos:    set ARMORED to 1;
cortex_advancedmetalextractor.bos:    set ARMORED to 0;
cortex_advancedmetalextractor.bos:    set ARMORED to 1;
cortex_advancedmetalextractor.bos:    set ARMORED to 1;
cortex_muskrat.bos: set INBUILDSTANCE to 1;
cortex_muskrat.bos: set INBUILDSTANCE to 0;
cortex_muskrat.bos: set INBUILDSTANCE to 1;
cortex_constructionturret.bos:  set INBUILDSTANCE to 1;
cortex_constructionturret.bos:  set INBUILDSTANCE to 0;
cortex_navalconstructionturret.bos:      set INBUILDSTANCE to 1;
cortex_navalconstructionturret.bos:      set INBUILDSTANCE to 0;
cortex_graverobber.bos:   set INBUILDSTANCE to 0;
cortex_graverobber.bos:   set INBUILDSTANCE to 1;
cortex_seaplaneplatform.bos:    set ARMORED to 0;
cortex_seaplaneplatform.bos:    set ARMORED to 1;
cortex_seaplaneplatform.bos:    set YARD_OPEN to 1;
cortex_seaplaneplatform.bos:            set BUGGER_OFF to 1;
cortex_seaplaneplatform.bos:            set YARD_OPEN to 1;
cortex_seaplaneplatform.bos:    set BUGGER_OFF to 0;
cortex_seaplaneplatform.bos:    set YARD_OPEN to 0;
cortex_seaplaneplatform.bos:            set BUGGER_OFF to 1;
cortex_seaplaneplatform.bos:            set YARD_OPEN to 0;
cortex_seaplaneplatform.bos:    set BUGGER_OFF to 0;
cortex_seaplaneplatform.bos:    set INBUILDSTANCE to 1;
cortex_seaplaneplatform.bos:    set INBUILDSTANCE to 0;
cortex_seaplaneplatform.bos:    set ARMORED to 1;
cortex_deathcavalry.bos:    set INBUILDSTANCE to 1;
cortex_deathcavalry.bos:    set INBUILDSTANCE to 0;
cortex_shiva.bos:   set ARMORED to 1;
cortex_shiva.bos:   set ARMORED to 0;
cortex_shiva.bos:   set ARMORED to 1;
cortex_shroud.bos:/*    80:*/               set ACTIVATION to 0;
cortex_shroud.bos:/*   138:*/               set ACTIVATION to 0;
cortex_shroud.bos:/*   144:*/               set ACTIVATION to 100;
cortex_phantasm.bos:            set ACTIVATION to 0;
cortex_phantasm.bos:            set ACTIVATION to 0;
cortex_phantasm.bos:            set ACTIVATION to 100;
cortex_solarcollector.bos:   set YARD_OPEN to 1;
cortex_solarcollector.bos:           set BUGGER_OFF to 1;
cortex_solarcollector.bos:           set YARD_OPEN to 1;
cortex_solarcollector.bos:   set BUGGER_OFF to 0;
cortex_solarcollector.bos:   set YARD_OPEN to 0;
cortex_solarcollector.bos:           set BUGGER_OFF to 1;
cortex_solarcollector.bos:           set YARD_OPEN to 0;
cortex_solarcollector.bos:   set BUGGER_OFF to 0;
cortex_solarcollector.bos:   set ACTIVATION to 100;
cortex_solarcollector.bos:           set ACTIVATION to 0;
cortex_solarcollector.bos:   set ARMORED to 0;
cortex_solarcollector.bos:   set ARMORED to 1;
cortex_solarcollector.bos:           set ACTIVATION to 0;
cortex_solarcollector.bos:           set ACTIVATION to 100;
cortex_deceiver.bos:            set ACTIVATION to 0;
cortex_deceiver.bos:            set ACTIVATION to 0;
cortex_deceiver.bos:            set ACTIVATION to 100;
cortex_spectre.bos:     set INBUILDSTANCE to 1;
cortex_spectre.bos:     set INBUILDSTANCE to 0;
cortex_shipyard.bos:      set YARD_OPEN to 1;
cortex_shipyard.bos:              set BUGGER_OFF to 1;
cortex_shipyard.bos:              set YARD_OPEN to 1;
cortex_shipyard.bos:      set BUGGER_OFF to 0;
cortex_shipyard.bos:      set YARD_OPEN to 0;
cortex_shipyard.bos:              set BUGGER_OFF to 1;
cortex_shipyard.bos:              set YARD_OPEN to 0;
cortex_shipyard.bos:      set BUGGER_OFF to 0;
cortex_shipyard.bos:      set INBUILDSTANCE to 1;
cortex_shipyard.bos:      set INBUILDSTANCE to 0;
cortex_pinpointer.bos:/*   1a6:*/ set ACTIVATION to 0;
cortex_pinpointer.bos:/*   1ae:*/ set ACTIVATION to 1;
cortex_caravan.bos:           set BUSY to 1;
cortex_caravan.bos:           set BUSY to 0;
cortex_caravan.bos:           set BUSY to 1;
cortex_caravan.bos:           set BUSY to 0;
cortex_persecutor.bos:   set ARMORED to 0;
cortex_persecutor.bos:   set ARMORED to 1;
cortex_coffin.bos:           set BUSY to 1;
cortex_coffin.bos:           set BUSY to 0;
cortex_coffin.bos:           set BUSY to 1;
cortex_coffin.bos:           set BUSY to 0;
cortex_navaladvancedmetalextractor.bos:   set ARMORED to 0;
cortex_navaladvancedmetalextractor.bos:   set ARMORED to 1;
cortex_navaladvancedmetalextractor.bos:   set ARMORED to 1;
cortex_vehicleplant.bos:      set YARD_OPEN to 1;
cortex_vehicleplant.bos:              set BUGGER_OFF to 1;
cortex_vehicleplant.bos:              set YARD_OPEN to 1;
cortex_vehicleplant.bos:      set BUGGER_OFF to 0;
cortex_vehicleplant.bos:      set YARD_OPEN to 0;
cortex_vehicleplant.bos:              set BUGGER_OFF to 1;
cortex_vehicleplant.bos:              set YARD_OPEN to 0;
cortex_vehicleplant.bos:      set BUGGER_OFF to 0;
cortex_vehicleplant.bos:      set INBUILDSTANCE to 1;
cortex_vehicleplant.bos:      set INBUILDSTANCE to 0;
cortex_negotiator.bos:    set-signal-mask SIG_RESTORE;
cortex_windturbine.bos:                     set ACTIVATION to 100;
cortex_windturbine.bos:             set ACTIVATION to 0;
cortex_windturbine.bos:             set ACTIVATION to 100;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 1;
meteor.bos:     set ARMORED to 0;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 0;
fgrep: New folder: Is a directory
roost.bos:      set ARMORED to 0;
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
yard.h: set YARD_OPEN to TRUE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to TRUE;
yard.h: set BUGGER_OFF to FALSE;
yard.h: set YARD_OPEN to FALSE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to FALSE;
yard.h: set BUGGER_OFF to FALSE;

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i -E set.+to *
Binary file armada_archangel.cob matches
armada_advancedaircraftplant.bos:     set YARD_OPEN to 1;
armada_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
armada_advancedaircraftplant.bos:             set YARD_OPEN to 1;
armada_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
armada_advancedaircraftplant.bos:     set YARD_OPEN to 0;
armada_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
armada_advancedaircraftplant.bos:             set YARD_OPEN to 0;
armada_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
armada_advancedaircraftplant.bos:     set INBUILDSTANCE to 1;
armada_advancedaircraftplant.bos:     set INBUILDSTANCE to 0;
Binary file armada_dragonslayer.cob matches
armada_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 1;
armada_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionbot.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionbot.bos:     set INBUILDSTANCE to 1;
armada_advancedconstructionsub.bos:   set INBUILDSTANCE to 0;
armada_advancedconstructionsub.bos:   set INBUILDSTANCE to 1;
armada_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 1;
Binary file armada_advancedconstructionvehicle.cob matches
armada_advancedsolarcollector.bos:  set ARMORED to 0;
armada_advancedsolarcollector.bos:  set ARMORED to 1;
armada_advancedfusionreactor.bos:    set ARMORED to 1;
armada_advancedfusionreactor.bos:    set ARMORED to 0;
Binary file armada_sweeper.cob matches
armada_advancedbotlab.bos:    set YARD_OPEN to 1;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 1;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set YARD_OPEN to 0;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 0;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 1;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 0;
armada_rattlesnake.bos:     set ARMORED to 0;
armada_rattlesnake.bos:     set ARMORED to 1;
Binary file armada_rattlesnake.cob matches
armada_twilight.bos:    set ARMORED to 0;
armada_twilight.bos:    set ARMORED to 1;
armada_twilight.bos:    set ACTIVATION to 0;
armada_twilight.bos:    set ACTIVATION to 100;
Binary file armada_amphibiousbot.cob matches
armada_amphibiouscomplex.bos:   set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 1;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 0;
Binary file armada_crocodile.cob matches
armada_pulsar.bos:    set ARMORED to 0;
armada_pulsar.bos:    set ARMORED to 1;
armada_aircraftplant.bos:      set YARD_OPEN to 1;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 1;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set YARD_OPEN to 0;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 0;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set INBUILDSTANCE to 1;
armada_aircraftplant.bos:      set INBUILDSTANCE to 0;
Binary file armada_shellshocker.cob matches
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 100;
Binary file armada_radarjammerbot.cob matches
armada_advancedshipyard.bos:     set YARD_OPEN to 1;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 1;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set YARD_OPEN to 0;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 0;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 1;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 0;
Binary file armada_moray.cob matches
armada_advancedvehicleplant.bos:     set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 1;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 0;
Binary file armada_titan.cob matches
Binary file armada_dreadnought.cob matches
armada_beaver.bos:  set INBUILDSTANCE to 0;
armada_beaver.bos:  set INBUILDSTANCE to 1;
Binary file armada_roughneck.cob matches
Binary file armada_bull.cob matches
armada_constructionaircraft.bos:      set INBUILDSTANCE to 1;
armada_constructionaircraft.bos:      set INBUILDSTANCE to 0;
Binary file armada_haven.cob matches
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 0;
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 1;
Binary file armada_constructionhovercraft.cob matches
Binary file armada_chainsaw.cob matches
armada_constructionbot.bos:      set INBUILDSTANCE to 0;
armada_constructionbot.bos:      set INBUILDSTANCE to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 1;
Binary file armada_dragonsclaw.cob matches
armada_commander.bos:     set INBUILDSTANCE to 1;
armada_commander.bos:     set INBUILDSTANCE to 0;
armada_commanderboss.bos: set INBUILDSTANCE to 1;
armada_commanderboss.bos: set INBUILDSTANCE to 0;
armada_consul.bos:  set INBUILDSTANCE to 1;
armada_consul.bos:  set INBUILDSTANCE to 0;
Binary file armada_turtle.cob matches
Binary file armada_paladin.cob matches
armada_constructionship.bos:      set INBUILDSTANCE to 0;
armada_constructionship.bos:      set INBUILDSTANCE to 1;
Binary file armada_constructionship.cob matches
armada_constructionseaplane.bos:     set INBUILDSTANCE to 1;
armada_constructionseaplane.bos:     set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 1;
Binary file armada_dolphin.cob matches
armada_decoyfusionreactor.bos:      set ARMORED to 1;
armada_decoyfusionreactor.bos:      set ARMORED to 0;
Binary file armada_paralyzer.cob matches
armada_epoch.bos:   set ARMORED to 1;
Binary file armada_epoch.cob matches
armada_butler.bos:    set INBUILDSTANCE to 0;
armada_butler.bos:    set INBUILDSTANCE to 1;
Binary file armada_sprinter.cob matches
Binary file armada_rover.cob matches
Binary file armada_fatboy.cob matches
armada_ferret.bos:  set ARMORED to 0;
armada_ferret.bos:  set ARMORED to 1;
Binary file armada_ferret.cob matches
Binary file armada_navalarbalest.cob matches
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 1;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 0;
Binary file armada_hound.cob matches
Binary file armada_arbalest.cob matches
Binary file armada_blitz.cob matches
Binary file armada_tick.cob matches
Binary file armada_navalnettle.cob matches
armada_fusionreactor.bos:     set ARMORED to 1;
armada_fusionreactor.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 1;
Binary file armada_gunplatform.cob matches
Binary file armada_gremlin.cob matches
Binary file armada_mace.cob matches
armada_hovercraftplatform.bos:      set YARD_OPEN to 1;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 1;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set YARD_OPEN to 0;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 0;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 1;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 0;
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 100;
Binary file armada_janus.cob matches
Binary file armada_crossbow.cob matches
Binary file armada_juno.cob matches
Binary file armada_banshee.cob matches
armada_botlab.bos:     set YARD_OPEN to 1;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 1;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set YARD_OPEN to 0;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 0;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set INBUILDSTANCE to 1;
armada_botlab.bos:     set INBUILDSTANCE to 0;
Binary file armada_jaguar.cob matches
Binary file armada_lunkhead.cob matches
Binary file armada_starlight.cob matches
Binary file armada_marauder.cob matches
fgrep: armada_marauder_lus: Is a directory
Binary file armada_compass.cob matches
Binary file armada_mauser.cob matches
Binary file armada_gunslinger.cob matches
armada_mercury.bos: set DELAY_UNIT_VAR to 0;
Binary file armada_mercury.cob matches
armada_ambassador.bos:    set ARMORED to 1;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:    set-signal-mask SIG_RESTORE;
Binary file armada_ambassador.cob matches
armada_possum.bos:      set-signal-mask SIG_RESTORE;
Binary file armada_possum.cob matches
armada_voyager.bos:     set INBUILDSTANCE to 1;
armada_voyager.bos:     set INBUILDSTANCE to 0;
Binary file armada_voyager.cob matches
armada_groundhog.bos:     set INBUILDSTANCE to 1;
armada_groundhog.bos:     set INBUILDSTANCE to 0;
armada_advancedenergyconverter.bos:    set ARMORED to 0; //Not needed as MM in BAR have no damage modif
yer tag set
armada_advancedenergyconverter.bos:    set ARMORED to 1;
Binary file armada_longbow.cob matches
armada_constructionturret.bos:  set INBUILDSTANCE to 1;
armada_constructionturret.bos:  set INBUILDSTANCE to 0;
Binary file armada_constructionturret.cob matches
armada_navalconstructionturret.bos:      set INBUILDSTANCE to 1;
armada_navalconstructionturret.bos:      set INBUILDSTANCE to 0;
Binary file armada_navalconstructionturret.cob matches
armada_pitbull.bos:      set ARMORED to 0;
armada_pitbull.bos:      set ARMORED to 1;
armada_pitbull.bos:      set-signal-mask SIG_RESTORE;
Binary file armada_pitbull.cob matches
Binary file armada_pincer.cob matches
armada_seaplaneplatform.bos:    set ARMORED to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
armada_seaplaneplatform.bos:    set YARD_OPEN to 1;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 1;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set YARD_OPEN to 0;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 0;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 1;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
Binary file armada_ellysaw.cob matches
Binary file armada_skater.cob matches
Binary file armada_harpoon2.cob matches
armada_pawn.bos:              bAnimate = TRUE; // this sets animation started, so that
 StopAnimate knows that it should restore state quickly
Binary file armada_pawn.cob matches
armada_grimreaper.bos:    set INBUILDSTANCE to 1;
armada_grimreaper.bos:    set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 1;
armrectrt4.bos: set INBUILDSTANCE to 0;
armrectrt4.bos: set INBUILDSTANCE to 1;
Binary file armada_nettle.cob matches
Binary file armada_rocketeer.cob matches
Binary file armada_corsair.cob matches
Binary file armada_sabre.cob matches
Binary file armada_whistler.cob matches
Binary file armada_tsunami.cob matches
Binary file armada_umbrella.cob matches
Binary file armada_serpent.cob matches
Binary file armada_seeker.cob matches
armada_experimentalgantry.bos:   set YARD_OPEN to 1;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 1;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set YARD_OPEN to 0;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 0;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 1;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 0;
Binary file armada_armageddon.cob matches
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 100;
Binary file armada_bermuda.cob matches
Binary file armada_sharpshooter.cob matches
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 1;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 0;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:   set ARMORED to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:   set ARMORED to 1;
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 100;
Binary file armada_webber.cob matches
Binary file armada_recluse.cob matches
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:     set INBUILDSTANCE to 1;
armada_ghost.bos:     set INBUILDSTANCE to 0;
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:             set ACTIVATION to 100;
Binary file armada_stout.cob matches
Binary file armada_eel.cob matches
armada_shipyard.bos:      set YARD_OPEN to 1;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 1;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set YARD_OPEN to 0;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 0;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set INBUILDSTANCE to 1;
armada_shipyard.bos:      set INBUILDSTANCE to 0;
armada_pinpointer.bos:    set ARMORED to 1;
armada_pinpointer.bos:    set ACTIVATION to 0;
armada_pinpointer.bos:    set ACTIVATION to 1;
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           set BUSY to 0;
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           set BUSY to 0;
Binary file armada_bearer.cob matches
Binary file armada_harpoon.cob matches
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           set BUSY to 0;
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           set BUSY to 0;
Binary file armada_convoy.cob matches
Binary file armada_vanguard.cob matches
armada_vehicleplant.bos:      set ARMORED to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
armada_vehicleplant.bos:      set YARD_OPEN to 1;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 1;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set YARD_OPEN to 0;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 0;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set INBUILDSTANCE to 1;
armada_vehicleplant.bos:      set INBUILDSTANCE to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
Binary file armada_centurion.cob matches
armada_windturbine.bos:                     set ACTIVATION to 100;
armada_windturbine.bos:             set ACTIVATION to 0;
armada_windturbine.bos:             set ACTIVATION to 100;
Binary file armada_windturbine.cob matches
Binary file armada_shredder.cob matches
Binary file armada_welder.cob matches
Binary file cob_file.pyc matches
constants.h:#define BUGGER_OFF          19  // set or get (ask other units to cl
ear the area)
constants.h:#define CHANGE_TARGET             98 // set, the value it's set to d
etermines the affected weapon
cortex_advancedaircraftplant.bos:     set YARD_OPEN to 1;
cortex_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
cortex_advancedaircraftplant.bos:             set YARD_OPEN to 1;
cortex_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
cortex_advancedaircraftplant.bos:     set YARD_OPEN to 0;
cortex_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
cortex_advancedaircraftplant.bos:             set YARD_OPEN to 0;
cortex_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
cortex_advancedaircraftplant.bos:     set INBUILDSTANCE to 1;
cortex_advancedaircraftplant.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 1;
cortex_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionbot.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionbot.bos:     set INBUILDSTANCE to 1;
cortex_advancedconstructionsub.bos:   set INBUILDSTANCE to 0;
cortex_advancedconstructionsub.bos:   set INBUILDSTANCE to 1;
cortex_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 1;
Binary file cortex_advancedconstructionvehicle.cob matches
cortex_advancedsolarcollector.bos:/*    57:*/       set ARMORED to 0;
cortex_advancedsolarcollector.bos:/*    5f:*/       set ARMORED to 1;
cortex_advancedsolarcollector.bos:/*    7d:*/       set ACTIVATION to 0;
cortex_advancedsolarcollector.bos:/*    85:*/       set ACTIVATION to 100;
cortex_advancedfusionreactor.bos:/*    b0:*/ set ARMORED to 1;
cortex_advancedfusionreactor.bos:/*    ba:*/ set ARMORED to 0;
Binary file cortex_birdeater.cob matches
Binary file cortex_grunt.cob matches
Binary file cortex_duck.cob matches
cortex_amphibiouscomplex.bos:/*    87:*/        set YARD_OPEN to 1;
cortex_amphibiouscomplex.bos:/*    92:*/                set BUGGER_OFF to 1;
cortex_amphibiouscomplex.bos:/*    9a:*/                set YARD_OPEN to 1;
cortex_amphibiouscomplex.bos:/*    a1:*/        set BUGGER_OFF to 0;
cortex_amphibiouscomplex.bos:/*    a9:*/        set YARD_OPEN to 0;
cortex_amphibiouscomplex.bos:/*    b3:*/                set BUGGER_OFF to 1;
cortex_amphibiouscomplex.bos:/*    bb:*/                set YARD_OPEN to 0;
cortex_amphibiouscomplex.bos:/*    c2:*/        set BUGGER_OFF to 0;
cortex_amphibiouscomplex.bos:/*    d0:*/        set INBUILDSTANCE to 1;
cortex_amphibiouscomplex.bos:/*    d8:*/        set INBUILDSTANCE to 0;
cortex_aircraftplant.bos:/*   17e:*/   set YARD_OPEN to 1;
cortex_aircraftplant.bos:/*   189:*/           set BUGGER_OFF to 1;
cortex_aircraftplant.bos:/*   191:*/           set YARD_OPEN to 1;
cortex_aircraftplant.bos:/*   198:*/   set BUGGER_OFF to 0;
cortex_aircraftplant.bos:/*   1a0:*/   set YARD_OPEN to 0;
cortex_aircraftplant.bos:/*   1aa:*/           set BUGGER_OFF to 1;
cortex_aircraftplant.bos:/*   1b2:*/           set YARD_OPEN to 0;
cortex_aircraftplant.bos:/*   1b9:*/   set BUGGER_OFF to 0;
cortex_aircraftplant.bos:/*   1d5:*/   set INBUILDSTANCE to 1;
cortex_aircraftplant.bos:/*   1dd:*/   set INBUILDSTANCE to 0;
Binary file cortex_arrowstorm.cob matches
cortex_advancedshipyard.bos:     set YARD_OPEN to 1;
cortex_advancedshipyard.bos:             set BUGGER_OFF to 1;
cortex_advancedshipyard.bos:             set YARD_OPEN to 1;
cortex_advancedshipyard.bos:     set BUGGER_OFF to 0;
cortex_advancedshipyard.bos:     set YARD_OPEN to 0;
cortex_advancedshipyard.bos:             set BUGGER_OFF to 1;
cortex_advancedshipyard.bos:             set YARD_OPEN to 0;
cortex_advancedshipyard.bos:     set BUGGER_OFF to 0;
cortex_advancedshipyard.bos:     set INBUILDSTANCE to 1;
cortex_advancedshipyard.bos:     set INBUILDSTANCE to 0;
cortex_advancedshipyarde.bos:    set YARD_OPEN to 1;
cortex_advancedshipyarde.bos:            set BUGGER_OFF to 1;
cortex_advancedshipyarde.bos:            set YARD_OPEN to 1;
cortex_advancedshipyarde.bos:    set BUGGER_OFF to 0;
cortex_advancedshipyarde.bos:    set YARD_OPEN to 0;
cortex_advancedshipyarde.bos:            set BUGGER_OFF to 1;
cortex_advancedshipyarde.bos:            set YARD_OPEN to 0;
cortex_advancedshipyarde.bos:    set BUGGER_OFF to 0;
cortex_advancedshipyarde.bos:    set INBUILDSTANCE to 1;
cortex_advancedshipyarde.bos:    set INBUILDSTANCE to 0;
cortex_advancedvehicleplant.bos:     set YARD_OPEN to 1;
cortex_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
cortex_advancedvehicleplant.bos:             set YARD_OPEN to 1;
cortex_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
cortex_advancedvehicleplant.bos:     set YARD_OPEN to 0;
cortex_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
cortex_advancedvehicleplant.bos:             set YARD_OPEN to 0;
cortex_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
cortex_advancedvehicleplant.bos:     set INBUILDSTANCE to 1;
cortex_advancedvehicleplant.bos:     set INBUILDSTANCE to 0;
Binary file cortex_banisher.cob matches
Binary file cortex_despot.cob matches
cortex_cerberus.bos:   set ACTIVATION to 100;
cortex_cerberus.bos:   set ACTIVATION to 0;
cortex_blackhydra.bos: set ARMORED to 1;
Binary file cortex_blackhydra.cob matches
cortex_shuriken.bos:                      set UNKNOWN_UNIT_VALUE(82) to 0 - 1500 + get UNK
NOWN_UNIT_VALUE(82);
cortex_shuriken.bos:                      set UNKNOWN_UNIT_VALUE(82) to 1500 + get UNKNOWN
_UNIT_VALUE(82);
cortex_constructionaircraft.bos:      set INBUILDSTANCE to 1;
cortex_constructionaircraft.bos:      set INBUILDSTANCE to 0;
Binary file cortex_sumo.cob matches
Binary file cortex_oasis.cob matches
Binary file cortex_catapult.cob matches
cortex_constructionhovercraft.bos:      set INBUILDSTANCE to 0;
cortex_constructionhovercraft.bos:      set INBUILDSTANCE to 1;
Binary file cortex_constructionhovercraft.cob matches
cortex_constructionbot.bos:      set INBUILDSTANCE to 0;
cortex_constructionbot.bos:      set INBUILDSTANCE to 1;
cortex_commander.bos:     set INBUILDSTANCE to 1;
cortex_commander.bos:     set INBUILDSTANCE to 0;
cortex_commanderboss.bos: set INBUILDSTANCE to 1;
cortex_commanderboss.bos: set INBUILDSTANCE to 0;
Binary file cortex_trasher.cob matches
Binary file cortex_buccaneer.cob matches
Binary file cortex_dragonold.cob matches
cortex_constructionship.bos:      set INBUILDSTANCE to 1;
cortex_constructionship.bos:      set INBUILDSTANCE to 0;
cortex_constructionseaplane.bos:     set INBUILDSTANCE to 1;
cortex_constructionseaplane.bos:     set INBUILDSTANCE to 0;
Binary file cortex_cutlass.cob matches
cortex_constructionvehicle.bos:      set INBUILDSTANCE to 0;
cortex_constructionvehicle.bos:      set INBUILDSTANCE to 1;
cortex_calamity.bos:    set ARMORED to 0;
cortex_calamity.bos:    set ARMORED to 1;
Binary file cortex_navalbirdshot.cob matches
cortex_eradicator.bos:            set CHANGE_TARGET to 1;
Binary file cortex_eradicator.cob matches
Binary file cortex_supporter.cob matches
cortex_obscurer.bos:            set ACTIVATION to 0;
cortex_obscurer.bos:            set ACTIVATION to 0;
cortex_obscurer.bos:            set ACTIVATION to 100;
Binary file cortex_exploiter.cob matches
cortex_twitcher.bos:    set INBUILDSTANCE to 1;
cortex_twitcher.bos:    set INBUILDSTANCE to 0;
Binary file cortex_rascal.cob matches
cortex_navalhovercraftplatform.bos:/*   162:*/  set YARD_OPEN to 1;
cortex_navalhovercraftplatform.bos:/*   16d:*/          set BUGGER_OFF to 1;
cortex_navalhovercraftplatform.bos:/*   175:*/          set YARD_OPEN to 1;
cortex_navalhovercraftplatform.bos:/*   17c:*/  set BUGGER_OFF to 0;
cortex_navalhovercraftplatform.bos:/*   184:*/  set YARD_OPEN to 0;
cortex_navalhovercraftplatform.bos:/*   18e:*/          set BUGGER_OFF to 1;
cortex_navalhovercraftplatform.bos:/*   196:*/          set YARD_OPEN to 0;
cortex_navalhovercraftplatform.bos:/*   19d:*/  set BUGGER_OFF to 0;
cortex_navalhovercraftplatform.bos:/*   1bb:*/  set INBUILDSTANCE to 1;
cortex_navalhovercraftplatform.bos:/*   1c3:*/  set INBUILDSTANCE to 0;
Binary file corflak.cob matches
cortex_navalenergyconverter.bos:                    set ACTIVATION to 1;
cortex_navalenergyconverter.bos:                    set ACTIVATION to 0;
Binary file cortex_janitor.cob matches
Binary file cortex_slingshot.cob matches
cortex_experimentalgantry.bos:    set YARD_OPEN to 1;
cortex_experimentalgantry.bos:            set BUGGER_OFF to 1;
cortex_experimentalgantry.bos:            set YARD_OPEN to 1;
cortex_experimentalgantry.bos:    set BUGGER_OFF to 0;
cortex_experimentalgantry.bos:    set YARD_OPEN to 0;
cortex_experimentalgantry.bos:            set BUGGER_OFF to 1;
cortex_experimentalgantry.bos:            set YARD_OPEN to 0;
cortex_experimentalgantry.bos:    set BUGGER_OFF to 0;
cortex_experimentalgantry.bos:    set INBUILDSTANCE to 1;
cortex_experimentalgantry.bos:    set INBUILDSTANCE to 0;
Binary file cortex_garpike.cob matches
Binary file cortex_incisor.cob matches
Binary file cortex_tzar.cob matches
Binary file cortex_halberd.cob matches
cortex_hovercraftplatform.bos:/*   162:*/   set YARD_OPEN to 1;
cortex_hovercraftplatform.bos:/*   16d:*/           set BUGGER_OFF to 1;
cortex_hovercraftplatform.bos:/*   175:*/           set YARD_OPEN to 1;
cortex_hovercraftplatform.bos:/*   17c:*/   set BUGGER_OFF to 0;
cortex_hovercraftplatform.bos:/*   184:*/   set YARD_OPEN to 0;
cortex_hovercraftplatform.bos:/*   18e:*/           set BUGGER_OFF to 1;
cortex_hovercraftplatform.bos:/*   196:*/           set YARD_OPEN to 0;
cortex_hovercraftplatform.bos:/*   19d:*/   set BUGGER_OFF to 0;
cortex_hovercraftplatform.bos:/*   1bb:*/   set INBUILDSTANCE to 1;
cortex_hovercraftplatform.bos:/*   1c3:*/   set INBUILDSTANCE to 0;
Binary file cortex_arbiter.cob matches
cortex_intruder.bos:    set ARMORED to 1;
cortex_intruder.bos:            set BUSY to 1;
cortex_intruder.bos:            set BUSY to 0;
cortex_intruder.bos:    set BUSY to 1;
cortex_intruder.bos:    set BUSY to 0;
cortex_behemoth.bos:    set CHANGE_TARGET to 2;
cortex_behemoth.bos:    set CHANGE_TARGET to 3;
cortex_behemoth.bos:    set CHANGE_TARGET to 4;
Binary file cortex_behemoth.cob matches
cortex_behemoth.lua_old:        SetSignalMask( SIG_stop )
Binary file cortex_juno.cob matches
cortex_karganeth.lua_old:        SetSignalMask(SIG_RESTORE)
cortex_juggernaut.bos:    set ARMORED to 1;
cortex_juggernaut.bos:    set-signal-mask SIG_FOOTSTOMP_L;
cortex_juggernaut.bos:    set-signal-mask SIG_FOOTSTOMP_R;
Binary file cortex_juggernaut.cob matches
Binary file cortex_pounder.cob matches
Binary file cortex_saviour.cob matches
cortex_energyconverter.bos:                            set ACTIVATION to 1;
cortex_energyconverter.bos:                            set ACTIVATION to 0;
cortex_commando.bos:   set INBUILDSTANCE to 0;
cortex_commando.bos:   set INBUILDSTANCE to 1;
Binary file cortex_quaker.cob matches
cortex_dragonsmaw.bos:     set ARMORED to 0;
cortex_dragonsmaw.bos:     set ARMORED to 1;
Binary file cortex_dragonsmaw.cob matches
cortex_metalextractor.bos:     set ARMORED to 0;
cortex_metalextractor.bos:     set ARMORED to 1;
cortex_advancedexploiter.bos:    set ARMORED to 0;
cortex_advancedexploiter.bos:    set ARMORED to 1;
cortex_advancedexploiter.bos:    set ACTIVATION to 100;
cortex_advancedexploiter.bos:            set ACTIVATION to 0;
cortex_advancedexploiter.bos:    set ARMORED to 0;
Binary file cortex_advancedexploiter.cob matches
cortex_mangonel.bos:      set-signal-mask SIG_RESTORE;
Binary file cortex_mangonel.cob matches
Binary file cortex_lasher.cob matches
cortex_pathfinder.bos:     set INBUILDSTANCE to 1;
cortex_pathfinder.bos:     set INBUILDSTANCE to 0;
cortex_trapper.bos:     set INBUILDSTANCE to 0;
cortex_trapper.bos:     set INBUILDSTANCE to 1;
cortex_advancedenergyconverter.bos:    set ARMORED to 0;  //Not needed as MM in BAR have no damage modi
fyer tag set
cortex_advancedenergyconverter.bos:    set ARMORED to 1;
cortex_advancedmetalextractor.bos:    set ARMORED to 0;
cortex_advancedmetalextractor.bos:    set ARMORED to 1;
cortex_advancedmetalextractor.bos:    set ARMORED to 1;
Binary file cortex_sheldon.cob matches
Binary file cortex_messenger.cob matches
cortex_muskrat.bos: set INBUILDSTANCE to 1;
cortex_muskrat.bos: set INBUILDSTANCE to 0;
cortex_muskrat.bos: set INBUILDSTANCE to 1;
cortex_constructionturret.bos:  set INBUILDSTANCE to 1;
cortex_constructionturret.bos:  set INBUILDSTANCE to 0;
Binary file cortex_constructionturret.cob matches
cortex_navalconstructionturret.bos:      set INBUILDSTANCE to 1;
cortex_navalconstructionturret.bos:      set INBUILDSTANCE to 0;
Binary file cortex_navalconstructionturret.cob matches
cortex_graverobber.bos:   set INBUILDSTANCE to 0;
cortex_graverobber.bos:   set INBUILDSTANCE to 1;
Binary file cortex_poisonarrow.cob matches
cortex_seaplaneplatform.bos:    set ARMORED to 0;
cortex_seaplaneplatform.bos:    set ARMORED to 1;
cortex_seaplaneplatform.bos:    set YARD_OPEN to 1;
cortex_seaplaneplatform.bos:            set BUGGER_OFF to 1;
cortex_seaplaneplatform.bos:            set YARD_OPEN to 1;
cortex_seaplaneplatform.bos:    set BUGGER_OFF to 0;
cortex_seaplaneplatform.bos:    set YARD_OPEN to 0;
cortex_seaplaneplatform.bos:            set BUGGER_OFF to 1;
cortex_seaplaneplatform.bos:            set YARD_OPEN to 0;
cortex_seaplaneplatform.bos:    set BUGGER_OFF to 0;
cortex_seaplaneplatform.bos:    set INBUILDSTANCE to 1;
cortex_seaplaneplatform.bos:    set INBUILDSTANCE to 0;
cortex_seaplaneplatform.bos:    set ARMORED to 1;
Binary file cortex_riptide.cob matches
Binary file cortex_herring.cob matches
Binary file cortex_fiend.cob matches
Binary file cortex_brute.cob matches
Binary file cortex_tiger.cob matches
cortex_deathcavalry.bos:    set INBUILDSTANCE to 1;
cortex_deathcavalry.bos:    set INBUILDSTANCE to 0;
Binary file cortex_thistle.cob matches
Binary file cortex_oppressor.cob matches
Binary file cortex_dambuster.cob matches
Binary file cortex_screamer.cob matches
Binary file cortex_alligator.cob matches
Binary file cortex_fury.cob matches
Binary file cortex_goon.cob matches
cortex_shiva.bos:   set ARMORED to 1;
cortex_shiva.bos:   set ARMORED to 0;
cortex_shiva.bos:   set ARMORED to 1;
Binary file cortex_shiva.cob matches
cortex_shiva.lua_old:       SetSignalMask( SIG_stop )
cortex_shiva.lua_old:       SetSignalMask( SIG_stop )
cortex_shroud.bos:/*    80:*/               set ACTIVATION to 0;
cortex_shroud.bos:/*   138:*/               set ACTIVATION to 0;
cortex_shroud.bos:/*   144:*/               set ACTIVATION to 100;
Binary file cortex_apocalypse.cob matches
cortex_phantasm.bos:            set ACTIVATION to 0;
cortex_phantasm.bos:            set ACTIVATION to 0;
cortex_phantasm.bos:            set ACTIVATION to 100;
Binary file cortex_cayman.cob matches
Binary file cortex_cataphract.cob matches
cortex_solarcollector.bos:   set YARD_OPEN to 1;
cortex_solarcollector.bos:           set BUGGER_OFF to 1;
cortex_solarcollector.bos:           set YARD_OPEN to 1;
cortex_solarcollector.bos:   set BUGGER_OFF to 0;
cortex_solarcollector.bos:   set YARD_OPEN to 0;
cortex_solarcollector.bos:           set BUGGER_OFF to 1;
cortex_solarcollector.bos:           set YARD_OPEN to 0;
cortex_solarcollector.bos:   set BUGGER_OFF to 0;
cortex_solarcollector.bos:   set ACTIVATION to 100;
cortex_solarcollector.bos:           set ACTIVATION to 0;
cortex_solarcollector.bos:   set ARMORED to 0;
cortex_solarcollector.bos:   set ARMORED to 1;
cortex_solarcollector.bos:           set ACTIVATION to 0;
cortex_solarcollector.bos:           set ACTIVATION to 100;
cortex_deceiver.bos:            set ACTIVATION to 0;
cortex_deceiver.bos:            set ACTIVATION to 0;
cortex_deceiver.bos:            set ACTIVATION to 100;
Binary file cortex_deceiver.cob matches
cortex_spectre.bos:     set INBUILDSTANCE to 1;
cortex_spectre.bos:     set INBUILDSTANCE to 0;
Binary file cortex_aggravator.cob matches
Binary file cortex_mammoth.cob matches
cortex_mammoth.lua_old:    SetSignalMask(SIG_RESTORE)
cortex_shipyard.bos:      set YARD_OPEN to 1;
cortex_shipyard.bos:              set BUGGER_OFF to 1;
cortex_shipyard.bos:              set YARD_OPEN to 1;
cortex_shipyard.bos:      set BUGGER_OFF to 0;
cortex_shipyard.bos:      set YARD_OPEN to 0;
cortex_shipyard.bos:              set BUGGER_OFF to 1;
cortex_shipyard.bos:              set YARD_OPEN to 0;
cortex_shipyard.bos:      set BUGGER_OFF to 0;
cortex_shipyard.bos:      set INBUILDSTANCE to 1;
cortex_shipyard.bos:      set INBUILDSTANCE to 0;
cortex_pinpointer.bos:/*   1a6:*/ set ACTIVATION to 0;
cortex_pinpointer.bos:/*   1ae:*/ set ACTIVATION to 1;
Binary file cortex_termite.cob matches
cortex_caravan.bos:           set BUSY to 1;
cortex_caravan.bos:           set BUSY to 0;
cortex_caravan.bos:           set BUSY to 1;
cortex_caravan.bos:           set BUSY to 0;
Binary file cortex_caravan.cob matches
Binary file cortex_thug.cob matches
cortex_persecutor.bos:   set ARMORED to 0;
cortex_persecutor.bos:   set ARMORED to 1;
Binary file cortex_persecutor.cob matches
Binary file cortex_tremor.cob matches
Binary file cortex_catalyst.cob matches
cortex_coffin.bos:           set BUSY to 1;
cortex_coffin.bos:           set BUSY to 0;
cortex_coffin.bos:           set BUSY to 1;
cortex_coffin.bos:           set BUSY to 0;
Binary file cortex_coffin.cob matches
cortex_navaladvancedmetalextractor.bos:   set ARMORED to 0;
cortex_navaladvancedmetalextractor.bos:   set ARMORED to 1;
cortex_navaladvancedmetalextractor.bos:   set ARMORED to 1;
Binary file cortex_augur.cob matches
cortex_vehicleplant.bos:      set YARD_OPEN to 1;
cortex_vehicleplant.bos:              set BUGGER_OFF to 1;
cortex_vehicleplant.bos:              set YARD_OPEN to 1;
cortex_vehicleplant.bos:      set BUGGER_OFF to 0;
cortex_vehicleplant.bos:      set YARD_OPEN to 0;
cortex_vehicleplant.bos:              set BUGGER_OFF to 1;
cortex_vehicleplant.bos:              set YARD_OPEN to 0;
cortex_vehicleplant.bos:      set BUGGER_OFF to 0;
cortex_vehicleplant.bos:      set INBUILDSTANCE to 1;
cortex_vehicleplant.bos:      set INBUILDSTANCE to 0;
cortex_negotiator.bos:    set-signal-mask SIG_RESTORE;
Binary file cortex_negotiator.cob matches
cortex_windturbine.bos:                     set ACTIVATION to 100;
cortex_windturbine.bos:             set ACTIVATION to 0;
cortex_windturbine.bos:             set ACTIVATION to 100;
Binary file cortex_windturbine.cob matches
Binary file cortex_wolverine.cob matches
exptype.h:#define BUGGER_OFF          19  // set or get (ask other units to clea
r the area)
exptype.h:#define CHANGE_TARGET             98 // set, the value it's set to det
ermines the affected weapon
Binary file fgrep.exe matches
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 1;
meteor.bos:     set ARMORED to 0;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 0;
fgrep: New folder: Is a directory
roost.bos:      set ARMORED to 0;
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
standard_commands_gpl.h:#define BUGGER_OFF              19      // set or get (a
sk other units to clear the area)
yard.h: set YARD_OPEN to TRUE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to TRUE;
yard.h: set BUGGER_OFF to FALSE;
yard.h: set YARD_OPEN to FALSE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to FALSE;
yard.h: set BUGGER_OFF to FALSE;

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i -E set.+to * > COB_SET.txt
fgrep: armada_marauder_lus: Is a directory
^C
C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep --help
Usage: fgrep [OPTION]... PATTERN [FILE] ...
Search for PATTERN in each FILE or standard input.

Regexp selection and interpretation:
  -E, --extended-regexp     PATTERN is an extended regular expression
  -F, --fixed-regexp        PATTERN is a fixed string separated by newlines
  -G, --basic-regexp        PATTERN is a basic regular expression
  -e, --regexp=PATTERN      use PATTERN as a regular expression
  -f, --file=FILE           obtain PATTERN from FILE
  -i, --ignore-case         ignore case distinctions
  -w, --word-regexp         force PATTERN to match only whole words
  -x, --line-regexp         force PATTERN to match only whole lines

Miscellaneous:
  -s, --no-messages         suppress error messages
  -v, --revert-match        select non-matching lines
  -V, --version             print version information and exit
      --help                display this help and exit

Output control:
  -b, --byte-offset         print the byte offset with output lines
  -n, --line-number         print line number with output lines
  -H, --with-filename       print the filename for each match
  -h, --no-filename         suppress the prefixing filename on output
  -q, --quiet, --silent     suppress all normal output
  -a, --text                do not suppress binary output
  -d, --directories=ACTION  how to handle directories
                            ACTION is 'read', 'recurse', or 'skip'.
  -r, --recursive           equivalent to --directories=recurse.
  -L, --files-without-match only print FILE names containing no match
  -l, --files-with-matches  only print FILE names containing matches
  -c, --count               only print a count of matching lines per FILE

Context control:
  -B, --before-context=NUM  print NUM lines of leading context
  -A, --after-context=NUM   print NUM lines of trailing context
  -C, --context[=NUM]       print NUM (default 2) lines of output context
                            unless overriden by -A or -B
  -NUM                      same as --context=NUM
  -U, --binary              do not strip CR characters at EOL (MSDOS)
  -u, --unix-byte-offsets   report offsets as if CRs were not there (MSDOS)

If no -[GEF], then `egrep' assumes -E, `fgrep' -F, else -G.
With no FILE, or when FILE is -, read standard input. If less than
two FILEs given, assume -h. Exit with 0 if matches, with 1 if none.
Exit with 2 if syntax errors or system errors.

Report bugs to <bug-gnu-utils@gnu.org>.

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i -E set.+to *
Binary file armada_archangel.cob matches
armada_advancedaircraftplant.bos:     set YARD_OPEN to 1;
armada_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
armada_advancedaircraftplant.bos:             set YARD_OPEN to 1;
armada_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
armada_advancedaircraftplant.bos:     set YARD_OPEN to 0;
armada_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
armada_advancedaircraftplant.bos:             set YARD_OPEN to 0;
armada_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
armada_advancedaircraftplant.bos:     set INBUILDSTANCE to 1;
armada_advancedaircraftplant.bos:     set INBUILDSTANCE to 0;
Binary file armada_dragonslayer.cob matches
armada_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 1;
armada_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionbot.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionbot.bos:     set INBUILDSTANCE to 1;
armada_advancedconstructionsub.bos:   set INBUILDSTANCE to 0;
armada_advancedconstructionsub.bos:   set INBUILDSTANCE to 1;
armada_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 1;
Binary file armada_advancedconstructionvehicle.cob matches
armada_advancedsolarcollector.bos:  set ARMORED to 0;
armada_advancedsolarcollector.bos:  set ARMORED to 1;
armada_advancedfusionreactor.bos:    set ARMORED to 1;
armada_advancedfusionreactor.bos:    set ARMORED to 0;
Binary file armada_sweeper.cob matches
armada_advancedbotlab.bos:    set YARD_OPEN to 1;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 1;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set YARD_OPEN to 0;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 0;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 1;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 0;
armada_rattlesnake.bos:     set ARMORED to 0;
armada_rattlesnake.bos:     set ARMORED to 1;
Binary file armada_rattlesnake.cob matches
armada_twilight.bos:    set ARMORED to 0;
armada_twilight.bos:    set ARMORED to 1;
armada_twilight.bos:    set ACTIVATION to 0;
armada_twilight.bos:    set ACTIVATION to 100;
Binary file armada_amphibiousbot.cob matches
armada_amphibiouscomplex.bos:   set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 1;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 0;
Binary file armada_crocodile.cob matches
armada_pulsar.bos:    set ARMORED to 0;
armada_pulsar.bos:    set ARMORED to 1;
armada_aircraftplant.bos:      set YARD_OPEN to 1;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 1;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set YARD_OPEN to 0;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 0;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set INBUILDSTANCE to 1;
armada_aircraftplant.bos:      set INBUILDSTANCE to 0;
Binary file armada_shellshocker.cob matches
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 100;
Binary file armada_radarjammerbot.cob matches
armada_advancedshipyard.bos:     set YARD_OPEN to 1;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 1;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set YARD_OPEN to 0;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 0;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 1;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 0;
Binary file armada_moray.cob matches
armada_advancedvehicleplant.bos:     set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 1;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 0;
Binary file armada_titan.cob matches
Binary file armada_dreadnought.cob matches
armada_beaver.bos:  set INBUILDSTANCE to 0;
armada_beaver.bos:  set INBUILDSTANCE to 1;
Binary file armada_roughneck.cob matches
Binary file armada_bull.cob matches
armada_constructionaircraft.bos:      set INBUILDSTANCE to 1;
armada_constructionaircraft.bos:      set INBUILDSTANCE to 0;
Binary file armada_haven.cob matches
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 0;
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 1;
Binary file armada_constructionhovercraft.cob matches
Binary file armada_chainsaw.cob matches
armada_constructionbot.bos:      set INBUILDSTANCE to 0;
armada_constructionbot.bos:      set INBUILDSTANCE to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 1;
Binary file armada_dragonsclaw.cob matches
armada_commander.bos:     set INBUILDSTANCE to 1;
armada_commander.bos:     set INBUILDSTANCE to 0;
armada_commanderboss.bos: set INBUILDSTANCE to 1;
armada_commanderboss.bos: set INBUILDSTANCE to 0;
armada_consul.bos:  set INBUILDSTANCE to 1;
armada_consul.bos:  set INBUILDSTANCE to 0;
Binary file armada_turtle.cob matches
Binary file armada_paladin.cob matches
armada_constructionship.bos:      set INBUILDSTANCE to 0;
armada_constructionship.bos:      set INBUILDSTANCE to 1;
Binary file armada_constructionship.cob matches
armada_constructionseaplane.bos:     set INBUILDSTANCE to 1;
armada_constructionseaplane.bos:     set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 1;
Binary file armada_dolphin.cob matches
armada_decoyfusionreactor.bos:      set ARMORED to 1;
armada_decoyfusionreactor.bos:      set ARMORED to 0;
Binary file armada_paralyzer.cob matches
armada_epoch.bos:   set ARMORED to 1;
Binary file armada_epoch.cob matches
armada_butler.bos:    set INBUILDSTANCE to 0;
armada_butler.bos:    set INBUILDSTANCE to 1;
Binary file armada_sprinter.cob matches
Binary file armada_rover.cob matches
Binary file armada_fatboy.cob matches
armada_ferret.bos:  set ARMORED to 0;
armada_ferret.bos:  set ARMORED to 1;
Binary file armada_ferret.cob matches
Binary file armada_navalarbalest.cob matches
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 1;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 0;
Binary file armada_hound.cob matches
Binary file armada_arbalest.cob matches
Binary file armada_blitz.cob matches
Binary file armada_tick.cob matches
Binary file armada_navalnettle.cob matches
armada_fusionreactor.bos:     set ARMORED to 1;
armada_fusionreactor.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 1;
Binary file armada_gunplatform.cob matches
Binary file armada_gremlin.cob matches
Binary file armada_mace.cob matches
armada_hovercraftplatform.bos:      set YARD_OPEN to 1;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 1;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set YARD_OPEN to 0;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 0;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 1;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 0;
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 100;
Binary file armada_janus.cob matches
Binary file armada_crossbow.cob matches
Binary file armada_juno.cob matches
Binary file armada_banshee.cob matches
armada_botlab.bos:     set YARD_OPEN to 1;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 1;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set YARD_OPEN to 0;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 0;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set INBUILDSTANCE to 1;
armada_botlab.bos:     set INBUILDSTANCE to 0;
Binary file armada_jaguar.cob matches
Binary file armada_lunkhead.cob matches
Binary file armada_starlight.cob matches
Binary file armada_marauder.cob matches
fgrep: armada_marauder_lus: Is a directory
Binary file armada_compass.cob matches
Binary file armada_mauser.cob matches
Binary file armada_gunslinger.cob matches
armada_mercury.bos: set DELAY_UNIT_VAR to 0;
Binary file armada_mercury.cob matches
armada_ambassador.bos:    set ARMORED to 1;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:    set-signal-mask SIG_RESTORE;
Binary file armada_ambassador.cob matches
armada_possum.bos:      set-signal-mask SIG_RESTORE;
Binary file armada_possum.cob matches
armada_voyager.bos:     set INBUILDSTANCE to 1;
armada_voyager.bos:     set INBUILDSTANCE to 0;
Binary file armada_voyager.cob matches
armada_groundhog.bos:     set INBUILDSTANCE to 1;
armada_groundhog.bos:     set INBUILDSTANCE to 0;
armada_advancedenergyconverter.bos:    set ARMORED to 0; //Not needed as MM in BAR have no damage modif
yer tag set
armada_advancedenergyconverter.bos:    set ARMORED to 1;
Binary file armada_longbow.cob matches
armada_constructionturret.bos:  set INBUILDSTANCE to 1;
armada_constructionturret.bos:  set INBUILDSTANCE to 0;
Binary file armada_constructionturret.cob matches
armada_navalconstructionturret.bos:      set INBUILDSTANCE to 1;
armada_navalconstructionturret.bos:      set INBUILDSTANCE to 0;
Binary file armada_navalconstructionturret.cob matches
armada_pitbull.bos:      set ARMORED to 0;
armada_pitbull.bos:      set ARMORED to 1;
armada_pitbull.bos:      set-signal-mask SIG_RESTORE;
Binary file armada_pitbull.cob matches
Binary file armada_pincer.cob matches
armada_seaplaneplatform.bos:    set ARMORED to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
armada_seaplaneplatform.bos:    set YARD_OPEN to 1;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 1;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set YARD_OPEN to 0;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 0;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 1;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
Binary file armada_ellysaw.cob matches
Binary file armada_skater.cob matches
Binary file armada_harpoon2.cob matches
armada_pawn.bos:              bAnimate = TRUE; // this sets animation started, so that
 StopAnimate knows that it should restore state quickly
Binary file armada_pawn.cob matches
armada_grimreaper.bos:    set INBUILDSTANCE to 1;
armada_grimreaper.bos:    set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 1;
armrectrt4.bos: set INBUILDSTANCE to 0;
armrectrt4.bos: set INBUILDSTANCE to 1;
Binary file armada_nettle.cob matches
Binary file armada_rocketeer.cob matches
Binary file armada_corsair.cob matches
Binary file armada_sabre.cob matches
Binary file armada_whistler.cob matches
Binary file armada_tsunami.cob matches
Binary file armada_umbrella.cob matches
Binary file armada_serpent.cob matches
Binary file armada_seeker.cob matches
armada_experimentalgantry.bos:   set YARD_OPEN to 1;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 1;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set YARD_OPEN to 0;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 0;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 1;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 0;
Binary file armada_armageddon.cob matches
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 100;
Binary file armada_bermuda.cob matches
Binary file armada_sharpshooter.cob matches
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 1;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 0;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:   set ARMORED to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:   set ARMORED to 1;
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 100;
Binary file armada_webber.cob matches
Binary file armada_recluse.cob matches
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:     set INBUILDSTANCE to 1;
armada_ghost.bos:     set INBUILDSTANCE to 0;
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:             set ACTIVATION to 100;
Binary file armada_stout.cob matches
Binary file armada_eel.cob matches
armada_shipyard.bos:      set YARD_OPEN to 1;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 1;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set YARD_OPEN to 0;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 0;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set INBUILDSTANCE to 1;
armada_shipyard.bos:      set INBUILDSTANCE to 0;
armada_pinpointer.bos:    set ARMORED to 1;
armada_pinpointer.bos:    set ACTIVATION to 0;
armada_pinpointer.bos:    set ACTIVATION to 1;
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           set BUSY to 0;
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           set BUSY to 0;
Binary file armada_bearer.cob matches
Binary file armada_harpoon.cob matches
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           set BUSY to 0;
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           set BUSY to 0;
Binary file armada_convoy.cob matches
Binary file armada_vanguard.cob matches
armada_vehicleplant.bos:      set ARMORED to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
armada_vehicleplant.bos:      set YARD_OPEN to 1;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 1;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set YARD_OPEN to 0;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 0;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set INBUILDSTANCE to 1;
armada_vehicleplant.bos:      set INBUILDSTANCE to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
Binary file armada_centurion.cob matches
armada_windturbine.bos:                     set ACTIVATION to 100;
armada_windturbine.bos:             set ACTIVATION to 0;
armada_windturbine.bos:             set ACTIVATION to 100;
Binary file armada_windturbine.cob matches
Binary file armada_shredder.cob matches
Binary file armada_welder.cob matches
Binary file cob_file.pyc matches
constants.h:#define BUGGER_OFF          19  // set or get (ask other units to cl
ear the area)
constants.h:#define CHANGE_TARGET             98 // set, the value it's set to d
etermines the affected weapon
cortex_advancedaircraftplant.bos:     set YARD_OPEN to 1;
cortex_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
cortex_advancedaircraftplant.bos:             set YARD_OPEN to 1;
cortex_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
cortex_advancedaircraftplant.bos:     set YARD_OPEN to 0;
cortex_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
cortex_advancedaircraftplant.bos:             set YARD_OPEN to 0;
cortex_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
cortex_advancedaircraftplant.bos:     set INBUILDSTANCE to 1;
cortex_advancedaircraftplant.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 1;
cortex_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionbot.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionbot.bos:     set INBUILDSTANCE to 1;
cortex_advancedconstructionsub.bos:   set INBUILDSTANCE to 0;
cortex_advancedconstructionsub.bos:   set INBUILDSTANCE to 1;
cortex_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 0;
cortex_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 1;
Binary file cortex_advancedconstructionvehicle.cob matches
cortex_advancedsolarcollector.bos:/*    57:*/       set ARMORED to 0;
cortex_advancedsolarcollector.bos:/*    5f:*/       set ARMORED to 1;
cortex_advancedsolarcollector.bos:/*    7d:*/       set ACTIVATION to 0;
cortex_advancedsolarcollector.bos:/*    85:*/       set ACTIVATION to 100;
cortex_advancedfusionreactor.bos:/*    b0:*/ set ARMORED to 1;
cortex_advancedfusionreactor.bos:/*    ba:*/ set ARMORED to 0;
Binary file cortex_birdeater.cob matches
Binary file cortex_grunt.cob matches
Binary file cortex_duck.cob matches
cortex_amphibiouscomplex.bos:/*    87:*/        set YARD_OPEN to 1;
cortex_amphibiouscomplex.bos:/*    92:*/                set BUGGER_OFF to 1;
cortex_amphibiouscomplex.bos:/*    9a:*/                set YARD_OPEN to 1;
cortex_amphibiouscomplex.bos:/*    a1:*/        set BUGGER_OFF to 0;
cortex_amphibiouscomplex.bos:/*    a9:*/        set YARD_OPEN to 0;
cortex_amphibiouscomplex.bos:/*    b3:*/                set BUGGER_OFF to 1;
cortex_amphibiouscomplex.bos:/*    bb:*/                set YARD_OPEN to 0;
cortex_amphibiouscomplex.bos:/*    c2:*/        set BUGGER_OFF to 0;
cortex_amphibiouscomplex.bos:/*    d0:*/        set INBUILDSTANCE to 1;
cortex_amphibiouscomplex.bos:/*    d8:*/        set INBUILDSTANCE to 0;
cortex_aircraftplant.bos:/*   17e:*/   set YARD_OPEN to 1;
cortex_aircraftplant.bos:/*   189:*/           set BUGGER_OFF to 1;
cortex_aircraftplant.bos:/*   191:*/           set YARD_OPEN to 1;
cortex_aircraftplant.bos:/*   198:*/   set BUGGER_OFF to 0;
cortex_aircraftplant.bos:/*   1a0:*/   set YARD_OPEN to 0;
cortex_aircraftplant.bos:/*   1aa:*/           set BUGGER_OFF to 1;
cortex_aircraftplant.bos:/*   1b2:*/           set YARD_OPEN to 0;
cortex_aircraftplant.bos:/*   1b9:*/   set BUGGER_OFF to 0;
cortex_aircraftplant.bos:/*   1d5:*/   set INBUILDSTANCE to 1;
cortex_aircraftplant.bos:/*   1dd:*/   set INBUILDSTANCE to 0;
Binary file cortex_arrowstorm.cob matches
cortex_advancedshipyard.bos:     set YARD_OPEN to 1;
cortex_advancedshipyard.bos:             set BUGGER_OFF to 1;
cortex_advancedshipyard.bos:             set YARD_OPEN to 1;
cortex_advancedshipyard.bos:     set BUGGER_OFF to 0;
cortex_advancedshipyard.bos:     set YARD_OPEN to 0;
cortex_advancedshipyard.bos:             set BUGGER_OFF to 1;
cortex_advancedshipyard.bos:             set YARD_OPEN to 0;
cortex_advancedshipyard.bos:     set BUGGER_OFF to 0;
cortex_advancedshipyard.bos:     set INBUILDSTANCE to 1;
cortex_advancedshipyard.bos:     set INBUILDSTANCE to 0;
cortex_advancedshipyarde.bos:    set YARD_OPEN to 1;
cortex_advancedshipyarde.bos:            set BUGGER_OFF to 1;
cortex_advancedshipyarde.bos:            set YARD_OPEN to 1;
cortex_advancedshipyarde.bos:    set BUGGER_OFF to 0;
cortex_advancedshipyarde.bos:    set YARD_OPEN to 0;
cortex_advancedshipyarde.bos:            set BUGGER_OFF to 1;
cortex_advancedshipyarde.bos:            set YARD_OPEN to 0;
cortex_advancedshipyarde.bos:    set BUGGER_OFF to 0;
cortex_advancedshipyarde.bos:    set INBUILDSTANCE to 1;
cortex_advancedshipyarde.bos:    set INBUILDSTANCE to 0;
cortex_advancedvehicleplant.bos:     set YARD_OPEN to 1;
cortex_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
cortex_advancedvehicleplant.bos:             set YARD_OPEN to 1;
cortex_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
cortex_advancedvehicleplant.bos:     set YARD_OPEN to 0;
cortex_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
cortex_advancedvehicleplant.bos:             set YARD_OPEN to 0;
cortex_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
cortex_advancedvehicleplant.bos:     set INBUILDSTANCE to 1;
cortex_advancedvehicleplant.bos:     set INBUILDSTANCE to 0;
Binary file cortex_banisher.cob matches
Binary file cortex_despot.cob matches
cortex_cerberus.bos:   set ACTIVATION to 100;
cortex_cerberus.bos:   set ACTIVATION to 0;
cortex_blackhydra.bos: set ARMORED to 1;
Binary file cortex_blackhydra.cob matches
cortex_shuriken.bos:                      set UNKNOWN_UNIT_VALUE(82) to 0 - 1500 + get UNK
NOWN_UNIT_VALUE(82);
cortex_shuriken.bos:                      set UNKNOWN_UNIT_VALUE(82) to 1500 + get UNKNOWN
_UNIT_VALUE(82);
cortex_constructionaircraft.bos:      set INBUILDSTANCE to 1;
cortex_constructionaircraft.bos:      set INBUILDSTANCE to 0;
Binary file cortex_sumo.cob matches
Binary file cortex_oasis.cob matches
Binary file cortex_catapult.cob matches
cortex_constructionhovercraft.bos:      set INBUILDSTANCE to 0;
cortex_constructionhovercraft.bos:      set INBUILDSTANCE to 1;
Binary file cortex_constructionhovercraft.cob matches
cortex_constructionbot.bos:      set INBUILDSTANCE to 0;
cortex_constructionbot.bos:      set INBUILDSTANCE to 1;
cortex_commander.bos:     set INBUILDSTANCE to 1;
cortex_commander.bos:     set INBUILDSTANCE to 0;
cortex_commanderboss.bos: set INBUILDSTANCE to 1;
cortex_commanderboss.bos: set INBUILDSTANCE to 0;
Binary file cortex_trasher.cob matches
Binary file cortex_buccaneer.cob matches
Binary file cortex_dragonold.cob matches
cortex_constructionship.bos:      set INBUILDSTANCE to 1;
cortex_constructionship.bos:      set INBUILDSTANCE to 0;
cortex_constructionseaplane.bos:     set INBUILDSTANCE to 1;
cortex_constructionseaplane.bos:     set INBUILDSTANCE to 0;
Binary file cortex_cutlass.cob matches
cortex_constructionvehicle.bos:      set INBUILDSTANCE to 0;
cortex_constructionvehicle.bos:      set INBUILDSTANCE to 1;
cortex_calamity.bos:    set ARMORED to 0;
cortex_calamity.bos:    set ARMORED to 1;
Binary file cortex_navalbirdshot.cob matches
cortex_eradicator.bos:            set CHANGE_TARGET to 1;
Binary file cortex_eradicator.cob matches
Binary file cortex_supporter.cob matches
cortex_obscurer.bos:            set ACTIVATION to 0;
cortex_obscurer.bos:            set ACTIVATION to 0;
cortex_obscurer.bos:            set ACTIVATION to 100;
Binary file cortex_exploiter.cob matches
cortex_twitcher.bos:    set INBUILDSTANCE to 1;
cortex_twitcher.bos:    set INBUILDSTANCE to 0;
Binary file cortex_rascal.cob matches
cortex_navalhovercraftplatform.bos:/*   162:*/  set YARD_OPEN to 1;
cortex_navalhovercraftplatform.bos:/*   16d:*/          set BUGGER_OFF to 1;
cortex_navalhovercraftplatform.bos:/*   175:*/          set YARD_OPEN to 1;
cortex_navalhovercraftplatform.bos:/*   17c:*/  set BUGGER_OFF to 0;
cortex_navalhovercraftplatform.bos:/*   184:*/  set YARD_OPEN to 0;
cortex_navalhovercraftplatform.bos:/*   18e:*/          set BUGGER_OFF to 1;
cortex_navalhovercraftplatform.bos:/*   196:*/          set YARD_OPEN to 0;
cortex_navalhovercraftplatform.bos:/*   19d:*/  set BUGGER_OFF to 0;
cortex_navalhovercraftplatform.bos:/*   1bb:*/  set INBUILDSTANCE to 1;
cortex_navalhovercraftplatform.bos:/*   1c3:*/  set INBUILDSTANCE to 0;
Binary file corflak.cob matches
cortex_navalenergyconverter.bos:                    set ACTIVATION to 1;
cortex_navalenergyconverter.bos:                    set ACTIVATION to 0;
Binary file cortex_janitor.cob matches
Binary file cortex_slingshot.cob matches
cortex_experimentalgantry.bos:    set YARD_OPEN to 1;
cortex_experimentalgantry.bos:            set BUGGER_OFF to 1;
cortex_experimentalgantry.bos:            set YARD_OPEN to 1;
cortex_experimentalgantry.bos:    set BUGGER_OFF to 0;
cortex_experimentalgantry.bos:    set YARD_OPEN to 0;
cortex_experimentalgantry.bos:            set BUGGER_OFF to 1;
cortex_experimentalgantry.bos:            set YARD_OPEN to 0;
cortex_experimentalgantry.bos:    set BUGGER_OFF to 0;
cortex_experimentalgantry.bos:    set INBUILDSTANCE to 1;
cortex_experimentalgantry.bos:    set INBUILDSTANCE to 0;
Binary file cortex_garpike.cob matches
Binary file cortex_incisor.cob matches
Binary file cortex_tzar.cob matches
Binary file cortex_halberd.cob matches
cortex_hovercraftplatform.bos:/*   162:*/   set YARD_OPEN to 1;
cortex_hovercraftplatform.bos:/*   16d:*/           set BUGGER_OFF to 1;
cortex_hovercraftplatform.bos:/*   175:*/           set YARD_OPEN to 1;
cortex_hovercraftplatform.bos:/*   17c:*/   set BUGGER_OFF to 0;
cortex_hovercraftplatform.bos:/*   184:*/   set YARD_OPEN to 0;
cortex_hovercraftplatform.bos:/*   18e:*/           set BUGGER_OFF to 1;
cortex_hovercraftplatform.bos:/*   196:*/           set YARD_OPEN to 0;
cortex_hovercraftplatform.bos:/*   19d:*/   set BUGGER_OFF to 0;
cortex_hovercraftplatform.bos:/*   1bb:*/   set INBUILDSTANCE to 1;
cortex_hovercraftplatform.bos:/*   1c3:*/   set INBUILDSTANCE to 0;
Binary file cortex_arbiter.cob matches
cortex_intruder.bos:    set ARMORED to 1;
cortex_intruder.bos:            set BUSY to 1;
cortex_intruder.bos:            set BUSY to 0;
cortex_intruder.bos:    set BUSY to 1;
cortex_intruder.bos:    set BUSY to 0;
cortex_behemoth.bos:    set CHANGE_TARGET to 2;
cortex_behemoth.bos:    set CHANGE_TARGET to 3;
cortex_behemoth.bos:    set CHANGE_TARGET to 4;
Binary file cortex_behemoth.cob matches
cortex_behemoth.lua_old:        SetSignalMask( SIG_stop )
Binary file cortex_juno.cob matches
cortex_karganeth.lua_old:        SetSignalMask(SIG_RESTORE)
cortex_juggernaut.bos:    set ARMORED to 1;
cortex_juggernaut.bos:    set-signal-mask SIG_FOOTSTOMP_L;
cortex_juggernaut.bos:    set-signal-mask SIG_FOOTSTOMP_R;
Binary file cortex_juggernaut.cob matches
Binary file cortex_pounder.cob matches
Binary file cortex_saviour.cob matches
cortex_energyconverter.bos:                            set ACTIVATION to 1;
cortex_energyconverter.bos:                            set ACTIVATION to 0;
cortex_commando.bos:   set INBUILDSTANCE to 0;
cortex_commando.bos:   set INBUILDSTANCE to 1;
Binary file cortex_quaker.cob matches
cortex_dragonsmaw.bos:     set ARMORED to 0;
cortex_dragonsmaw.bos:     set ARMORED to 1;
Binary file cortex_dragonsmaw.cob matches
cortex_metalextractor.bos:     set ARMORED to 0;
cortex_metalextractor.bos:     set ARMORED to 1;
cortex_advancedexploiter.bos:    set ARMORED to 0;
cortex_advancedexploiter.bos:    set ARMORED to 1;
cortex_advancedexploiter.bos:    set ACTIVATION to 100;
cortex_advancedexploiter.bos:            set ACTIVATION to 0;
cortex_advancedexploiter.bos:    set ARMORED to 0;
Binary file cortex_advancedexploiter.cob matches
cortex_mangonel.bos:      set-signal-mask SIG_RESTORE;
Binary file cortex_mangonel.cob matches
Binary file cortex_lasher.cob matches
cortex_pathfinder.bos:     set INBUILDSTANCE to 1;
cortex_pathfinder.bos:     set INBUILDSTANCE to 0;
cortex_trapper.bos:     set INBUILDSTANCE to 0;
cortex_trapper.bos:     set INBUILDSTANCE to 1;
cortex_advancedenergyconverter.bos:    set ARMORED to 0;  //Not needed as MM in BAR have no damage modi
fyer tag set
cortex_advancedenergyconverter.bos:    set ARMORED to 1;
cortex_advancedmetalextractor.bos:    set ARMORED to 0;
cortex_advancedmetalextractor.bos:    set ARMORED to 1;
cortex_advancedmetalextractor.bos:    set ARMORED to 1;
Binary file cortex_sheldon.cob matches
Binary file cortex_messenger.cob matches
cortex_muskrat.bos: set INBUILDSTANCE to 1;
cortex_muskrat.bos: set INBUILDSTANCE to 0;
cortex_muskrat.bos: set INBUILDSTANCE to 1;
cortex_constructionturret.bos:  set INBUILDSTANCE to 1;
cortex_constructionturret.bos:  set INBUILDSTANCE to 0;
Binary file cortex_constructionturret.cob matches
cortex_navalconstructionturret.bos:      set INBUILDSTANCE to 1;
cortex_navalconstructionturret.bos:      set INBUILDSTANCE to 0;
Binary file cortex_navalconstructionturret.cob matches
cortex_graverobber.bos:   set INBUILDSTANCE to 0;
cortex_graverobber.bos:   set INBUILDSTANCE to 1;
Binary file cortex_poisonarrow.cob matches
cortex_seaplaneplatform.bos:    set ARMORED to 0;
cortex_seaplaneplatform.bos:    set ARMORED to 1;
cortex_seaplaneplatform.bos:    set YARD_OPEN to 1;
cortex_seaplaneplatform.bos:            set BUGGER_OFF to 1;
cortex_seaplaneplatform.bos:            set YARD_OPEN to 1;
cortex_seaplaneplatform.bos:    set BUGGER_OFF to 0;
cortex_seaplaneplatform.bos:    set YARD_OPEN to 0;
cortex_seaplaneplatform.bos:            set BUGGER_OFF to 1;
cortex_seaplaneplatform.bos:            set YARD_OPEN to 0;
cortex_seaplaneplatform.bos:    set BUGGER_OFF to 0;
cortex_seaplaneplatform.bos:    set INBUILDSTANCE to 1;
cortex_seaplaneplatform.bos:    set INBUILDSTANCE to 0;
cortex_seaplaneplatform.bos:    set ARMORED to 1;
Binary file cortex_riptide.cob matches
Binary file cortex_herring.cob matches
Binary file cortex_fiend.cob matches
Binary file cortex_brute.cob matches
Binary file cortex_tiger.cob matches
cortex_deathcavalry.bos:    set INBUILDSTANCE to 1;
cortex_deathcavalry.bos:    set INBUILDSTANCE to 0;
Binary file cortex_thistle.cob matches
Binary file cortex_oppressor.cob matches
Binary file cortex_dambuster.cob matches
Binary file cortex_screamer.cob matches
Binary file cortex_alligator.cob matches
Binary file cortex_fury.cob matches
Binary file cortex_goon.cob matches
cortex_shiva.bos:   set ARMORED to 1;
cortex_shiva.bos:   set ARMORED to 0;
cortex_shiva.bos:   set ARMORED to 1;
Binary file cortex_shiva.cob matches
cortex_shiva.lua_old:       SetSignalMask( SIG_stop )
cortex_shiva.lua_old:       SetSignalMask( SIG_stop )
cortex_shroud.bos:/*    80:*/               set ACTIVATION to 0;
cortex_shroud.bos:/*   138:*/               set ACTIVATION to 0;
cortex_shroud.bos:/*   144:*/               set ACTIVATION to 100;
Binary file cortex_apocalypse.cob matches
cortex_phantasm.bos:            set ACTIVATION to 0;
cortex_phantasm.bos:            set ACTIVATION to 0;
cortex_phantasm.bos:            set ACTIVATION to 100;
Binary file cortex_cayman.cob matches
Binary file cortex_cataphract.cob matches
cortex_solarcollector.bos:   set YARD_OPEN to 1;
cortex_solarcollector.bos:           set BUGGER_OFF to 1;
cortex_solarcollector.bos:           set YARD_OPEN to 1;
cortex_solarcollector.bos:   set BUGGER_OFF to 0;
cortex_solarcollector.bos:   set YARD_OPEN to 0;
cortex_solarcollector.bos:           set BUGGER_OFF to 1;
cortex_solarcollector.bos:           set YARD_OPEN to 0;
cortex_solarcollector.bos:   set BUGGER_OFF to 0;
cortex_solarcollector.bos:   set ACTIVATION to 100;
cortex_solarcollector.bos:           set ACTIVATION to 0;
cortex_solarcollector.bos:   set ARMORED to 0;
cortex_solarcollector.bos:   set ARMORED to 1;
cortex_solarcollector.bos:           set ACTIVATION to 0;
cortex_solarcollector.bos:           set ACTIVATION to 100;
cortex_deceiver.bos:            set ACTIVATION to 0;
cortex_deceiver.bos:            set ACTIVATION to 0;
cortex_deceiver.bos:            set ACTIVATION to 100;
Binary file cortex_deceiver.cob matches
cortex_spectre.bos:     set INBUILDSTANCE to 1;
cortex_spectre.bos:     set INBUILDSTANCE to 0;
Binary file cortex_aggravator.cob matches
Binary file cortex_mammoth.cob matches
cortex_mammoth.lua_old:    SetSignalMask(SIG_RESTORE)
cortex_shipyard.bos:      set YARD_OPEN to 1;
cortex_shipyard.bos:              set BUGGER_OFF to 1;
cortex_shipyard.bos:              set YARD_OPEN to 1;
cortex_shipyard.bos:      set BUGGER_OFF to 0;
cortex_shipyard.bos:      set YARD_OPEN to 0;
cortex_shipyard.bos:              set BUGGER_OFF to 1;
cortex_shipyard.bos:              set YARD_OPEN to 0;
cortex_shipyard.bos:      set BUGGER_OFF to 0;
cortex_shipyard.bos:      set INBUILDSTANCE to 1;
cortex_shipyard.bos:      set INBUILDSTANCE to 0;
cortex_pinpointer.bos:/*   1a6:*/ set ACTIVATION to 0;
cortex_pinpointer.bos:/*   1ae:*/ set ACTIVATION to 1;
Binary file cortex_termite.cob matches
cortex_caravan.bos:           set BUSY to 1;
cortex_caravan.bos:           set BUSY to 0;
cortex_caravan.bos:           set BUSY to 1;
cortex_caravan.bos:           set BUSY to 0;
Binary file cortex_caravan.cob matches
Binary file cortex_thug.cob matches
cortex_persecutor.bos:   set ARMORED to 0;
cortex_persecutor.bos:   set ARMORED to 1;
Binary file cortex_persecutor.cob matches
Binary file cortex_tremor.cob matches
Binary file cortex_catalyst.cob matches
cortex_coffin.bos:           set BUSY to 1;
cortex_coffin.bos:           set BUSY to 0;
cortex_coffin.bos:           set BUSY to 1;
cortex_coffin.bos:           set BUSY to 0;
Binary file cortex_coffin.cob matches
cortex_navaladvancedmetalextractor.bos:   set ARMORED to 0;
cortex_navaladvancedmetalextractor.bos:   set ARMORED to 1;
cortex_navaladvancedmetalextractor.bos:   set ARMORED to 1;
Binary file cortex_augur.cob matches
cortex_vehicleplant.bos:      set YARD_OPEN to 1;
cortex_vehicleplant.bos:              set BUGGER_OFF to 1;
cortex_vehicleplant.bos:              set YARD_OPEN to 1;
cortex_vehicleplant.bos:      set BUGGER_OFF to 0;
cortex_vehicleplant.bos:      set YARD_OPEN to 0;
cortex_vehicleplant.bos:              set BUGGER_OFF to 1;
cortex_vehicleplant.bos:              set YARD_OPEN to 0;
cortex_vehicleplant.bos:      set BUGGER_OFF to 0;
cortex_vehicleplant.bos:      set INBUILDSTANCE to 1;
cortex_vehicleplant.bos:      set INBUILDSTANCE to 0;
cortex_negotiator.bos:    set-signal-mask SIG_RESTORE;
Binary file cortex_negotiator.cob matches
cortex_windturbine.bos:                     set ACTIVATION to 100;
cortex_windturbine.bos:             set ACTIVATION to 0;
cortex_windturbine.bos:             set ACTIVATION to 100;
Binary file cortex_windturbine.cob matches
Binary file cortex_wolverine.cob matches
exptype.h:#define BUGGER_OFF          19  // set or get (ask other units to clea
r the area)
exptype.h:#define CHANGE_TARGET             98 // set, the value it's set to det
ermines the affected weapon
Binary file fgrep.exe matches
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 1;
meteor.bos:     set ARMORED to 0;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 0;
fgrep: New folder: Is a directory
roost.bos:      set ARMORED to 0;
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
standard_commands_gpl.h:#define BUGGER_OFF              19      // set or get (a
sk other units to clear the area)
yard.h: set YARD_OPEN to TRUE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to TRUE;
yard.h: set BUGGER_OFF to FALSE;
yard.h: set YARD_OPEN to FALSE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to FALSE;
yard.h: set BUGGER_OFF to FALSE;

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>