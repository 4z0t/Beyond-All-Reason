Binary file armada_sweeper.cob matches
armada_advancedbotlab.bos:    set YARD_OPEN to 1;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 1;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set YARD_OPEN to 0;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 0;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 1;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 0;
armada_advancedbotlab.bos:    set-signal-mask SIG_ACTIVATE;
armada_advancedbotlab.bos:    set-signal-mask 0;
armada_advancedbotlab.bos:Killed(severity, corpsetype)
armada_advancedbotlab.bos:            corpsetype = 1 ;
armada_advancedbotlab.bos:            return(corpsetype);
armada_advancedbotlab.bos:            corpsetype = 2 ;
armada_advancedbotlab.bos:            return(corpsetype);
armada_advancedbotlab.bos:            corpsetype = 3 ;
armada_advancedbotlab.bos:            return(corpsetype);
armada_advancedbotlab.bos:    corpsetype = 3 ;
armada_advancedbotlab.bos:    return corpsetype;
armada_rattlesnake.bos:     set ARMORED to 0;
armada_rattlesnake.bos:     set ARMORED to 1;
armada_rattlesnake.bos:     set-signal-mask 0;
armada_rattlesnake.bos:SetStunned(State)
armada_rattlesnake.bos:     set-signal-mask SIG_AIM;
armada_rattlesnake.bos:     set-signal-mask 2;
armada_rattlesnake.bos:/*SetMaxReloadTime(Func_Var_1)
armada_rattlesnake.bos:Killed(severity, corpsetype)
armada_rattlesnake.bos:             corpsetype = 1 ;
armada_rattlesnake.bos:             return(corpsetype);
armada_rattlesnake.bos:             corpsetype = 2 ;
armada_rattlesnake.bos:             return(corpsetype);
armada_rattlesnake.bos:             corpsetype = 3 ;
armada_rattlesnake.bos:             return(corpsetype);
armada_rattlesnake.bos:     corpsetype = 3 ;
armada_rattlesnake.bos:     return corpsetype;
Binary file armada_rattlesnake.cob matches
armada_citadel.bos:// OffsetToScriptCodeIndexArray        f64
armada_citadel.bos:// OffsetToScriptNameOffsetArray       fa8
armada_citadel.bos:// OffsetToPieceNameOffsetArray        fec
armada_citadel.bos:// OffsetToScriptCode                  2c
armada_citadel.bos:// OffsetToNameArray                   1010
armada_citadel.bos:// OffsetToFirstName                   1010
armada_citadel.bos:SetMaxReloadTime(Func_Var_1)
armada_citadel.bos:/*   1d4:*/  set-signal-mask SIG_AIM;
armada_citadel.bos:Killed(severity, corpsetype)
armada_citadel.bos:/*   271:*/          corpsetype = 1;
armada_citadel.bos:/*   2b4:*/          return (corpsetype);
armada_citadel.bos:/*   2be:*/          corpsetype = 2;
armada_citadel.bos:/*   301:*/          return (corpsetype);
armada_citadel.bos:/*   30b:*/          corpsetype = 3;
armada_citadel.bos:/*   369:*/          return (corpsetype);
armada_citadel.bos:/*   36c:*/  corpsetype = 3;
armada_citadel.bos:/*   3cd:*/  return (corpsetype);
Binary file armada_citadel.cob matches
armada_twilight.bos:    set ARMORED to 0;
armada_twilight.bos:    set ARMORED to 1;
armada_twilight.bos:SetStunned(State)
armada_twilight.bos:SetSpeed(Func_Var_1)
armada_twilight.bos:    set-signal-mask 2;
armada_twilight.bos:    set ACTIVATION to 0;
armada_twilight.bos:    set ACTIVATION to 100;
armada_twilight.bos:Killed(severity, corpsetype)
armada_twilight.bos:            corpsetype = 1 ;
armada_twilight.bos:            return(corpsetype);
armada_twilight.bos:            corpsetype = 2 ;
armada_twilight.bos:            return(corpsetype);
armada_twilight.bos:            corpsetype = 3 ;
armada_twilight.bos:            return(corpsetype);
armada_twilight.bos:    corpsetype = 3 ;
armada_twilight.bos:    return corpsetype;
Binary file armada_twilight.cob matches
armada_amphibiousbot.bos:    set-signal-mask SIG_MOVE;
armada_amphibiousbot.bos:setSFXoccupy(Func_Var_1)
armada_amphibiousbot.bos:SetMaxReloadTime(Func_Var_1)
armada_amphibiousbot.bos:    set-signal-mask 0;
armada_amphibiousbot.bos:SetStunned(State)
armada_amphibiousbot.bos:    set-signal-mask SIG_AIM;
armada_amphibiousbot.bos:Killed(severity, corpsetype)
armada_amphibiousbot.bos:            corpsetype = 1 ;
armada_amphibiousbot.bos:            return(corpsetype);
armada_amphibiousbot.bos:            corpsetype = 2 ;
armada_amphibiousbot.bos:            return(corpsetype);
armada_amphibiousbot.bos:            corpsetype = 3 ;
armada_amphibiousbot.bos:            return(corpsetype);
armada_amphibiousbot.bos:    corpsetype = 3 ;
armada_amphibiousbot.bos:    return corpsetype;
Binary file armada_amphibiousbot.cob matches
armada_amphibiouscomplex.bos:   set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 1;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 0;
armada_amphibiouscomplex.bos:   set-signal-mask SIG_ACTIVATE;
armada_amphibiouscomplex.bos:   set-signal-mask 0;
armada_amphibiouscomplex.bos:Killed(severity, corpsetype)
armada_amphibiouscomplex.bos:           corpsetype = 1 ;
armada_amphibiouscomplex.bos:           return(corpsetype);
armada_amphibiouscomplex.bos:           corpsetype = 2 ;
armada_amphibiouscomplex.bos:           return(corpsetype);
armada_amphibiouscomplex.bos:           corpsetype = 3 ;
armada_amphibiouscomplex.bos:           return(corpsetype);
armada_amphibiouscomplex.bos:   corpsetype = 3 ;
armada_amphibiouscomplex.bos:   return corpsetype;
armada_crocodile.bos:            // Set values for tilt
armada_crocodile.bos:    set-signal-mask SIG_MOVE;
armada_crocodile.bos:setSFXoccupy(Func_Var_1)
armada_crocodile.bos:SetMaxReloadTime(Func_Var_1)
armada_crocodile.bos:SetStunned(State)
armada_crocodile.bos:    set-signal-mask SIG_AIM;
armada_crocodile.bos:Killed(severity, corpsetype)
armada_crocodile.bos:            corpsetype = 1 ;
armada_crocodile.bos:            return(corpsetype);
armada_crocodile.bos:            corpsetype = 2 ;
armada_crocodile.bos:            return(corpsetype);
armada_crocodile.bos:            corpsetype = 3 ;
armada_crocodile.bos:            return(corpsetype);
armada_crocodile.bos:    corpsetype = 3 ;
armada_crocodile.bos:    return corpsetype;
Binary file armada_crocodile.cob matches
armada_pulsar.bos:    set ARMORED to 0;
armada_pulsar.bos:    set ARMORED to 1;
armada_pulsar.bos:SetMaxReloadTime(Func_Var_1)
armada_pulsar.bos:    set-signal-mask SIG_AIM;
armada_pulsar.bos:Killed(severity, corpsetype)
armada_pulsar.bos:            corpsetype = 1 ;
armada_pulsar.bos:            return(corpsetype);
armada_pulsar.bos:            corpsetype = 2 ;
armada_pulsar.bos:            return(corpsetype);
armada_pulsar.bos:            corpsetype = 3 ;
armada_pulsar.bos:            return(corpsetype);
armada_pulsar.bos:    corpsetype = 3 ;
armada_pulsar.bos:    return corpsetype;
Binary file armada_pulsar.cob matches
armada_aircraftplant.bos:      set YARD_OPEN to 1;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 1;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set YARD_OPEN to 0;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 0;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set INBUILDSTANCE to 1;
armada_aircraftplant.bos:      set INBUILDSTANCE to 0;
armada_aircraftplant.bos:      set-signal-mask SIG_ACTIVATE;
armada_aircraftplant.bos:      set-signal-mask 0;
armada_aircraftplant.bos:Killed(severity, corpsetype)
armada_aircraftplant.bos:              corpsetype = 1 ;
armada_aircraftplant.bos:              return(corpsetype);
armada_aircraftplant.bos:              corpsetype = 2 ;
armada_aircraftplant.bos:              return(corpsetype);
armada_aircraftplant.bos:              corpsetype = 3 ;
armada_aircraftplant.bos:              return(corpsetype);
armada_aircraftplant.bos:      corpsetype = 3 ;
armada_aircraftplant.bos:      return corpsetype;
armada_advancedradartower.bos:Killed(severity, corpsetype)
armada_advancedradartower.bos:            corpsetype = 1 ;
armada_advancedradartower.bos:            return(corpsetype);
armada_advancedradartower.bos:            corpsetype = 2 ;
armada_advancedradartower.bos:            return(corpsetype);
armada_advancedradartower.bos:            corpsetype = 3 ;
armada_advancedradartower.bos:            return(corpsetype);
armada_advancedradartower.bos:    corpsetype = 3 ;
armada_advancedradartower.bos:    return corpsetype;
armada_shellshocker.bos:SetMaxReloadTime(Func_Var_1)
armada_shellshocker.bos:SetStunned(State)
armada_shellshocker.bos:     set-signal-mask SIG_AIM;
armada_shellshocker.bos:Killed(severity, corpsetype)
armada_shellshocker.bos:             corpsetype = 1 ;
armada_shellshocker.bos:             return(corpsetype);
armada_shellshocker.bos:             corpsetype = 2 ;
armada_shellshocker.bos:             return(corpsetype);
armada_shellshocker.bos:             corpsetype = 3 ;
armada_shellshocker.bos:             return(corpsetype);
armada_shellshocker.bos:     corpsetype = 3 ;
armada_shellshocker.bos:     return corpsetype;
Binary file armada_shellshocker.cob matches
armada_radarjammerbot.bos:SetStunned(State)
armada_radarjammerbot.bos:    //set-signal-mask SIG_WALK;
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:    set-signal-mask SIG_ACTIVATE;
armada_radarjammerbot.bos:    set-signal-mask SIG_ACTIVATE;
armada_radarjammerbot.bos:            set-signal-mask 4;
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 100;
armada_radarjammerbot.bos:Killed(severity, corpsetype)
armada_radarjammerbot.bos:            corpsetype = 1 ;
armada_radarjammerbot.bos:            return(corpsetype);
armada_radarjammerbot.bos:            corpsetype = 2 ;
armada_radarjammerbot.bos:            return(corpsetype);
armada_radarjammerbot.bos:            corpsetype = 3 ;
armada_radarjammerbot.bos:            return(corpsetype);
armada_radarjammerbot.bos:    corpsetype = 3 ;
armada_radarjammerbot.bos:    return corpsetype;
Binary file armada_radarjammerbot.cob matches
armada_advancedsonarstation.bos:Killed(severity, corpsetype)
armada_advancedsonarstation.bos:            corpsetype = 1 ;
armada_advancedsonarstation.bos:            return(corpsetype);
armada_advancedsonarstation.bos:            corpsetype = 2 ;
armada_advancedsonarstation.bos:            return(corpsetype);
armada_advancedsonarstation.bos:            corpsetype = 3 ;
armada_advancedsonarstation.bos:            return(corpsetype);
armada_advancedsonarstation.bos:    corpsetype = 3 ;
armada_advancedsonarstation.bos:    return corpsetype;
armasp.bos:Killed(severity, corpsetype)
armasp.bos:             corpsetype = 1 ;
armasp.bos:             return(corpsetype);
armasp.bos:             corpsetype = 2 ;
armasp.bos:             return(corpsetype);
armasp.bos:             corpsetype = 3 ;
armasp.bos:             return(corpsetype);
armasp.bos:     corpsetype = 3 ;
armasp.bos:     return corpsetype;
armada_advancedshipyard.bos:     set YARD_OPEN to 1;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 1;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set YARD_OPEN to 0;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 0;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 1;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 0;
armada_advancedshipyard.bos:     set-signal-mask SIG_ACTIVATE;
armada_advancedshipyard.bos:     set-signal-mask 0;
armada_advancedshipyard.bos:Killed(severity, corpsetype)
armada_advancedshipyard.bos:             corpsetype = 1 ;
armada_advancedshipyard.bos:             return(corpsetype);
armada_advancedshipyard.bos:             corpsetype = 2 ;
armada_advancedshipyard.bos:             return(corpsetype);
armada_advancedshipyard.bos:             corpsetype = 3 ;
armada_advancedshipyard.bos:             return(corpsetype);
armada_advancedshipyard.bos:     corpsetype = 3 ;
armada_advancedshipyard.bos:     return corpsetype;
armada_moray.bos:SetStunned(State)
armada_moray.bos:     set-signal-mask SIG_AIM;
armada_moray.bos:Killed(severity, corpsetype)
armada_moray.bos:             corpsetype = 1 ;
armada_moray.bos:             return(corpsetype);
armada_moray.bos:             corpsetype = 2 ;
armada_moray.bos:             return(corpsetype);
armada_moray.bos:             corpsetype = 3 ;
armada_moray.bos:             return(corpsetype);
armada_moray.bos:     corpsetype = 3 ;
armada_moray.bos:     return corpsetype;
Binary file armada_moray.cob matches
armada_stork.bos:SetSFXOccupy(terraintype){
armada_stork.bos:Killed(severity, corpsetype)
armada_stork.bos:           corpsetype = 1;
armada_stork.bos:           return (corpsetype);
armada_stork.bos:           corpsetype = 2;
armada_stork.bos:           return (corpsetype);
armada_stork.bos:           corpsetype = 3;
armada_stork.bos:           return (corpsetype);
armada_stork.bos:   corpsetype = 3;
armada_stork.bos:   return corpsetype;
armada_advancedvehicleplant.bos:     set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 1;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 0;
armada_advancedvehicleplant.bos:     set-signal-mask SIG_ACTIVATE;
armada_advancedvehicleplant.bos:     set-signal-mask 0;
armada_advancedvehicleplant.bos:Killed(severity, corpsetype)
armada_advancedvehicleplant.bos:             corpsetype = 1 ;
armada_advancedvehicleplant.bos:             return(corpsetype);
armada_advancedvehicleplant.bos:             corpsetype = 2 ;
armada_advancedvehicleplant.bos:             return(corpsetype);
armada_advancedvehicleplant.bos:             corpsetype = 3 ;
armada_advancedvehicleplant.bos:             return(corpsetype);
armada_advancedvehicleplant.bos:     corpsetype = 3 ;
armada_advancedvehicleplant.bos:     return corpsetype;
armada_oracle.bos:Killed(severity, corpsetype)
armada_oracle.bos:            corpsetype = 1 ;
armada_oracle.bos:            return(corpsetype);
armada_oracle.bos:            corpsetype = 2 ;
armada_oracle.bos:            return(corpsetype);
armada_oracle.bos:            corpsetype = 3 ;
armada_oracle.bos:            return(corpsetype);
armada_oracle.bos:    corpsetype = 3 ;
armada_oracle.bos:    return corpsetype;
armada_titan.bos:SetMaxReloadTime(Func_Var_1)
armada_titan.bos:SetStunned(State)
armada_titan.bos:   set-signal-mask SIG_AIM;
armada_titan.bos:Killed(severity, corpsetype)
armada_titan.bos:           corpsetype = 1 ;
armada_titan.bos:           return(corpsetype);
armada_titan.bos:           corpsetype = 2 ;
armada_titan.bos:           return(corpsetype);
armada_titan.bos:           corpsetype = 3 ;
armada_titan.bos:           return(corpsetype);
armada_titan.bos:   corpsetype = 3 ;
armada_titan.bos:   return corpsetype;
Binary file armada_titan.cob matches
armada_dreadnought.bos:SetDirection(heading)
armada_dreadnought.bos:SetMaxReloadTime(Func_Var_1)
armada_dreadnought.bos:    set-signal-mask SIG_MOVE;
armada_dreadnought.bos:    set-signal-mask SIG_AIM;
armada_dreadnought.bos:    set-signal-mask SIG_AIM_2;
armada_dreadnought.bos:Killed(severity, corpsetype)
armada_dreadnought.bos:            corpsetype = 1 ;
armada_dreadnought.bos:            return(corpsetype);
armada_dreadnought.bos:            corpsetype = 2 ;
armada_dreadnought.bos:            return(corpsetype);
armada_dreadnought.bos:            corpsetype = 3 ;
armada_dreadnought.bos:            return(corpsetype);
armada_dreadnought.bos:    corpsetype = 3 ;
armada_dreadnought.bos:    return corpsetype;
Binary file armada_dreadnought.cob matches
armada_beamer.bos:  set-signal-mask SIG_AIM;
armada_beamer.bos:Killed(severity, corpsetype)
armada_beamer.bos:          corpsetype = 1 ;
armada_beamer.bos:          return(corpsetype);
armada_beamer.bos:          corpsetype = 2 ;
armada_beamer.bos:          return(corpsetype);
armada_beamer.bos:          corpsetype = 3 ;
armada_beamer.bos:          return(corpsetype);
armada_beamer.bos:  corpsetype = 3 ;
armada_beamer.bos:  return corpsetype;
armada_beaver.bos:  set INBUILDSTANCE to 0;
armada_beaver.bos:  set INBUILDSTANCE to 1;
armada_beaver.bos:  set-signal-mask SIG_BUILD;
armada_beaver.bos:  set-signal-mask 0;
armada_beaver.bos:Killed(severity, corpsetype)
armada_beaver.bos:          corpsetype = 1 ;
armada_beaver.bos:          return(corpsetype);
armada_beaver.bos:          corpsetype = 2 ;
armada_beaver.bos:          return(corpsetype);
armada_beaver.bos:          corpsetype = 3 ;
armada_beaver.bos:          return(corpsetype);
armada_beaver.bos:  corpsetype = 3 ;
armada_beaver.bos:  return corpsetype;
armada_hornet.bos:   set-signal-mask SIG_MOVE;
armada_hornet.bos:   set-signal-mask SIG_MOVE;
armada_hornet.bos:   set-signal-mask SIG_MOVE;
armada_hornet.bos:Killed(severity, corpsetype)
armada_hornet.bos:           corpsetype = 1 ;
armada_hornet.bos:           return(corpsetype);
armada_hornet.bos:           corpsetype = 2 ;
armada_hornet.bos:           return(corpsetype);
armada_hornet.bos:           corpsetype = 3 ;
armada_hornet.bos:           return(corpsetype);
armada_hornet.bos:   corpsetype = 3 ;
armada_hornet.bos:   return corpsetype;
armada_roughneck.bos:SetStunned(State)
armada_roughneck.bos:   set-signal-mask SIG_AIM;
armada_roughneck.bos:Killed(severity, corpsetype)
armada_roughneck.bos:           corpsetype = 1 ;
armada_roughneck.bos:           return(corpsetype);
armada_roughneck.bos:           corpsetype = 2 ;
armada_roughneck.bos:           return(corpsetype);
armada_roughneck.bos:           corpsetype = 3 ;
armada_roughneck.bos:           return(corpsetype);
armada_roughneck.bos:   corpsetype = 3 ;
armada_roughneck.bos:   return corpsetype;
Binary file armada_roughneck.cob matches
armada_basilica.bos:   set-signal-mask SIG_AIM;
armada_basilica.bos:Killed(severity, corpsetype)
armada_basilica.bos:           corpsetype = 1 ;
armada_basilica.bos:           return(corpsetype);
armada_basilica.bos:           corpsetype = 2 ;
armada_basilica.bos:           return(corpsetype);
armada_basilica.bos:           corpsetype = 3 ;
armada_basilica.bos:           return(corpsetype);
armada_basilica.bos:   corpsetype = 3 ;
armada_basilica.bos:   return corpsetype;
armada_bull.bos:setSFXoccupy(state)
armada_bull.bos:SetMaxReloadTime(Func_Var_1)
armada_bull.bos:    set-signal-mask 0;
armada_bull.bos:SetStunned(State)
armada_bull.bos:    set-signal-mask SIG_AIM;
armada_bull.bos:Killed(severity, corpsetype)
armada_bull.bos:            corpsetype = 1 ;
armada_bull.bos:            return(corpsetype);
armada_bull.bos:            corpsetype = 2 ;
armada_bull.bos:            return(corpsetype);
armada_bull.bos:            corpsetype = 3 ;
armada_bull.bos:            return(corpsetype);
armada_bull.bos:    corpsetype = 3 ;
armada_bull.bos:    return corpsetype;
Binary file armada_bull.cob matches
armada_constructionaircraft.bos:      set INBUILDSTANCE to 1;
armada_constructionaircraft.bos:      set-signal-mask SIG_BUILD;
armada_constructionaircraft.bos:      set-signal-mask 0;
armada_constructionaircraft.bos:      set INBUILDSTANCE to 0;
armada_constructionaircraft.bos:Killed(severity, corpsetype)
armada_constructionaircraft.bos:              corpsetype = 1 ;
armada_constructionaircraft.bos:              return(corpsetype);
armada_constructionaircraft.bos:              corpsetype = 2 ;
armada_constructionaircraft.bos:              return(corpsetype);
armada_constructionaircraft.bos:              corpsetype = 3 ;
armada_constructionaircraft.bos:              return(corpsetype);
armada_constructionaircraft.bos:      corpsetype = 3 ;
armada_constructionaircraft.bos:      return corpsetype;
armada_haven.bos:SetDirection(heading)
armada_haven.bos:   set-signal-mask 0;
armada_haven.bos:SetStunned(State)
armada_haven.bos:   set-signal-mask SIG_MOVE;
armada_haven.bos:   set-signal-mask SIG_AIM_2;
armada_haven.bos:Killed(severity, corpsetype)
armada_haven.bos:           corpsetype = 1 ;
armada_haven.bos:           return(corpsetype);
armada_haven.bos:           corpsetype = 2 ;
armada_haven.bos:           return(corpsetype);
armada_haven.bos:           corpsetype = 3 ;
armada_haven.bos:           return(corpsetype);
armada_haven.bos:   corpsetype = 3 ;
armada_haven.bos:   return corpsetype;
Binary file armada_haven.cob matches
armada_constructionhovercraft.bos:              // Set values for tilt
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 0;
armada_constructionhovercraft.bos:      set-signal-mask SIG_MOVE;
armada_constructionhovercraft.bos:setSFXoccupy(state)
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 1;
armada_constructionhovercraft.bos:      set-signal-mask SIG_BUILD;
armada_constructionhovercraft.bos:      set-signal-mask 0;
armada_constructionhovercraft.bos:Killed(severity, corpsetype)
armada_constructionhovercraft.bos:              corpsetype = 1 ;
armada_constructionhovercraft.bos:              return(corpsetype);
armada_constructionhovercraft.bos:              corpsetype = 2 ;
armada_constructionhovercraft.bos:              return(corpsetype);
armada_constructionhovercraft.bos:              corpsetype = 3 ;
armada_constructionhovercraft.bos:              return(corpsetype);
armada_constructionhovercraft.bos:      corpsetype = 3 ;
armada_constructionhovercraft.bos:      return corpsetype;
Binary file armada_constructionhovercraft.cob matches
armada_chainsaw.bos:SetStunned(State)
armada_chainsaw.bos:     set-signal-mask SIG_AIM;
armada_chainsaw.bos:Killed(severity, corpsetype)
armada_chainsaw.bos:             corpsetype = 1 ;
armada_chainsaw.bos:             return(corpsetype);
armada_chainsaw.bos:             corpsetype = 2 ;
armada_chainsaw.bos:             return(corpsetype);
armada_chainsaw.bos:             corpsetype = 3 ;
armada_chainsaw.bos:             return(corpsetype);
armada_chainsaw.bos:     corpsetype = 3 ;
armada_chainsaw.bos:     return corpsetype;
Binary file armada_chainsaw.cob matches
armada_constructionbot.bos:      set-signal-mask SIG_WALK;
armada_constructionbot.bos:      set INBUILDSTANCE to 0;
armada_constructionbot.bos:      set INBUILDSTANCE to 1;
armada_constructionbot.bos:      set-signal-mask SIG_BUILD;
armada_constructionbot.bos:      set-signal-mask 0;
armada_constructionbot.bos:Killed(severity, corpsetype)
armada_constructionbot.bos:              corpsetype = 1 ;
armada_constructionbot.bos:              return(corpsetype);
armada_constructionbot.bos:              corpsetype = 2 ;
armada_constructionbot.bos:              return(corpsetype);
armada_constructionbot.bos:              corpsetype = 3 ;
armada_constructionbot.bos:              return(corpsetype);
armada_constructionbot.bos:      corpsetype = 3 ;
armada_constructionbot.bos:      return corpsetype;
armada_cloakablefusionreactor.bos:   set ARMORED to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 0;
armada_cloakablefusionreactor.bos:Killed(severity, corpsetype)
armada_cloakablefusionreactor.bos:           corpsetype = 1 ;
armada_cloakablefusionreactor.bos:           return(corpsetype);
armada_cloakablefusionreactor.bos:           corpsetype = 2 ;
armada_cloakablefusionreactor.bos:           return(corpsetype);
armada_cloakablefusionreactor.bos:           corpsetype = 3 ;
armada_cloakablefusionreactor.bos:           return(corpsetype);
armada_cloakablefusionreactor.bos:   corpsetype = 3 ;
armada_cloakablefusionreactor.bos:   return corpsetype;
armada_dragonsclaw.bos:    set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 1;
armada_dragonsclaw.bos:    set-signal-mask 0;
armada_dragonsclaw.bos:SetStunned(State)
armada_dragonsclaw.bos:SetMaxReloadTime(Func_Var_1)
armada_dragonsclaw.bos:    set-signal-mask SIG_AIM;
armada_dragonsclaw.bos:Killed(severity, corpsetype)
armada_dragonsclaw.bos:            corpsetype = 1 ;
armada_dragonsclaw.bos:            return(corpsetype);
armada_dragonsclaw.bos:            corpsetype = 2 ;
armada_dragonsclaw.bos:            return(corpsetype);
armada_dragonsclaw.bos:            corpsetype = 3 ;
armada_dragonsclaw.bos:            return(corpsetype);
armada_dragonsclaw.bos:    corpsetype = 3 ;
armada_dragonsclaw.bos:    return corpsetype;
Binary file armada_dragonsclaw.cob matches
armada_commander.bos:     set-signal-mask SIG_WALK;
armada_commander.bos:     set-signal-mask SIG_AIM;
armada_commander.bos:     set-signal-mask SIG_AIM;
armada_commander.bos:     set-signal-mask SIG_AIM;
armada_commander.bos:     set-signal-mask SIG_AIM;
armada_commander.bos:     set-signal-mask SIG_AIM;
armada_commander.bos:     //set-signal-mask SIG_AIM;
armada_commander.bos:     set INBUILDSTANCE to 1;
armada_commander.bos:     set-signal-mask SIG_AIM;
armada_commander.bos:     set INBUILDSTANCE to 0;
armada_commander.bos:     set-signal-mask SIG_AIM;
armada_commander.bos:Killed( severity, corpsetype )
armada_commander.bos:     corpsetype = 1;
armada_commander.bos:     return(corpsetype);
armada_commander_lus.lua: SetSignalMask(SIG_AIM)
armada_commander_lus.lua:                 SetSignalMask(SIG_AIM)
armada_commander_lus.lua:                 SetSignalMask(SIG_AIM)
armada_commander_lus.lua: Spring.UnitScript.SetUnitValue(COB.INBUILDSTANCE, true)
armada_commander_lus.lua: Spring.UnitScript.SetUnitValue(COB.INBUILDSTANCE, false)
armada_commander_lus.lua: SetSignalMask(SIG_AIM)
armada_commander_lus.lua: SetSignalMask(SIG_AIM)
armada_commanderboss.bos: set-signal-mask SIG_WALK;
armada_commanderboss.bos: set-signal-mask SIG_AIM;
armada_commanderboss.bos: set-signal-mask SIG_AIM;
armada_commanderboss.bos: set-signal-mask SIG_AIM;
armada_commanderboss.bos: set-signal-mask SIG_AIM;
armada_commanderboss.bos: set-signal-mask SIG_AIM;
armada_commanderboss.bos: //set-signal-mask SIG_AIM;
armada_commanderboss.bos: set INBUILDSTANCE to 1;
armada_commanderboss.bos: set-signal-mask SIG_AIM;
armada_commanderboss.bos: set INBUILDSTANCE to 0;
armada_commanderboss.bos: set-signal-mask SIG_AIM;
armada_commanderboss.bos:Killed( severity, corpsetype )
armada_commanderboss.bos: corpsetype = 1;
armada_commanderboss.bos: return(corpsetype);
armada_consul.bos:  set INBUILDSTANCE to 1;
armada_consul.bos:  set INBUILDSTANCE to 0;
armada_consul.bos:Killed(severity, corpsetype)
armada_consul.bos:          corpsetype = 1 ;
armada_consul.bos:          return(corpsetype);
armada_consul.bos:          corpsetype = 2 ;
armada_consul.bos:          return(corpsetype);
armada_consul.bos:          corpsetype = 3 ;
armada_consul.bos:          return(corpsetype);
armada_consul.bos:  corpsetype = 3 ;
armada_consul.bos:  return corpsetype;
armada_turtle.bos:SetMaxReloadTime(Func_Var_1)
armada_turtle.bos:SetStunned(State)
armada_turtle.bos:    set-signal-mask SIG_AIM;
armada_turtle.bos:Killed(severity, corpsetype)
armada_turtle.bos:            corpsetype = 1 ;
armada_turtle.bos:            return(corpsetype);
armada_turtle.bos:            corpsetype = 2 ;
armada_turtle.bos:            return(corpsetype);
armada_turtle.bos:            corpsetype = 3 ;
armada_turtle.bos:            return(corpsetype);
armada_turtle.bos:    corpsetype = 3 ;
armada_turtle.bos:    return corpsetype;
Binary file armada_turtle.cob matches
armada_paladin.bos:SetDirection(heading)
armada_paladin.bos:    set-signal-mask 16;
armada_paladin.bos:SetMaxReloadTime(Func_Var_1)
armada_paladin.bos:    set-signal-mask 0;
armada_paladin.bos:SetStunned(State)
armada_paladin.bos:    set-signal-mask 0;
armada_paladin.bos:    set-signal-mask SIG_MOVE;
armada_paladin.bos:    set-signal-mask SIG_AIM_2;
armada_paladin.bos:    set-signal-mask SIG_AIM;
armada_paladin.bos:Killed(severity, corpsetype)
armada_paladin.bos:            corpsetype = 1 ;
armada_paladin.bos:            return(corpsetype);
armada_paladin.bos:            corpsetype = 2 ;
armada_paladin.bos:            return(corpsetype);
armada_paladin.bos:            corpsetype = 3 ;
armada_paladin.bos:            return(corpsetype);
armada_paladin.bos:    corpsetype = 3 ;
armada_paladin.bos:    return corpsetype;
Binary file armada_paladin.cob matches
armada_constructionship.bos:      set INBUILDSTANCE to 0;
armada_constructionship.bos:SetDirection(heading)
armada_constructionship.bos:      set-signal-mask SIG_MOVE;
armada_constructionship.bos:      set INBUILDSTANCE to 1;
armada_constructionship.bos:      set-signal-mask SIG_BUILD;
armada_constructionship.bos:      set-signal-mask 0;
armada_constructionship.bos:Killed(severity, corpsetype)
armada_constructionship.bos:              corpsetype = 1 ;
armada_constructionship.bos:              return(corpsetype);
armada_constructionship.bos:              corpsetype = 2 ;
armada_constructionship.bos:              return(corpsetype);
armada_constructionship.bos:              corpsetype = 3 ;
armada_constructionship.bos:              return(corpsetype);
armada_constructionship.bos:      corpsetype = 3 ;
armada_constructionship.bos:      return corpsetype;
Binary file armada_constructionship.cob matches
armada_constructionseaplane.bos:     set-signal-mask SIG_MOVE;
armada_constructionseaplane.bos:     set INBUILDSTANCE to 1;
armada_constructionseaplane.bos:     set INBUILDSTANCE to 0;
armada_constructionseaplane.bos:Killed(severity, corpsetype)
armada_constructionseaplane.bos:     corpsetype = 1 ;
armada_constructionseaplane.bos:     return(corpsetype);
armada_constructionseaplane.bos:     corpsetype = 2 ;
armada_constructionseaplane.bos:     return(corpsetype);
armada_constructionseaplane.bos:     corpsetype = 3 ;
armada_constructionseaplane.bos:     return(corpsetype);
armada_constructionseaplane.bos:     corpsetype = 3 ;
armada_constructionseaplane.bos:     return corpsetype;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 1;
armada_constructionvehicle.bos:      set-signal-mask SIG_BUILD;
armada_constructionvehicle.bos:      set-signal-mask 0;
armada_constructionvehicle.bos:Killed(severity, corpsetype)
armada_constructionvehicle.bos:              corpsetype = 1 ;
armada_constructionvehicle.bos:              return(corpsetype);
armada_constructionvehicle.bos:              corpsetype = 2 ;
armada_constructionvehicle.bos:              return(corpsetype);
armada_constructionvehicle.bos:              corpsetype = 3 ;
armada_constructionvehicle.bos:              return(corpsetype);
armada_constructionvehicle.bos:      corpsetype = 3 ;
armada_constructionvehicle.bos:      return corpsetype;
armada_dolphin.bos:SetDirection(heading)
armada_dolphin.bos:SetMaxReloadTime(Func_Var_1)
armada_dolphin.bos:SetStunned(State)
armada_dolphin.bos:  set-signal-mask SIG_MOVE;
armada_dolphin.bos:  set-signal-mask SIG_AIM;
armada_dolphin.bos:  set-signal-mask SIG_AIM_2;
armada_dolphin.bos:Killed(severity, corpsetype)
armada_dolphin.bos:          corpsetype = 1 ;
armada_dolphin.bos:          return(corpsetype);
armada_dolphin.bos:          corpsetype = 2 ;
armada_dolphin.bos:          return(corpsetype);
armada_dolphin.bos:          corpsetype = 3 ;
armada_dolphin.bos:          return(corpsetype);
armada_dolphin.bos:  corpsetype = 3 ;
armada_dolphin.bos:  return corpsetype;
Binary file armada_dolphin.cob matches
armada_decoycommander.lua:   Spring.SetUnitNanoPieces( unitID, {nano} )
armada_decoycommander.lua:   SetSignalMask(SIG_AIM)
armada_decoycommander.lua:Spring.SetUnitNanoPieces( unitID, {nano} )
armada_decoycommander.lua:   SetUnitValue(COB.INBUILDSTANCE, 1)
armada_decoycommander.lua:   SetUnitValue(COB.INBUILDSTANCE, 0)
armada_decoycommander.lua:   -- reset parts
armada_decoyfusionreactor.bos:      set ARMORED to 1;
armada_decoyfusionreactor.bos:      set ARMORED to 0;
armada_decoyfusionreactor.bos:Killed(severity, corpsetype)
armada_decoyfusionreactor.bos:              corpsetype = 1;
armada_decoyfusionreactor.bos:              return (corpsetype);
armada_decoyfusionreactor.bos:              corpsetype = 2;
armada_decoyfusionreactor.bos:              return (corpsetype);
armada_decoyfusionreactor.bos:              corpsetype = 3;
armada_decoyfusionreactor.bos:              return (corpsetype);
armada_decoyfusionreactor.bos:      corpsetype = 3;
armada_decoyfusionreactor.bos:      return (corpsetype);
armada_abductor.bos:Killed(severity, corpsetype)
armada_abductor.bos:            corpsetype = 1;
armada_abductor.bos:            return (corpsetype);
armada_abductor.bos:            corpsetype = 2;
armada_abductor.bos:            return (corpsetype);
armada_abductor.bos:            corpsetype = 3;
armada_abductor.bos:            return (corpsetype);
armada_abductor.bos:    corpsetype = 3;
armada_abductor.bos:    return corpsetype;
armada_anemone.bos:      set-signal-mask SIG_AIM;
armada_anemone.bos:Killed(severity, corpsetype)
armada_anemone.bos:              corpsetype = 1 ;
armada_anemone.bos:              return(corpsetype);
armada_anemone.bos:              corpsetype = 2 ;
armada_anemone.bos:              return(corpsetype);
armada_anemone.bos:              corpsetype = 3 ;
armada_anemone.bos:              return(corpsetype);
armada_anemone.bos:      corpsetype = 3 ;
armada_anemone.bos:      return corpsetype;
armada_paralyzer.bos:SetMaxReloadTime(Func_Var_1)
armada_paralyzer.bos:     set-signal-mask 0;
armada_paralyzer.bos:SetStunned(State)
armada_paralyzer.bos:     set-signal-mask SIG_AIM;
armada_paralyzer.bos:Killed(severity, corpsetype)
armada_paralyzer.bos:             corpsetype = 1 ;
armada_paralyzer.bos:             return(corpsetype);
armada_paralyzer.bos:             corpsetype = 2 ;
armada_paralyzer.bos:             return(corpsetype);
armada_paralyzer.bos:             corpsetype = 3 ;
armada_paralyzer.bos:             return(corpsetype);
armada_paralyzer.bos:     corpsetype = 3 ;
armada_paralyzer.bos:     return corpsetype;
Binary file armada_paralyzer.cob matches
armada_epoch.bos:SetDirection(heading)
armada_epoch.bos:   set ARMORED to 1;
armada_epoch.bos:SetMaxReloadTime(Func_Var_1)
armada_epoch.bos:SetStunned(State)
armada_epoch.bos:   set-signal-mask SIG_MOVE;
armada_epoch.bos:   set-signal-mask 2;
armada_epoch.bos:   set-signal-mask 4;
armada_epoch.bos:   set-signal-mask 8;
armada_epoch.bos:   set-signal-mask 16;
armada_epoch.bos:   set-signal-mask 32;
armada_epoch.bos:   set-signal-mask 64;
armada_epoch.bos:   set-signal-mask 128;
armada_epoch.bos:Killed(severity, corpsetype)
armada_epoch.bos:           corpsetype = 1 ;
armada_epoch.bos:           return(corpsetype);
armada_epoch.bos:           corpsetype = 2 ;
armada_epoch.bos:           return(corpsetype);
armada_epoch.bos:           corpsetype = 3 ;
armada_epoch.bos:           return(corpsetype);
armada_epoch.bos:   corpsetype = 3 ;
armada_epoch.bos:   return corpsetype;
Binary file armada_epoch.cob matches
armada_energystorage.bos:Killed(severity, corpsetype)
armada_energystorage.bos:           corpsetype = 1 ;
armada_energystorage.bos:           return(corpsetype);
armada_energystorage.bos:           corpsetype = 2 ;
armada_energystorage.bos:           return(corpsetype);
armada_energystorage.bos:           corpsetype = 3 ;
armada_energystorage.bos:           return(corpsetype);
armada_energystorage.bos:   corpsetype = 3 ;
armada_energystorage.bos:   return corpsetype;
armada_beholder.bos:Killed(severity, corpsetype)
armada_beholder.bos:            corpsetype = 1 ;
armada_beholder.bos:            return(corpsetype);
armada_beholder.bos:            corpsetype = 2 ;
armada_beholder.bos:            return(corpsetype);
armada_beholder.bos:            corpsetype = 3 ;
armada_beholder.bos:            return(corpsetype);
armada_beholder.bos:    corpsetype = 3 ;
armada_beholder.bos:    return corpsetype;
armada_butler.bos:    set INBUILDSTANCE to 0;
armada_butler.bos:    set-signal-mask SIG_BUILD;
armada_butler.bos:    set INBUILDSTANCE to 1;
armada_butler.bos:    set-signal-mask SIG_BUILD;
armada_butler.bos:Killed(severity, corpsetype)
armada_butler.bos:            corpsetype = 1 ;
armada_butler.bos:            return(corpsetype);
armada_butler.bos:            corpsetype = 2 ;
armada_butler.bos:            return(corpsetype);
armada_butler.bos:            corpsetype = 3 ;
armada_butler.bos:            return(corpsetype);
armada_butler.bos:    corpsetype = 3 ;
armada_butler.bos:    return corpsetype;
armada_sprinter.bos:SetMaxReloadTime(Func_Var_1)
armada_sprinter.bos:SetStunned(State)
armada_sprinter.bos:    set-signal-mask SIG_AIM;
armada_sprinter.bos:Killed(severity, corpsetype)
armada_sprinter.bos:            corpsetype = 1 ;
armada_sprinter.bos:            return(corpsetype);
armada_sprinter.bos:            corpsetype = 2 ;
armada_sprinter.bos:            return(corpsetype);
armada_sprinter.bos:            corpsetype = 3 ;
armada_sprinter.bos:            return(corpsetype);
armada_sprinter.bos:    corpsetype = 3 ;
armada_sprinter.bos:    return corpsetype;
Binary file armada_sprinter.cob matches
armada_navalpinpointer.bos:Killed(severity, corpsetype)
armada_navalpinpointer.bos:            corpsetype = 1 ;
armada_navalpinpointer.bos:            return(corpsetype);
armada_navalpinpointer.bos:            corpsetype = 2 ;
armada_navalpinpointer.bos:            return(corpsetype);
armada_navalpinpointer.bos:            corpsetype = 3 ;
armada_navalpinpointer.bos:            return(corpsetype);
armada_navalpinpointer.bos:    corpsetype = 3 ;
armada_navalpinpointer.bos:    return corpsetype;
armada_rover.bos:     set-signal-mask SIG_MOVE;
armada_rover.bos:SetMaxReloadTime(Func_Var_1)
armada_rover.bos:SetStunned(State)
armada_rover.bos:     set-signal-mask SIG_AIM;
armada_rover.bos:Killed(severity, corpsetype)
armada_rover.bos:             corpsetype = 1 ;
armada_rover.bos:             return(corpsetype);
armada_rover.bos:             corpsetype = 2 ;
armada_rover.bos:             return(corpsetype);
armada_rover.bos:             corpsetype = 3 ;
armada_rover.bos:             return(corpsetype);
armada_rover.bos:     corpsetype = 3 ;
armada_rover.bos:     return corpsetype;
Binary file armada_rover.cob matches
armada_fatboy.bos:    //set-signal-mask SIG_WALK;
armada_fatboy.bos:SetMaxReloadTime(Func_Var_1)
armada_fatboy.bos:SetStunned(State)
armada_fatboy.bos:    set-signal-mask SIG_AIM;
armada_fatboy.bos:Killed(severity, corpsetype)
armada_fatboy.bos:            corpsetype = 1 ;
armada_fatboy.bos:            return(corpsetype);
armada_fatboy.bos:            corpsetype = 2 ;
armada_fatboy.bos:            return(corpsetype);
armada_fatboy.bos:            corpsetype = 3 ;
armada_fatboy.bos:            return(corpsetype);
armada_fatboy.bos:    corpsetype = 3 ;
armada_fatboy.bos:    return corpsetype;
Binary file armada_fatboy.cob matches
armada_ferret.bos:  set ARMORED to 0;
armada_ferret.bos:  set ARMORED to 1;
armada_ferret.bos:  set-signal-mask 0;
armada_ferret.bos:SetStunned(State)
armada_ferret.bos:  set-signal-mask SIG_AIM;
armada_ferret.bos:SetMaxReloadTime(Func_Var_1)
armada_ferret.bos:  set-signal-mask SIG_AIM;
armada_ferret.bos:Killed(severity, corpsetype)
armada_ferret.bos:          corpsetype = 1 ;
armada_ferret.bos:          return(corpsetype);
armada_ferret.bos:          corpsetype = 2 ;
armada_ferret.bos:          return(corpsetype);
armada_ferret.bos:          corpsetype = 3 ;
armada_ferret.bos:          return(corpsetype);
armada_ferret.bos:  corpsetype = 3 ;
armada_ferret.bos:  return corpsetype;
Binary file armada_ferret.cob matches
armada_navalarbalest.bos:SetStunned(State)
armada_navalarbalest.bos:   set-signal-mask SIG_AIM;
armada_navalarbalest.bos:Killed(severity, corpsetype)
armada_navalarbalest.bos:           corpsetype = 1 ;
armada_navalarbalest.bos:           return(corpsetype);
armada_navalarbalest.bos:           corpsetype = 2 ;
armada_navalarbalest.bos:           return(corpsetype);
armada_navalarbalest.bos:           corpsetype = 3 ;
armada_navalarbalest.bos:           return(corpsetype);
armada_navalarbalest.bos:   corpsetype = 3 ;
armada_navalarbalest.bos:   return corpsetype;
Binary file armada_navalarbalest.cob matches
armada_aurora.bos:Killed(severity, corpsetype)
armada_aurora.bos:           corpsetype = 1 ;
armada_aurora.bos:           return(corpsetype);
armada_aurora.bos:           corpsetype = 2 ;
armada_aurora.bos:           return(corpsetype);
armada_aurora.bos:           corpsetype = 3 ;
armada_aurora.bos:           return(corpsetype);
armada_aurora.bos:   corpsetype = 3 ;
armada_aurora.bos:   return corpsetype;
armada_manta.bos:    set-signal-mask SIG_AIM;
armada_manta.bos:Killed(severity, corpsetype)
armada_manta.bos:            corpsetype = 1 ;
armada_manta.bos:            return(corpsetype);
armada_manta.bos:            corpsetype = 2 ;
armada_manta.bos:            return(corpsetype);
armada_manta.bos:            corpsetype = 3 ;
armada_manta.bos:            return(corpsetype);
armada_manta.bos:    corpsetype = 3 ;
armada_manta.bos:    return corpsetype;
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 1;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 0;
armada_navalhovercraftplatform.bos:     set-signal-mask SIG_ACTIVATE;
armada_navalhovercraftplatform.bos:     set-signal-mask 0;
armada_navalhovercraftplatform.bos:Killed(severity, corpsetype)
armada_navalhovercraftplatform.bos:             corpsetype = 1 ;
armada_navalhovercraftplatform.bos:             return(corpsetype);
armada_navalhovercraftplatform.bos:             corpsetype = 2 ;
armada_navalhovercraftplatform.bos:             return(corpsetype);
armada_navalhovercraftplatform.bos:             corpsetype = 3 ;
armada_navalhovercraftplatform.bos:             return(corpsetype);
armada_navalhovercraftplatform.bos:     corpsetype = 3 ;
armada_navalhovercraftplatform.bos:     return corpsetype;
armada_hound.bos:    //set-signal-mask SIG_WALK;
armada_hound.bos:    set-signal-mask 0;
armada_hound.bos:SetStunned(State)
armada_hound.bos:    set-signal-mask SIG_AIM;
armada_hound.bos:SetMaxReloadTime(Func_Var_1)
armada_hound.bos:Killed(severity, corpsetype)
armada_hound.bos:            corpsetype = 1;
armada_hound.bos:            return (corpsetype);
armada_hound.bos:            corpsetype = 2;
armada_hound.bos:            return (corpsetype);
armada_hound.bos:            corpsetype = 3;
armada_hound.bos:            return (corpsetype);
armada_hound.bos:    corpsetype = 3;
armada_hound.bos:    return corpsetype;
Binary file armada_hound.cob matches
armada_falcon.bos:Killed(severity, corpsetype)
armada_falcon.bos:             corpsetype = 1 ;
armada_falcon.bos:             return(corpsetype);
armada_falcon.bos:             corpsetype = 2 ;
armada_falcon.bos:             return(corpsetype);
armada_falcon.bos:             corpsetype = 3 ;
armada_falcon.bos:             return(corpsetype);
armada_falcon.bos:     corpsetype = 3 ;
armada_falcon.bos:     return corpsetype;
armada_arbalest.bos:SetStunned(State)
armada_arbalest.bos:    set-signal-mask SIG_AIM;
armada_arbalest.bos:Killed(severity, corpsetype)
armada_arbalest.bos:            corpsetype = 1 ;
armada_arbalest.bos:            return(corpsetype);
armada_arbalest.bos:            corpsetype = 2 ;
armada_arbalest.bos:            return(corpsetype);
armada_arbalest.bos:            corpsetype = 3 ;
armada_arbalest.bos:            return(corpsetype);
armada_arbalest.bos:    corpsetype = 3 ;
armada_arbalest.bos:    return corpsetype;
Binary file armada_arbalest.cob matches
armada_blitz.bos:SetMaxReloadTime(Func_Var_1)
armada_blitz.bos:SetStunned(State)
armada_blitz.bos:   set-signal-mask SIG_AIM;
armada_blitz.bos:Killed(severity, corpsetype)
armada_blitz.bos:           corpsetype = 1 ;
armada_blitz.bos:           return(corpsetype);
armada_blitz.bos:           corpsetype = 2 ;
armada_blitz.bos:           return(corpsetype);
armada_blitz.bos:           corpsetype = 3 ;
armada_blitz.bos:           return(corpsetype);
armada_blitz.bos:   corpsetype = 3 ;
armada_blitz.bos:   return corpsetype;
Binary file armada_blitz.cob matches
armada_tick.bos:    set-signal-mask SIG_WALK;
armada_tick.bos:SetMaxReloadTime(Func_Var_1)
armada_tick.bos:SetStunned(State)
armada_tick.bos:    set-signal-mask SIG_AIM;
armada_tick.bos:Killed(severity, corpsetype)
armada_tick.bos:            corpsetype = 1 ;
armada_tick.bos:            return(corpsetype);
armada_tick.bos:            corpsetype = 2 ;
armada_tick.bos:            return(corpsetype);
armada_tick.bos:            corpsetype = 3 ;
armada_tick.bos:            return(corpsetype);
armada_tick.bos:    corpsetype = 3 ;
armada_tick.bos:    return corpsetype;
Binary file armada_tick.cob matches
armada_navalenergyconverter.bos:Killed(severity, corpsetype)
armada_navalenergyconverter.bos:            corpsetype = 1 ;
armada_navalenergyconverter.bos:            return(corpsetype);
armada_navalenergyconverter.bos:            corpsetype = 2 ;
armada_navalenergyconverter.bos:            return(corpsetype);
armada_navalenergyconverter.bos:            corpsetype = 3 ;
armada_navalenergyconverter.bos:            return(corpsetype);
armada_navalenergyconverter.bos:    corpsetype = 3 ;
armada_navalenergyconverter.bos:    return corpsetype;
armada_navalradar.bos:Killed(severity, corpsetype)
armada_navalradar.bos:            corpsetype = 1 ;
armada_navalradar.bos:            return(corpsetype);
armada_navalradar.bos:            corpsetype = 2 ;
armada_navalradar.bos:            return(corpsetype);
armada_navalradar.bos:            corpsetype = 3 ;
armada_navalradar.bos:            return(corpsetype);
armada_navalradar.bos:    corpsetype = 3 ;
armada_navalradar.bos:    return corpsetype;
armada_scumbag.bos:   set-signal-mask SIG_AIM;
armada_scumbag.bos:Killed(severity, corpsetype)
armada_scumbag.bos:           corpsetype = 1;
armada_scumbag.bos:           return (corpsetype);
armada_scumbag.bos:           corpsetype = 2;
armada_scumbag.bos:           return (corpsetype);
armada_scumbag.bos:           corpsetype = 3;
armada_scumbag.bos:           return (corpsetype);
armada_scumbag.bos:   corpsetype = 3;
armada_scumbag.bos:   return (corpsetype);
armada_navalnettle.bos:SetStunned(State)
armada_navalnettle.bos:     set-signal-mask SIG_AIM;
armada_navalnettle.bos:Killed(severity, corpsetype)
armada_navalnettle.bos:             corpsetype = 1 ;
armada_navalnettle.bos:             return(corpsetype);
armada_navalnettle.bos:             corpsetype = 2 ;
armada_navalnettle.bos:             return(corpsetype);
armada_navalnettle.bos:             corpsetype = 3 ;
armada_navalnettle.bos:             return(corpsetype);
armada_navalnettle.bos:     corpsetype = 3 ;
armada_navalnettle.bos:     return corpsetype;
Binary file armada_navalnettle.cob matches
armada_fusionreactor.bos:     set ARMORED to 1;
armada_fusionreactor.bos:     set ARMORED to 0;
armada_fusionreactor.bos:Killed(severity, corpsetype)
armada_fusionreactor.bos:             corpsetype = 1 ;
armada_fusionreactor.bos:             return(corpsetype);
armada_fusionreactor.bos:             corpsetype = 2 ;
armada_fusionreactor.bos:             return(corpsetype);
armada_fusionreactor.bos:             corpsetype = 3 ;
armada_fusionreactor.bos:             return(corpsetype);
armada_fusionreactor.bos:     corpsetype = 3 ;
armada_fusionreactor.bos:     return corpsetype;
armada_keeper.bos:Killed(severity, corpsetype)
armada_keeper.bos:            corpsetype = 1 ;
armada_keeper.bos:            return(corpsetype);
armada_keeper.bos:            corpsetype = 2 ;
armada_keeper.bos:            return(corpsetype);
armada_keeper.bos:            corpsetype = 3 ;
armada_keeper.bos:            return(corpsetype);
armada_keeper.bos:    corpsetype = 3 ;
armada_keeper.bos:    return corpsetype;
armada_geothermalpowerplant.bos:Killed(severity, corpsetype)
armada_geothermalpowerplant.bos:             corpsetype = 1 ;
armada_geothermalpowerplant.bos:             return(corpsetype);
armada_geothermalpowerplant.bos:             corpsetype = 2 ;
armada_geothermalpowerplant.bos:             return(corpsetype);
armada_geothermalpowerplant.bos:             corpsetype = 3 ;
armada_geothermalpowerplant.bos:             return(corpsetype);
armada_geothermalpowerplant.bos:     corpsetype = 3 ;
armada_geothermalpowerplant.bos:     return corpsetype;
armada_prude.bos:     set-signal-mask 2;
armada_prude.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 1;
armada_prude.bos:Killed(severity, corpsetype)
armada_prude.bos:             corpsetype = 1 ;
armada_prude.bos:             return(corpsetype);
armada_prude.bos:             corpsetype = 2 ;
armada_prude.bos:             return(corpsetype);
armada_prude.bos:             corpsetype = 3 ;
armada_prude.bos:             return(corpsetype);
armada_prude.bos:     corpsetype = 3 ;
armada_prude.bos:     return corpsetype;
armada_gunplatform.bos:SetMaxReloadTime(Func_Var_1)
armada_gunplatform.bos:SetStunned(State)
armada_gunplatform.bos:   set-signal-mask SIG_AIM;
armada_gunplatform.bos:Killed(severity, corpsetype)
armada_gunplatform.bos:           corpsetype = 1 ;
armada_gunplatform.bos:           return(corpsetype);
armada_gunplatform.bos:           corpsetype = 2 ;
armada_gunplatform.bos:           return(corpsetype);
armada_gunplatform.bos:           corpsetype = 3 ;
armada_gunplatform.bos:           return(corpsetype);
armada_gunplatform.bos:   corpsetype = 3 ;
armada_gunplatform.bos:   return corpsetype;
Binary file armada_gunplatform.cob matches
armada_gremlin.bos:SetMaxReloadTime(Func_Var_1)
armada_gremlin.bos: set-signal-mask 0;
armada_gremlin.bos:SetStunned(State)
armada_gremlin.bos: set-signal-mask SIG_AIM;
armada_gremlin.bos:Killed(severity, corpsetype)
armada_gremlin.bos:         corpsetype = 1 ;
armada_gremlin.bos:         return(corpsetype);
armada_gremlin.bos:         corpsetype = 2 ;
armada_gremlin.bos:         return(corpsetype);
armada_gremlin.bos:         corpsetype = 3 ;
armada_gremlin.bos:         return(corpsetype);
armada_gremlin.bos: corpsetype = 3 ;
armada_gremlin.bos: return corpsetype;
Binary file armada_gremlin.cob matches
armada_gauntlet.bos:Killed(severity, corpsetype)
armada_gauntlet.bos:           corpsetype = 1 ;
armada_gauntlet.bos:           return(corpsetype);
armada_gauntlet.bos:           corpsetype = 2 ;
armada_gauntlet.bos:           return(corpsetype);
armada_gauntlet.bos:           corpsetype = 3 ;
armada_gauntlet.bos:           return(corpsetype);
armada_gauntlet.bos:   corpsetype = 3 ;
armada_gauntlet.bos:   return corpsetype;
armada_mace.bos:     set-signal-mask SIG_WALK;
armada_mace.bos:SetMaxReloadTime(Func_Var_1)
armada_mace.bos:    set-signal-mask 0;
armada_mace.bos:SetStunned(State)
armada_mace.bos:     set-signal-mask SIG_AIM;
armada_mace.bos:Killed(severity, corpsetype)
armada_mace.bos:             corpsetype = 1 ;
armada_mace.bos:             return(corpsetype);
armada_mace.bos:             corpsetype = 2 ;
armada_mace.bos:             return(corpsetype);
armada_mace.bos:             corpsetype = 3 ;
armada_mace.bos:             return(corpsetype);
armada_mace.bos:     corpsetype = 3 ;
armada_mace.bos:     return corpsetype;
Binary file armada_mace.cob matches
armada_highwind.bos:Killed(severity, corpsetype)
armada_highwind.bos:            corpsetype = 1 ;
armada_highwind.bos:            return(corpsetype);
armada_highwind.bos:            corpsetype = 2 ;
armada_highwind.bos:            return(corpsetype);
armada_highwind.bos:            corpsetype = 3 ;
armada_highwind.bos:            return(corpsetype);
armada_highwind.bos:    corpsetype = 3 ;
armada_highwind.bos:    return corpsetype;
armada_overwatch.bos:     set-signal-mask SIG_AIM;
armada_overwatch.bos:Killed(severity, corpsetype)
armada_overwatch.bos:             corpsetype = 1 ;
armada_overwatch.bos:             return(corpsetype);
armada_overwatch.bos:             corpsetype = 2 ;
armada_overwatch.bos:             return(corpsetype);
armada_overwatch.bos:             corpsetype = 3 ;
armada_overwatch.bos:             return(corpsetype);
armada_overwatch.bos:     corpsetype = 3 ;
armada_overwatch.bos:     return corpsetype;
armada_hovercraftplatform.bos:      set YARD_OPEN to 1;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 1;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set YARD_OPEN to 0;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 0;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 1;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 0;
armada_hovercraftplatform.bos:      set-signal-mask SIG_ACTIVATE;
armada_hovercraftplatform.bos:      set-signal-mask 0;
armada_hovercraftplatform.bos:Killed(severity, corpsetype)
armada_hovercraftplatform.bos:              corpsetype = 1 ;
armada_hovercraftplatform.bos:              return(corpsetype);
armada_hovercraftplatform.bos:              corpsetype = 2 ;
armada_hovercraftplatform.bos:              return(corpsetype);
armada_hovercraftplatform.bos:              corpsetype = 3 ;
armada_hovercraftplatform.bos:              return(corpsetype);
armada_hovercraftplatform.bos:      corpsetype = 3 ;
armada_hovercraftplatform.bos:      return corpsetype;
armada_umbra.bos:             // Set values for tilt
armada_umbra.bos:             // Set Values for differential system
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set-signal-mask 2;
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 100;
armada_umbra.bos:Killed(severity, corpsetype)
armada_umbra.bos:             corpsetype = 1 ;
armada_umbra.bos:             return(corpsetype);
armada_umbra.bos:             corpsetype = 2 ;
armada_umbra.bos:             return(corpsetype);
armada_umbra.bos:             corpsetype = 3 ;
armada_umbra.bos:             return(corpsetype);
armada_umbra.bos:     corpsetype = 3 ;
armada_umbra.bos:     return corpsetype;
armada_sneakypete.bos:Killed(severity, corpsetype)
armada_sneakypete.bos:            corpsetype = 1 ;
armada_sneakypete.bos:            return(corpsetype);
armada_sneakypete.bos:            corpsetype = 2 ;
armada_sneakypete.bos:            return(corpsetype);
armada_sneakypete.bos:            corpsetype = 3 ;
armada_sneakypete.bos:            return(corpsetype);
armada_sneakypete.bos:    corpsetype = 3 ;
armada_sneakypete.bos:    return corpsetype;
armada_janus.bos:SetMaxReloadTime(Func_Var_1)
armada_janus.bos:SetStunned(State)
armada_janus.bos:   set-signal-mask SIG_AIM;
armada_janus.bos:   set-signal-mask SIG_AIM_2;
armada_janus.bos:Killed(severity, corpsetype)
armada_janus.bos:           corpsetype = 1 ;
armada_janus.bos:           return(corpsetype);
armada_janus.bos:           corpsetype = 2 ;
armada_janus.bos:           return(corpsetype);
armada_janus.bos:           corpsetype = 3 ;
armada_janus.bos:           return(corpsetype);
armada_janus.bos:   corpsetype = 3 ;
armada_janus.bos:   return corpsetype;
Binary file armada_janus.cob matches
armada_crossbow.bos:    set-signal-mask SIG_WALK;
armada_crossbow.bos:SetMaxReloadTime(Func_Var_1)
armada_crossbow.bos:    set-signal-mask 0;
armada_crossbow.bos:SetStunned(State)
armada_crossbow.bos:    set-signal-mask SIG_AIM_3;
armada_crossbow.bos:Killed(severity, corpsetype)
armada_crossbow.bos:            corpsetype = 1 ;
armada_crossbow.bos:            return(corpsetype);
armada_crossbow.bos:            corpsetype = 2 ;
armada_crossbow.bos:            return(corpsetype);
armada_crossbow.bos:            corpsetype = 3 ;
armada_crossbow.bos:            return(corpsetype);
armada_crossbow.bos:    corpsetype = 3 ;
armada_crossbow.bos:    return corpsetype;
Binary file armada_crossbow.cob matches
armada_juno.bos:SetMaxReloadTime(Func_Var_1)
armada_juno.bos:    set-signal-mask 0;
armada_juno.bos:SetStunned(State)
armada_juno.bos:    set-signal-mask SIG_AIM;
armada_juno.bos:Killed(severity, corpsetype)
armada_juno.bos:            corpsetype = 1 ;
armada_juno.bos:            return(corpsetype);
armada_juno.bos:            corpsetype = 2 ;
armada_juno.bos:            return(corpsetype);
armada_juno.bos:            corpsetype = 3 ;
armada_juno.bos:            return(corpsetype);
armada_juno.bos:    corpsetype = 3 ;
armada_juno.bos:    return corpsetype;
Binary file armada_juno.cob matches
armada_banshee.bos:SetStunned(State)
armada_banshee.bos:     set-signal-mask SIG_MOVE;
armada_banshee.bos:     set-signal-mask SIG_MOVE;
armada_banshee.bos:     set-signal-mask SIG_MOVE;
armada_banshee.bos:     set-signal-mask SIG_MOVE;
armada_banshee.bos:     set-signal-mask SIG_MOVE;
armada_banshee.bos:     set-signal-mask SIG_MOVE;
armada_banshee.bos:Killed(severity, corpsetype)
armada_banshee.bos:             corpsetype = 1 ;
armada_banshee.bos:             return(corpsetype);
armada_banshee.bos:             corpsetype = 2 ;
armada_banshee.bos:             return(corpsetype);
armada_banshee.bos:             corpsetype = 3 ;
armada_banshee.bos:             return(corpsetype);
armada_banshee.bos:     corpsetype = 3 ;
armada_banshee.bos:    return(corpsetype);
armada_banshee.bos:     return corpsetype;
Binary file armada_banshee.cob matches
armada_botlab.bos:     set YARD_OPEN to 1;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 1;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set YARD_OPEN to 0;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 0;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set INBUILDSTANCE to 1;
armada_botlab.bos:     set INBUILDSTANCE to 0;
armada_botlab.bos:     set-signal-mask SIG_ACTIVATE;
armada_botlab.bos:     set-signal-mask 0;
armada_botlab.bos:Killed(severity, corpsetype)
armada_botlab.bos:             corpsetype = 1 ;
armada_botlab.bos:             return(corpsetype);
armada_botlab.bos:             corpsetype = 2 ;
armada_botlab.bos:             return(corpsetype);
armada_botlab.bos:             corpsetype = 3 ;
armada_botlab.bos:             return(corpsetype);
armada_botlab.bos:     corpsetype = 3 ;
armada_botlab.bos:     return corpsetype;
armada_cormorant.bos:Killed(severity, corpsetype)
armada_cormorant.bos:           corpsetype = 1 ;
armada_cormorant.bos:           return(corpsetype);
armada_cormorant.bos:           corpsetype = 2 ;
armada_cormorant.bos:           return(corpsetype);
armada_cormorant.bos:           corpsetype = 3 ;
armada_cormorant.bos:           return(corpsetype);
armada_cormorant.bos:   corpsetype = 3 ;
armada_cormorant.bos:   return corpsetype;
armada_jaguar.bos:SetMaxReloadTime(Func_Var_1)
armada_jaguar.bos:   set-signal-mask 0;
armada_jaguar.bos:SetStunned(State)
armada_jaguar.bos:   set-signal-mask SIG_AIM;
armada_jaguar.bos:   set-signal-mask SIG_AIM_3;
armada_jaguar.bos:Killed(severity, corpsetype)
armada_jaguar.bos:           corpsetype = 1 ;
armada_jaguar.bos:           return(corpsetype);
armada_jaguar.bos:           corpsetype = 2 ;
armada_jaguar.bos:           return(corpsetype);
armada_jaguar.bos:           corpsetype = 3 ;
armada_jaguar.bos:           return(corpsetype);
armada_jaguar.bos:   corpsetype = 3 ;
armada_jaguar.bos:   return corpsetype;
Binary file armada_jaguar.cob matches
armada_liche.bos:Killed(severity, corpsetype)
armada_liche.bos:           corpsetype = 1;
armada_liche.bos:           return (corpsetype);
armada_liche.bos:           corpsetype = 2;
armada_liche.bos:           return (corpsetype);
armada_liche.bos:           corpsetype = 3;
armada_liche.bos:           return (corpsetype);
armada_liche.bos:   corpsetype = 3;
armada_liche.bos:   return corpsetype;
armada_sentry.bos:     set-signal-mask SIG_AIM;
armada_sentry.bos:Killed(severity, corpsetype)
armada_sentry.bos:             corpsetype = 1 ;
armada_sentry.bos:             return(corpsetype);
armada_sentry.bos:             corpsetype = 2 ;
armada_sentry.bos:             return(corpsetype);
armada_sentry.bos:             corpsetype = 3 ;
armada_sentry.bos:             return(corpsetype);
armada_sentry.bos:     corpsetype = 3 ;
armada_sentry.bos:     return corpsetype;
armada_lunkhead.bos:     set-signal-mask SIG_MOVE;
armada_lunkhead.bos:setSFXoccupy(state)
armada_lunkhead.bos:SetMaxReloadTime(Func_Var_1)
armada_lunkhead.bos:SetStunned(State)
armada_lunkhead.bos:     set-signal-mask SIG_AIM;
armada_lunkhead.bos:     set-signal-mask SIG_AIM_2;
armada_lunkhead.bos:Killed(severity, corpsetype)
armada_lunkhead.bos:                     corpsetype = 2;
armada_lunkhead.bos:                     return (corpsetype);
armada_lunkhead.bos:             corpsetype = 3;
armada_lunkhead.bos:             return (corpsetype);
armada_lunkhead.bos:                     corpsetype = 2;
armada_lunkhead.bos:                     return (corpsetype);
armada_lunkhead.bos:             corpsetype = 3;
armada_lunkhead.bos:             return (corpsetype);
armada_lunkhead.bos:             corpsetype = 1;
armada_lunkhead.bos:             return (corpsetype);
armada_lunkhead.bos:             corpsetype = 2;
armada_lunkhead.bos:             return (corpsetype);
armada_lunkhead.bos:             corpsetype = 3;
armada_lunkhead.bos:             return (corpsetype);
armada_lunkhead.bos:     corpsetype = 3;
armada_lunkhead.bos:     return (corpsetype);
Binary file armada_lunkhead.cob matches
armada_energyconverter.bos:Killed(severity, corpsetype)
armada_energyconverter.bos:            corpsetype = 1 ;
armada_energyconverter.bos:            return(corpsetype);
armada_energyconverter.bos:            corpsetype = 2 ;
armada_energyconverter.bos:            return(corpsetype);
armada_energyconverter.bos:            corpsetype = 3 ;
armada_energyconverter.bos:            return(corpsetype);
armada_energyconverter.bos:    corpsetype = 3 ;
armada_energyconverter.bos:    return corpsetype;
armada_starlight.bos:SetMaxReloadTime(Func_Var_1)
armada_starlight.bos:SetStunned(State)
armada_starlight.bos:   set-signal-mask SIG_AIM;
armada_starlight.bos:Killed(severity, corpsetype)
armada_starlight.bos:           corpsetype = 1 ;
armada_starlight.bos:           return(corpsetype);
armada_starlight.bos:           corpsetype = 2 ;
armada_starlight.bos:           return(corpsetype);
armada_starlight.bos:           corpsetype = 3 ;
armada_starlight.bos:           return(corpsetype);
armada_starlight.bos:   corpsetype = 3 ;
armada_starlight.bos:   return corpsetype;
Binary file armada_starlight.cob matches
armada_marauder.bos:SetMaxReloadTime(Func_Var_1)
armada_marauder.bos:SetStunned(State)
armada_marauder.bos:     set-signal-mask SIG_AIM;
armada_marauder.bos:Killed(severity, corpsetype)
armada_marauder.bos:             corpsetype = 1 ;
armada_marauder.bos:             return(corpsetype);
armada_marauder.bos:             corpsetype = 2 ;
armada_marauder.bos:             return(corpsetype);
armada_marauder.bos:             corpsetype = 3 ;
armada_marauder.bos:             return(corpsetype);
armada_marauder.bos:     corpsetype = 3 ;
armada_marauder.bos:     return corpsetype;
Binary file armada_marauder.cob matches
fgrep: armada_marauder_lus: Is a directory
armada_marauder_lus.lua:include("units/"..unitName.."_lus/setup.lua")
armada_marauder_lus.lua: InitialPiecesSetup()
armada_marauder_lus.lua: SetSignalMask(2)
armada_marauder_lus.lua: SetWantedAim(weaponID, heading, pitch)
armada_compass.bos:    set-signal-mask SIG_WALK; //you might need this
armada_compass.bos:    set-signal-mask SIG_ACTIVATE;
armada_compass.bos:    set-signal-mask SIG_ACTIVATE;
armada_compass.bos:SetStunned(State)
armada_compass.bos:Killed(severity, corpsetype)
armada_compass.bos:            corpsetype = 1 ;
armada_compass.bos:            return(corpsetype);
armada_compass.bos:            corpsetype = 2 ;
armada_compass.bos:            return(corpsetype);
armada_compass.bos:            corpsetype = 3 ;
armada_compass.bos:            return(corpsetype);
armada_compass.bos:    corpsetype = 3 ;
armada_compass.bos:    return corpsetype;
Binary file armada_compass.cob matches
armada_mauser.bos:SetMaxReloadTime(Func_Var_1)
armada_mauser.bos:SetStunned(State)
armada_mauser.bos:    set-signal-mask SIG_AIM;
armada_mauser.bos:Killed(severity, corpsetype)
armada_mauser.bos:            corpsetype = 1 ;
armada_mauser.bos:            return(corpsetype);
armada_mauser.bos:            corpsetype = 2 ;
armada_mauser.bos:            return(corpsetype);
armada_mauser.bos:            corpsetype = 3 ;
armada_mauser.bos:            return(corpsetype);
armada_mauser.bos:    corpsetype = 3 ;
armada_mauser.bos:    return corpsetype;
Binary file armada_mauser.cob matches
armada_gunslinger.bos:     //set-signal-mask SIG_WALK;
armada_gunslinger.bos:SetMaxReloadTime(Func_Var_1)
armada_gunslinger.bos:     set-signal-mask 0;
armada_gunslinger.bos:SetStunned(State)
armada_gunslinger.bos:     set-signal-mask SIG_AIM;
armada_gunslinger.bos:Killed(severity, corpsetype)
armada_gunslinger.bos:             corpsetype = 1 ;
armada_gunslinger.bos:             return(corpsetype);
armada_gunslinger.bos:             corpsetype = 2 ;
armada_gunslinger.bos:             return(corpsetype);
armada_gunslinger.bos:             corpsetype = 3 ;
armada_gunslinger.bos:             return(corpsetype);
armada_gunslinger.bos:     corpsetype = 3 ;
armada_gunslinger.bos:     return corpsetype;
Binary file armada_gunslinger.cob matches
armada_mercury.bos:SetStunned(State)
armada_mercury.bos: set-signal-mask SIG_AIM;
armada_mercury.bos: set DELAY_UNIT_VAR to 0;
armada_mercury.bos:Killed(severity, corpsetype)
armada_mercury.bos:         corpsetype = 1 ;
armada_mercury.bos:         return(corpsetype);
armada_mercury.bos:         corpsetype = 2 ;
armada_mercury.bos:         return(corpsetype);
armada_mercury.bos:         corpsetype = 3 ;
armada_mercury.bos:         return(corpsetype);
armada_mercury.bos: corpsetype = 3 ;
armada_mercury.bos: return corpsetype;
Binary file armada_mercury.cob matches
armada_ambassador.bos:    set ARMORED to 1;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:SetMaxReloadTime(Func_Var_1)
armada_ambassador.bos:    set-signal-mask 0;
armada_ambassador.bos:SetStunned(State)
armada_ambassador.bos:    set-signal-mask SIG_RESTORE;
armada_ambassador.bos:    set-signal-mask SIG_AIM;
armada_ambassador.bos:Killed(severity, corpsetype)
armada_ambassador.bos:            corpsetype = 1 ;
armada_ambassador.bos:            return(corpsetype);
armada_ambassador.bos:            corpsetype = 2 ;
armada_ambassador.bos:            return(corpsetype);
armada_ambassador.bos:            corpsetype = 3 ;
armada_ambassador.bos:            return(corpsetype);
armada_ambassador.bos:    corpsetype = 3 ;
armada_ambassador.bos:    return corpsetype;
Binary file armada_ambassador.cob matches
armada_metalextractor.bos:SetStunned(State)
armada_metalextractor.bos:SetSpeed(Func_Var_1)
armada_metalextractor.bos:Killed(severity, corpsetype)
armada_metalextractor.bos:             corpsetype = 1 ;
armada_metalextractor.bos:             return(corpsetype);
armada_metalextractor.bos:             corpsetype = 2 ;
armada_metalextractor.bos:             return(corpsetype);
armada_metalextractor.bos:             corpsetype = 3 ;
armada_metalextractor.bos:             return(corpsetype);
armada_metalextractor.bos:     corpsetype = 3 ;
armada_metalextractor.bos:     return corpsetype;
Binary file armada_metalextractor.cob matches
armada_possum.bos:              // Set values for tilt
armada_possum.bos:      set-signal-mask SIG_MOVE;
armada_possum.bos:setSFXoccupy(Func_Var_1)
armada_possum.bos:SetMaxReloadTime(Func_Var_1)
armada_possum.bos:      set-signal-mask 0;
armada_possum.bos:SetStunned(State)
armada_possum.bos:      set-signal-mask SIG_RESTORE;
armada_possum.bos:      set-signal-mask SIG_AIM;
armada_possum.bos:Killed(severity, corpsetype)
armada_possum.bos:              corpsetype = 1 ;
armada_possum.bos:              return(corpsetype);
armada_possum.bos:              corpsetype = 2 ;
armada_possum.bos:              return(corpsetype);
armada_possum.bos:              corpsetype = 3 ;
armada_possum.bos:              return(corpsetype);
armada_possum.bos:      corpsetype = 3 ;
armada_possum.bos:      return corpsetype;
Binary file armada_possum.cob matches
armada_voyager.bos:SetDirection(heading)
armada_voyager.bos:     set INBUILDSTANCE to 1;
armada_voyager.bos:     set INBUILDSTANCE to 0;
armada_voyager.bos:     set-signal-mask SIG_MOVE;
armada_voyager.bos:Killed(severity, corpsetype)
armada_voyager.bos:             corpsetype = 1 ;
armada_voyager.bos:             return(corpsetype);
armada_voyager.bos:             corpsetype = 2 ;
armada_voyager.bos:             return(corpsetype);
armada_voyager.bos:             corpsetype = 3 ;
armada_voyager.bos:             return(corpsetype);
armada_voyager.bos:     corpsetype = 3 ;
armada_voyager.bos:     return corpsetype;
Binary file armada_voyager.cob matches
armada_groundhog.bos:     set-signal-mask SIG_MOVE;
armada_groundhog.bos:     set INBUILDSTANCE to 1;
armada_groundhog.bos:     set-signal-mask SIG_BUILD;
armada_groundhog.bos:     set-signal-mask 0;
armada_groundhog.bos:     set INBUILDSTANCE to 0;
armada_groundhog.bos:Killed(severity, corpsetype)
armada_groundhog.bos:             corpsetype = 1 ;
armada_groundhog.bos:             return(corpsetype);
armada_groundhog.bos:             corpsetype = 2 ;
armada_groundhog.bos:             return(corpsetype);
armada_groundhog.bos:             corpsetype = 3 ;
armada_groundhog.bos:             return(corpsetype);
armada_groundhog.bos:     corpsetype = 3 ;
armada_groundhog.bos:     return corpsetype;
armada_advancedenergyconverter.bos:    set ARMORED to 0; //Not needed as MM in BAR have no damage modif
yer tag set
armada_advancedenergyconverter.bos:    set ARMORED to 1;
armada_advancedenergyconverter.bos:Killed(severity, corpsetype)
armada_advancedenergyconverter.bos:            corpsetype = 1 ;
armada_advancedenergyconverter.bos:            return(corpsetype);
armada_advancedenergyconverter.bos:            corpsetype = 2 ;
armada_advancedenergyconverter.bos:            return(corpsetype);
armada_advancedenergyconverter.bos:            corpsetype = 3 ;
armada_advancedenergyconverter.bos:            return(corpsetype);
armada_advancedenergyconverter.bos:    corpsetype = 3 ;
armada_advancedenergyconverter.bos:    return corpsetype;
armada_advancedmetalextractor.bos:SetStunned(State)
armada_advancedmetalextractor.bos:SetSpeed(Func_Var_1)
armada_advancedmetalextractor.bos:Killed(severity, corpsetype)
armada_advancedmetalextractor.bos:            corpsetype = 1 ;
armada_advancedmetalextractor.bos:            return(corpsetype);
armada_advancedmetalextractor.bos:            corpsetype = 2 ;
armada_advancedmetalextractor.bos:            return(corpsetype);
armada_advancedmetalextractor.bos:            corpsetype = 3 ;
armada_advancedmetalextractor.bos:            return(corpsetype);
armada_advancedmetalextractor.bos:    corpsetype = 3 ;
armada_advancedmetalextractor.bos:    return corpsetype;
Binary file armada_advancedmetalextractor.cob matches
armada_longbow.bos:SetDirection(heading)
armada_longbow.bos:SetMaxReloadTime(Func_Var_1)
armada_longbow.bos:SetStunned(State)
armada_longbow.bos:   set-signal-mask SIG_MOVE;
armada_longbow.bos:   set-signal-mask SIG_AIM;
armada_longbow.bos:   set-signal-mask SIG_AIM_3;
armada_longbow.bos:Killed(severity, corpsetype)
armada_longbow.bos:           corpsetype = 1 ;
armada_longbow.bos:           return(corpsetype);
armada_longbow.bos:           corpsetype = 2 ;
armada_longbow.bos:           return(corpsetype);
armada_longbow.bos:           corpsetype = 3 ;
armada_longbow.bos:           return(corpsetype);
armada_longbow.bos:   corpsetype = 3 ;
armada_longbow.bos:   return corpsetype;
Binary file armada_longbow.cob matches
armada_metalstorage.bos:Killed(severity, corpsetype)
armada_metalstorage.bos:           corpsetype = 1 ;
armada_metalstorage.bos:           return(corpsetype);
armada_metalstorage.bos:           corpsetype = 2 ;
armada_metalstorage.bos:           return(corpsetype);
armada_metalstorage.bos:           corpsetype = 3 ;
armada_metalstorage.bos:           return(corpsetype);
armada_metalstorage.bos:   corpsetype = 3 ;
armada_metalstorage.bos:   return corpsetype;
armada_constructionturret.bos:  set INBUILDSTANCE to 1;
armada_constructionturret.bos:  set INBUILDSTANCE to 0;
armada_constructionturret.bos:SetStunned(State)
armada_constructionturret.bos:Killed(severity, corpsetype)
armada_constructionturret.bos:          corpsetype = 1 ;
armada_constructionturret.bos:          return(corpsetype);
armada_constructionturret.bos:          corpsetype = 2 ;
armada_constructionturret.bos:          return(corpsetype);
armada_constructionturret.bos:          corpsetype = 3 ;
armada_constructionturret.bos:          return(corpsetype);
armada_constructionturret.bos:  corpsetype = 3 ;
armada_constructionturret.bos:  return corpsetype;
Binary file armada_constructionturret.cob matches
armada_constructionturretplat.bos:      set INBUILDSTANCE to 1;
armada_constructionturretplat.bos:      set INBUILDSTANCE to 0;
armada_constructionturretplat.bos:SetStunned(State)
armada_constructionturretplat.bos:Killed(severity, corpsetype)
armada_constructionturretplat.bos:              corpsetype = 1 ;
armada_constructionturretplat.bos:              return(corpsetype);
armada_constructionturretplat.bos:              corpsetype = 2 ;
armada_constructionturretplat.bos:              return(corpsetype);
armada_constructionturretplat.bos:              corpsetype = 3 ;
armada_constructionturretplat.bos:              return(corpsetype);
armada_constructionturretplat.bos:      corpsetype = 3 ;
armada_constructionturretplat.bos:      return corpsetype;
Binary file armada_constructionturretplat.cob matches
armnukevader.bos:       set-signal-mask SIG_MOVE;
armnukevader.bos:Killed(severity, corpsetype)
armnukevader.bos:               corpsetype = 1 ;
armnukevader.bos:               return(corpsetype);
armnukevader.bos:               corpsetype = 2 ;
armnukevader.bos:               return(corpsetype);
armnukevader.bos:               corpsetype = 3 ;
armnukevader.bos:               return(corpsetype);
armnukevader.bos:       corpsetype = 3 ;
armnukevader.bos:       return corpsetype;
armada_pitbull.bos:      set ARMORED to 0;
armada_pitbull.bos:      set ARMORED to 1;
armada_pitbull.bos:      set-signal-mask 0;
armada_pitbull.bos:SetStunned(State)
armada_pitbull.bos:      set-signal-mask SIG_RESTORE;
armada_pitbull.bos:SetMaxReloadTime(Func_Var_1)
armada_pitbull.bos:      set-signal-mask SIG_AIM;
armada_pitbull.bos:Killed(severity, corpsetype)
armada_pitbull.bos:              corpsetype = 1 ;
armada_pitbull.bos:              return(corpsetype);
armada_pitbull.bos:              corpsetype = 2 ;
armada_pitbull.bos:              return(corpsetype);
armada_pitbull.bos:              corpsetype = 3 ;
armada_pitbull.bos:              return(corpsetype);
armada_pitbull.bos:      corpsetype = 3 ;
armada_pitbull.bos:      return corpsetype;
Binary file armada_pitbull.cob matches
armada_blink.bos:Killed(severity, corpsetype)
armada_blink.bos:            corpsetype = 1 ;
armada_blink.bos:            return(corpsetype);
armada_blink.bos:            corpsetype = 2 ;
armada_blink.bos:            return(corpsetype);
armada_blink.bos:            corpsetype = 3 ;
armada_blink.bos:            return(corpsetype);
armada_blink.bos:    corpsetype = 3 ;
armada_blink.bos:    return corpsetype;
armada_pincer.bos:SetMaxReloadTime(Func_Var_1)
armada_pincer.bos:SetStunned(State)
armada_pincer.bos:  set-signal-mask SIG_AIM;
armada_pincer.bos:Killed(severity, corpsetype)
armada_pincer.bos:          corpsetype = 1 ;
armada_pincer.bos:          return(corpsetype);
armada_pincer.bos:          corpsetype = 2 ;
armada_pincer.bos:          return(corpsetype);
armada_pincer.bos:          corpsetype = 3 ;
armada_pincer.bos:          return(corpsetype);
armada_pincer.bos:  corpsetype = 3 ;
armada_pincer.bos:  return corpsetype;
Binary file armada_pincer.cob matches
armada_seaplaneplatform.bos:    set ARMORED to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
armada_seaplaneplatform.bos:    set YARD_OPEN to 1;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 1;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set YARD_OPEN to 0;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 0;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 1;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
armada_seaplaneplatform.bos:    set-signal-mask SIG_ACTIVATE;
armada_seaplaneplatform.bos:    set-signal-mask 0;
armada_seaplaneplatform.bos:Killed(severity, corpsetype)
armada_seaplaneplatform.bos:            corpsetype = 1 ;
armada_seaplaneplatform.bos:            return(corpsetype);
armada_seaplaneplatform.bos:            corpsetype = 2 ;
armada_seaplaneplatform.bos:            return(corpsetype);
armada_seaplaneplatform.bos:            corpsetype = 3 ;
armada_seaplaneplatform.bos:            return(corpsetype);
armada_seaplaneplatform.bos:    corpsetype = 3 ;
armada_seaplaneplatform.bos:    return corpsetype;
armada_blizzard.bos:Killed(severity, corpsetype)
armada_blizzard.bos:            corpsetype = 1 ;
armada_blizzard.bos:            return(corpsetype);
armada_blizzard.bos:            corpsetype = 2 ;
armada_blizzard.bos:            return(corpsetype);
armada_blizzard.bos:            corpsetype = 3 ;
armada_blizzard.bos:            return(corpsetype);
armada_blizzard.bos:    corpsetype = 3 ;
armada_blizzard.bos:    return corpsetype;
armada_ellysaw.bos:SetDirection(heading)
armada_ellysaw.bos:   set-signal-mask 4096;
armada_ellysaw.bos:SetMaxReloadTime(Func_Var_1)
armada_ellysaw.bos:   set-signal-mask 0;
armada_ellysaw.bos:SetStunned(State)
armada_ellysaw.bos:   set-signal-mask SIG_MOVE;
armada_ellysaw.bos:   set-signal-mask SIG_AIM;
armada_ellysaw.bos:   set-signal-mask SIG_AIM_2;
armada_ellysaw.bos:Killed(severity, corpsetype)
armada_ellysaw.bos:           corpsetype = 1;
armada_ellysaw.bos:           return (corpsetype);
armada_ellysaw.bos:           corpsetype = 2;
armada_ellysaw.bos:           return (corpsetype);
armada_ellysaw.bos:   corpsetype = 3;
armada_ellysaw.bos:   return corpsetype;
Binary file armada_ellysaw.cob matches
armada_skater.bos:SetDirection(heading)
armada_skater.bos:SetMaxReloadTime(Func_Var_1)
armada_skater.bos:      set-signal-mask 0;
armada_skater.bos:SetStunned(State)
armada_skater.bos:      set-signal-mask SIG_MOVE;
armada_skater.bos:      set-signal-mask SIG_AIM_3;
armada_skater.bos:      set-signal-mask SIG_AIM;
armada_skater.bos:Killed(severity, corpsetype)
armada_skater.bos:              corpsetype = 1 ;
armada_skater.bos:              return(corpsetype);
armada_skater.bos:              corpsetype = 2 ;
armada_skater.bos:              return(corpsetype);
armada_skater.bos:              corpsetype = 3 ;
armada_skater.bos:              return(corpsetype);
armada_skater.bos:      corpsetype = 3 ;
armada_skater.bos:      return corpsetype;
Binary file armada_skater.cob matches
armada_harpoon2.bos:SetStunned(State)
armada_harpoon2.bos:     set-signal-mask SIG_AIM;
armada_harpoon2.bos:Killed(severity, corpsetype)
armada_harpoon2.bos:             corpsetype = 1 ;
armada_harpoon2.bos:             return(corpsetype);
armada_harpoon2.bos:             corpsetype = 2 ;
armada_harpoon2.bos:             return(corpsetype);
armada_harpoon2.bos:             corpsetype = 3 ;
armada_harpoon2.bos:             return(corpsetype);
armada_harpoon2.bos:     corpsetype = 3 ;
armada_harpoon2.bos:     return corpsetype;
Binary file armada_harpoon2.cob matches
armada_pawn.bos:      set-signal-mask SIG_MOVE;
armada_pawn.bos:              set-signal-mask (SIG_AIM | SIG_MOVE);
armada_pawn.bos:              bAnimate = TRUE; // this sets animation started, so that
 StopAnimate knows that it should restore state quickly
armada_pawn.bos:      start-script InitialSetup1();
armada_pawn.bos:SetMaxReloadTime(Func_Var_1)
armada_pawn.bos:SetStunned(State)
armada_pawn.bos:      set-signal-mask SIG_AIM;
armada_pawn.bos:      start-script Weapon1SetWtdAim(heading, pitch);
armada_pawn.bos:Killed(severity, corpsetype)
armada_pawn.bos:              corpsetype = 1;
armada_pawn.bos:              return (corpsetype);
armada_pawn.bos:              corpsetype = 2;
armada_pawn.bos:              return (corpsetype);
armada_pawn.bos:              corpsetype = 3;
armada_pawn.bos:              return (corpsetype);
armada_pawn.bos:      corpsetype = 3;
armada_pawn.bos:      return corpsetype;
Binary file armada_pawn.cob matches
armada_radartower.bos:Killed(severity, corpsetype)
armada_radartower.bos:             corpsetype = 1 ;
armada_radartower.bos:             return(corpsetype);
armada_radartower.bos:             corpsetype = 2 ;
armada_radartower.bos:             return(corpsetype);
armada_radartower.bos:             corpsetype = 3 ;
armada_radartower.bos:             return(corpsetype);
armada_radartower.bos:     corpsetype = 3 ;
armada_radartower.bos:     return corpsetype;
armada_razorback.bos:     set-signal-mask 16;
armada_razorback.bos:     set-signal-mask SIG_AIM;
armada_razorback.bos:Killed(severity, corpsetype)
armada_razorback.bos:             corpsetype = 1 ;
armada_razorback.bos:             corpsetype = 2 ;
armada_razorback.bos:             corpsetype = 3 ;
armada_razorback.bos:     corpsetype = 3 ;
armada_grimreaper.bos:    set INBUILDSTANCE to 1;
armada_grimreaper.bos:    set INBUILDSTANCE to 0;
armada_grimreaper.bos:Killed(severity, corpsetype)
armada_grimreaper.bos:            corpsetype = 1 ;
armada_grimreaper.bos:            return(corpsetype);
armada_grimreaper.bos:            corpsetype = 2 ;
armada_grimreaper.bos:            return(corpsetype);
armada_grimreaper.bos:            corpsetype = 3 ;
armada_grimreaper.bos:            return(corpsetype);
armada_grimreaper.bos:    corpsetype = 3 ;
armada_grimreaper.bos:    return corpsetype;
armada_lazarus.bos:   //set-signal-mask SIG_WALK;
armada_lazarus.bos:   set-signal-mask SIG_BUILD;
armada_lazarus.bos:   set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 1;
armada_lazarus.bos:   set-signal-mask SIG_BUILD;
armada_lazarus.bos:   set-signal-mask 0;
armada_lazarus.bos:Killed(severity, corpsetype)
armada_lazarus.bos:           corpsetype = 1 ;
armada_lazarus.bos:           return(corpsetype);
armada_lazarus.bos:           corpsetype = 2 ;
armada_lazarus.bos:           return(corpsetype);
armada_lazarus.bos:           corpsetype = 3 ;
armada_lazarus.bos:           return(corpsetype);
armada_lazarus.bos:   corpsetype = 3 ;
armada_lazarus.bos:   return corpsetype;
armrectrt4.bos: //set-signal-mask SIG_WALK;
armrectrt4.bos: set-signal-mask SIG_BUILD;
armrectrt4.bos: set INBUILDSTANCE to 0;
armrectrt4.bos: set INBUILDSTANCE to 1;
armrectrt4.bos: set-signal-mask SIG_BUILD;
armrectrt4.bos: set-signal-mask 0;
armrectrt4.bos:Killed(severity, corpsetype)
armrectrt4.bos:         corpsetype = 1 ;
armrectrt4.bos:         return(corpsetype);
armrectrt4.bos:         corpsetype = 2 ;
armrectrt4.bos:         return(corpsetype);
armrectrt4.bos:         corpsetype = 3 ;
armrectrt4.bos:         return(corpsetype);
armrectrt4.bos: corpsetype = 3 ;
armrectrt4.bos: return corpsetype;
armada_nettle.bos:SetStunned(State)
armada_nettle.bos:      set-signal-mask SIG_AIM;
armada_nettle.bos:Killed(severity, corpsetype)
armada_nettle.bos:              corpsetype = 1 ;
armada_nettle.bos:              return(corpsetype);
armada_nettle.bos:              corpsetype = 2 ;
armada_nettle.bos:              return(corpsetype);
armada_nettle.bos:              corpsetype = 3 ;
armada_nettle.bos:              return(corpsetype);
armada_nettle.bos:      corpsetype = 3 ;
armada_nettle.bos:      return corpsetype;
Binary file armada_nettle.cob matches
armada_rocketeer.bos:    set-signal-mask SIG_WALK;
armada_rocketeer.bos:SetMaxReloadTime(Func_Var_1)
armada_rocketeer.bos:SetStunned(State)
armada_rocketeer.bos:    set-signal-mask SIG_AIM;
armada_rocketeer.bos:Killed(severity, corpsetype)
armada_rocketeer.bos:            corpsetype = 1 ;
armada_rocketeer.bos:            return(corpsetype);
armada_rocketeer.bos:            corpsetype = 2 ;
armada_rocketeer.bos:            return(corpsetype);
armada_rocketeer.bos:            corpsetype = 3 ;
armada_rocketeer.bos:            return(corpsetype);
armada_rocketeer.bos:    corpsetype = 3 ;
armada_rocketeer.bos:    return corpsetype;
Binary file armada_rocketeer.cob matches
armada_corsair.bos:     set-signal-mask SIG_ROCK;
armada_corsair.bos:SetDirection(heading)
armada_corsair.bos:SetMaxReloadTime(Func_Var_1)
armada_corsair.bos:     set-signal-mask 0;
armada_corsair.bos:SetStunned(State)
armada_corsair.bos:     set-signal-mask SIG_MOVE;
armada_corsair.bos:     set-signal-mask SIG_AIM;
armada_corsair.bos:Killed(severity, corpsetype)
armada_corsair.bos:             corpsetype = 1 ;
armada_corsair.bos:             return(corpsetype);
armada_corsair.bos:             corpsetype = 2 ;
armada_corsair.bos:             return(corpsetype);
armada_corsair.bos:             corpsetype = 3 ;
armada_corsair.bos:             return(corpsetype);
armada_corsair.bos:     corpsetype = 3 ;
armada_corsair.bos:     return corpsetype;
Binary file armada_corsair.cob matches
armada_sabre.bos:   set-signal-mask 0;
armada_sabre.bos:SetStunned(State)
armada_sabre.bos:setSFXoccupy(Func_Var_1)
armada_sabre.bos:Killed(severity, corpsetype)
armada_sabre.bos:           corpsetype = 1 ;
armada_sabre.bos:           return(corpsetype);
armada_sabre.bos:           corpsetype = 2 ;
armada_sabre.bos:           return(corpsetype);
armada_sabre.bos:           corpsetype = 3 ;
armada_sabre.bos:           return(corpsetype);
armada_sabre.bos:   corpsetype = 3 ;
armada_sabre.bos:   return corpsetype;
Binary file armada_sabre.cob matches
armada_whistler.bos:SetMaxReloadTime(Func_Var_1)
armada_whistler.bos:SetStunned(State)
armada_whistler.bos:     set-signal-mask SIG_AIM;
armada_whistler.bos:Killed(severity, corpsetype)
armada_whistler.bos:             corpsetype = 1 ;
armada_whistler.bos:             return(corpsetype);
armada_whistler.bos:             corpsetype = 2 ;
armada_whistler.bos:             return(corpsetype);
armada_whistler.bos:             corpsetype = 3 ;
armada_whistler.bos:             return(corpsetype);
armada_whistler.bos:     corpsetype = 3 ;
armada_whistler.bos:     return corpsetype;
Binary file armada_whistler.cob matches
armada_tsunami.bos:setSFXoccupy(Func_Var_1)
armada_tsunami.bos:Killed(severity, corpsetype)
armada_tsunami.bos:              corpsetype = 1 ;
armada_tsunami.bos:              return(corpsetype);
armada_tsunami.bos:              corpsetype = 2 ;
armada_tsunami.bos:              return(corpsetype);
armada_tsunami.bos:              corpsetype = 3 ;
armada_tsunami.bos:              return(corpsetype);
armada_tsunami.bos:      corpsetype = 3 ;
armada_tsunami.bos:      return corpsetype;
Binary file armada_tsunami.cob matches
armada_umbrella.bos:    //set-signal-mask SIG_WALK;
armada_umbrella.bos:    set-signal-mask 0;
armada_umbrella.bos:SetStunned(State)
armada_umbrella.bos:    set-signal-mask SIG_AIM;
armada_umbrella.bos:Killed(severity, corpsetype)
armada_umbrella.bos:            corpsetype = 1 ;
armada_umbrella.bos:            return(corpsetype);
armada_umbrella.bos:            corpsetype = 2 ;
armada_umbrella.bos:            return(corpsetype);
armada_umbrella.bos:            corpsetype = 3 ;
armada_umbrella.bos:            return(corpsetype);
armada_umbrella.bos:    corpsetype = 3 ;
armada_umbrella.bos:    return corpsetype;
Binary file armada_umbrella.cob matches
armada_tracer.bos:Killed(severity, corpsetype)
armada_tracer.bos:              corpsetype = 1 ;
armada_tracer.bos:              return(corpsetype);
armada_tracer.bos:              corpsetype = 2 ;
armada_tracer.bos:              return(corpsetype);
armada_tracer.bos:              corpsetype = 3 ;
armada_tracer.bos:              return(corpsetype);
armada_tracer.bos:      corpsetype = 3 ;
armada_tracer.bos:      return corpsetype;
armada_puffin.bos:    set-signal-mask SIG_MOVE;
armada_puffin.bos:Killed(severity, corpsetype)
armada_puffin.bos:            corpsetype = 1 ;
armada_puffin.bos:            return(corpsetype);
armada_puffin.bos:            corpsetype = 2 ;
armada_puffin.bos:            return(corpsetype);
armada_puffin.bos:            corpsetype = 3 ;
armada_puffin.bos:            return(corpsetype);
armada_puffin.bos:    corpsetype = 3 ;
armada_puffin.bos:    return corpsetype;
armada_prophet.bos:    set-signal-mask SIG_ACTIVATE;
armada_prophet.bos:    set-signal-mask SIG_ACTIVATE;
armada_prophet.bos:SetStunned(State)
armada_prophet.bos:Killed(severity, corpsetype)
armada_prophet.bos:            corpsetype = 1 ;
armada_prophet.bos:            return(corpsetype);
armada_prophet.bos:            corpsetype = 2 ;
armada_prophet.bos:            return(corpsetype);
armada_prophet.bos:            corpsetype = 3 ;
armada_prophet.bos:            return(corpsetype);
armada_prophet.bos:    corpsetype = 3 ;
armada_prophet.bos:    return corpsetype;
Binary file armada_prophet.cob matches
armada_horizon.bos:   set-signal-mask SIG_MOVE;
armada_horizon.bos:setSFXoccupy(Func_Var_1)
armada_horizon.bos:Killed(severity, corpsetype)
armada_horizon.bos:           corpsetype = 1 ;
armada_horizon.bos:           return(corpsetype);
armada_horizon.bos:           corpsetype = 2 ;
armada_horizon.bos:           return(corpsetype);
armada_horizon.bos:           corpsetype = 3 ;
armada_horizon.bos:           return(corpsetype);
armada_horizon.bos:   corpsetype = 3 ;
armada_horizon.bos:   return corpsetype;
Binary file armada_horizon.cob matches
armada_serpent.bos:            // Set values for tilt
armada_serpent.bos:    set-signal-mask SIG_MOVE;
armada_serpent.bos:    set-signal-mask SIG_MOVE;
armada_serpent.bos:SetStunned(State)
armada_serpent.bos:    set-signal-mask SIG_AIM;
armada_serpent.bos:Killed(severity, corpsetype)
armada_serpent.bos:            corpsetype = 1 ;
armada_serpent.bos:            return(corpsetype);
armada_serpent.bos:            corpsetype = 2 ;
armada_serpent.bos:            return(corpsetype);
armada_serpent.bos:            corpsetype = 3 ;
armada_serpent.bos:            return(corpsetype);
armada_serpent.bos:    corpsetype = 3 ;
armada_serpent.bos:    return corpsetype;
Binary file armada_serpent.cob matches
armada_cyclone.bos:    set-signal-mask SIG_MOVE;
armada_cyclone.bos:Killed(severity, corpsetype)
armada_cyclone.bos:            corpsetype = 1 ;
armada_cyclone.bos:            return(corpsetype);
armada_cyclone.bos:            corpsetype = 2 ;
armada_cyclone.bos:            return(corpsetype);
armada_cyclone.bos:            corpsetype = 3 ;
armada_cyclone.bos:            return(corpsetype);
armada_cyclone.bos:    corpsetype = 3 ;
armada_cyclone.bos:    return corpsetype;
armada_seeker.bos:              // Set values for tilt
armada_seeker.bos:      set-signal-mask SIG_MOVE;
armada_seeker.bos:setSFXoccupy(Func_Var_1)
armada_seeker.bos:SetMaxReloadTime(Func_Var_1)
armada_seeker.bos:      set-signal-mask 0;
armada_seeker.bos:SetStunned(State)
armada_seeker.bos:      set-signal-mask SIG_AIM;
armada_seeker.bos:Killed(severity, corpsetype)
armada_seeker.bos:              corpsetype = 1 ;
armada_seeker.bos:              return(corpsetype);
armada_seeker.bos:              corpsetype = 2 ;
armada_seeker.bos:              return(corpsetype);
armada_seeker.bos:              corpsetype = 3 ;
armada_seeker.bos:              return(corpsetype);
armada_seeker.bos:      corpsetype = 3 ;
armada_seeker.bos:      return corpsetype;
Binary file armada_seeker.cob matches
armada_experimentalgantry.bos:   set YARD_OPEN to 1;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 1;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set YARD_OPEN to 0;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 0;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 1;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 0;
armada_experimentalgantry.bos:   set-signal-mask SIG_ACTIVATE;
armada_experimentalgantry.bos:   set-signal-mask 0;
armada_experimentalgantry.bos:Killed(severity, corpsetype)
armada_experimentalgantry.bos:           corpsetype = 1 ;
armada_experimentalgantry.bos:           return(corpsetype);
armada_experimentalgantry.bos:           corpsetype = 2 ;
armada_experimentalgantry.bos:           return(corpsetype);
armada_experimentalgantry.bos:           corpsetype = 3 ;
armada_experimentalgantry.bos:           return(corpsetype);
armada_experimentalgantry.bos:   corpsetype = 3 ;
armada_experimentalgantry.bos:   return corpsetype;
armada_armageddon.bos:// OffsetToScriptCodeIndexArray        c08
armada_armageddon.bos:// OffsetToScriptNameOffsetArray       c4c
armada_armageddon.bos:// OffsetToPieceNameOffsetArray        c90
armada_armageddon.bos:// OffsetToScriptCode                  2c
armada_armageddon.bos:// OffsetToNameArray                   ca4
armada_armageddon.bos:// OffsetToFirstName                   ca4
armada_armageddon.bos:SetMaxReloadTime(Func_Var_1)
armada_armageddon.bos:/*   217:*/ set-signal-mask 0;
armada_armageddon.bos:/*   22c:*/ set-signal-mask SIG_AIM;
armada_armageddon.bos:Killed(severity, corpsetype)
armada_armageddon.bos:            corpsetype = 1 ;
armada_armageddon.bos:            return(corpsetype);
armada_armageddon.bos:            corpsetype = 2 ;
armada_armageddon.bos:            return(corpsetype);
armada_armageddon.bos:            corpsetype = 3 ;
armada_armageddon.bos:            return(corpsetype);
armada_armageddon.bos:    corpsetype = 3 ;
armada_armageddon.bos:    return corpsetype;
Binary file armada_armageddon.cob matches
armada_bermuda.bos:SetDirection(heading)
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set-signal-mask 4;
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 100;
armada_bermuda.bos:    set-signal-mask SIG_MOVE;
armada_bermuda.bos:Killed(severity, corpsetype)
armada_bermuda.bos:            corpsetype = 1 ;
armada_bermuda.bos:            return(corpsetype);
armada_bermuda.bos:            corpsetype = 2 ;
armada_bermuda.bos:            return(corpsetype);
armada_bermuda.bos:            corpsetype = 3 ;
armada_bermuda.bos:            return(corpsetype);
armada_bermuda.bos:    corpsetype = 3 ;
armada_bermuda.bos:    return corpsetype;
Binary file armada_bermuda.cob matches
armada_sharpshooter.bos:   //set-signal-mask SIG_WALK;
armada_sharpshooter.bos:SetMaxReloadTime(Func_Var_1)
armada_sharpshooter.bos:   set-signal-mask 0;
armada_sharpshooter.bos:SetStunned(State)
armada_sharpshooter.bos:   set-signal-mask SIG_AIM;
armada_sharpshooter.bos:Killed(severity, corpsetype)
armada_sharpshooter.bos:           corpsetype = 1 ;
armada_sharpshooter.bos:           return(corpsetype);
armada_sharpshooter.bos:           corpsetype = 2 ;
armada_sharpshooter.bos:           return(corpsetype);
armada_sharpshooter.bos:           corpsetype = 3 ;
armada_sharpshooter.bos:           return(corpsetype);
armada_sharpshooter.bos:   corpsetype = 3 ;
armada_sharpshooter.bos:   return corpsetype;
Binary file armada_sharpshooter.cob matches
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 1;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 0;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:   set ARMORED to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:   set ARMORED to 1;
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set-signal-mask 2;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 100;
armada_solarcollector.bos:Killed(severity, corpsetype)
armada_solarcollector.bos:           corpsetype = 1 ;
armada_solarcollector.bos:           return(corpsetype);
armada_solarcollector.bos:           corpsetype = 2 ;
armada_solarcollector.bos:           return(corpsetype);
armada_solarcollector.bos:           corpsetype = 3 ;
armada_solarcollector.bos:           return(corpsetype);
armada_solarcollector.bos:   corpsetype = 3 ;
armada_solarcollector.bos:   return corpsetype;
armada_sonarstation.bos:Killed(severity, corpsetype)
armada_sonarstation.bos:           corpsetype = 1 ;
armada_sonarstation.bos:           return(corpsetype);
armada_sonarstation.bos:           corpsetype = 2 ;
armada_sonarstation.bos:           return(corpsetype);
armada_sonarstation.bos:           corpsetype = 3 ;
armada_sonarstation.bos:           return(corpsetype);
armada_sonarstation.bos:   corpsetype = 3 ;
armada_sonarstation.bos:   return corpsetype;
armada_webber.bos:    //set-signal-mask SIG_WALK;
armada_webber.bos:SetMaxReloadTime(t)
armada_webber.bos:SetStunned(State)
armada_webber.bos:    set-signal-mask SIG_AIM;
armada_webber.bos:Killed(severity, corpsetype)
armada_webber.bos:            corpsetype = 1 ;
armada_webber.bos:            return(corpsetype);
armada_webber.bos:            corpsetype = 2 ;
armada_webber.bos:            return(corpsetype);
armada_webber.bos:            corpsetype = 3 ;
armada_webber.bos:            return(corpsetype);
armada_webber.bos:    corpsetype = 3 ;
armada_webber.bos:    return corpsetype;
Binary file armada_webber.cob matches
armada_recluse.bos:    //set-signal-mask SIG_WALK;
armada_recluse.bos:SetMaxReloadTime(t)
armada_recluse.bos:    set-signal-mask SIG_FIRE1;
armada_recluse.bos:    set-signal-mask 0;
armada_recluse.bos:SetStunned(State)
armada_recluse.bos:    set-signal-mask SIG_AIM;
armada_recluse.bos:Killed(severity, corpsetype)
armada_recluse.bos:            corpsetype = 1 ;
armada_recluse.bos:            return(corpsetype);
armada_recluse.bos:            corpsetype = 2 ;
armada_recluse.bos:            return(corpsetype);
armada_recluse.bos:            corpsetype = 3 ;
armada_recluse.bos:            return(corpsetype);
armada_recluse.bos:    corpsetype = 3 ;
armada_recluse.bos:    return corpsetype;
Binary file armada_recluse.cob matches
armada_ghost.bos:     //set-signal-mask SIG_WALK;
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:     set-signal-mask SIG_ACTIVATE;
armada_ghost.bos:     set INBUILDSTANCE to 1;
armada_ghost.bos:     set INBUILDSTANCE to 0;
armada_ghost.bos:     set-signal-mask SIG_ACTIVATE;
armada_ghost.bos:             set-signal-mask 4;
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:             set ACTIVATION to 100;
armada_ghost.bos:Killed(severity, corpsetype)
armada_ghost.bos:             corpsetype = 1 ;
armada_ghost.bos:             return(corpsetype);
armada_ghost.bos:             corpsetype = 2 ;
armada_ghost.bos:             return(corpsetype);
armada_ghost.bos:             corpsetype = 3 ;
armada_ghost.bos:             return(corpsetype);
armada_ghost.bos:     corpsetype = 3 ;
armada_ghost.bos:     return corpsetype;
armada_stiletto.bos:Killed(severity, corpsetype)
armada_stiletto.bos:            corpsetype = 1 ;
armada_stiletto.bos:            return(corpsetype);
armada_stiletto.bos:            corpsetype = 2 ;
armada_stiletto.bos:            return(corpsetype);
armada_stiletto.bos:            corpsetype = 3 ;
armada_stiletto.bos:            return(corpsetype);
armada_stiletto.bos:    corpsetype = 3 ;
armada_stiletto.bos:    return corpsetype;
armada_stout.bos:SetMaxReloadTime(Func_Var_1)
armada_stout.bos:SetStunned(State)
armada_stout.bos:   set-signal-mask SIG_AIM;
armada_stout.bos:Killed(severity, corpsetype)
armada_stout.bos:           corpsetype = 1 ;
armada_stout.bos:           return(corpsetype);
armada_stout.bos:           corpsetype = 2 ;
armada_stout.bos:           return(corpsetype);
armada_stout.bos:           corpsetype = 3 ;
armada_stout.bos:           return(corpsetype);
armada_stout.bos:   corpsetype = 3 ;
armada_stout.bos:   return corpsetype;
Binary file armada_stout.cob matches
armada_eel.bos:     set-signal-mask SIG_MOVE;
armada_eel.bos:SetStunned(State)
armada_eel.bos:     set-signal-mask SIG_AIM;
armada_eel.bos:Killed(severity, corpsetype)
armada_eel.bos:             corpsetype = 1 ;
armada_eel.bos:             return(corpsetype);
armada_eel.bos:             corpsetype = 2 ;
armada_eel.bos:             return(corpsetype);
armada_eel.bos:             corpsetype = 3 ;
armada_eel.bos:             return(corpsetype);
armada_eel.bos:     corpsetype = 3 ;
armada_eel.bos:     return corpsetype;
Binary file armada_eel.cob matches
armada_barracuda.bos:    set-signal-mask SIG_MOVE;
armada_barracuda.bos:Killed(severity, corpsetype)
armada_barracuda.bos:            corpsetype = 1 ;
armada_barracuda.bos:            return(corpsetype);
armada_barracuda.bos:            corpsetype = 2 ;
armada_barracuda.bos:            return(corpsetype);
armada_barracuda.bos:            corpsetype = 3 ;
armada_barracuda.bos:            return(corpsetype);
armada_barracuda.bos:    corpsetype = 3 ;
armada_barracuda.bos:    return corpsetype;
armada_shipyard.bos:      set YARD_OPEN to 1;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 1;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set YARD_OPEN to 0;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 0;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set INBUILDSTANCE to 1;
armada_shipyard.bos:      set INBUILDSTANCE to 0;
armada_shipyard.bos:      set-signal-mask SIG_ACTIVATE;
armada_shipyard.bos:      set-signal-mask 0;
armada_shipyard.bos:Killed(severity, corpsetype)
armada_shipyard.bos:              corpsetype = 1 ;
armada_shipyard.bos:              return(corpsetype);
armada_shipyard.bos:              corpsetype = 2 ;
armada_shipyard.bos:              return(corpsetype);
armada_shipyard.bos:              corpsetype = 3 ;
armada_shipyard.bos:              return(corpsetype);
armada_shipyard.bos:      corpsetype = 3 ;
armada_shipyard.bos:      return corpsetype;
armada_pinpointer.bos:    set ARMORED to 1;
armada_pinpointer.bos:    set-signal-mask 2;
armada_pinpointer.bos:    set ACTIVATION to 0;
armada_pinpointer.bos:    set ACTIVATION to 1;
armada_pinpointer.bos:Killed(severity, corpsetype)
armada_pinpointer.bos:            corpsetype = 1 ;
armada_pinpointer.bos:            return(corpsetype);
armada_pinpointer.bos:            corpsetype = 2 ;
armada_pinpointer.bos:            return(corpsetype);
armada_pinpointer.bos:            corpsetype = 3 ;
armada_pinpointer.bos:            return(corpsetype);
armada_pinpointer.bos:    corpsetype = 3 ;
armada_pinpointer.bos:    return corpsetype;
armada_bearer.bos:           // Set values for tilt
armada_bearer.bos:   set-signal-mask SIG_MOVE;
armada_bearer.bos:setSFXoccupy(Func_Var_1)
armada_bearer.bos:   set-signal-mask 4;
armada_bearer.bos:BoomReset()
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           call-script BoomReset();
armada_bearer.bos:           set BUSY to 0;
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           call-script BoomReset();
armada_bearer.bos:           set BUSY to 0;
armada_bearer.bos:Killed(severity, corpsetype)
armada_bearer.bos:           corpsetype = 1 ;
armada_bearer.bos:           return(corpsetype);
armada_bearer.bos:           corpsetype = 2 ;
armada_bearer.bos:           return(corpsetype);
armada_bearer.bos:           corpsetype = 3 ;
armada_bearer.bos:           return(corpsetype);
armada_bearer.bos:   corpsetype = 3 ;
armada_bearer.bos:   return corpsetype;
Binary file armada_bearer.cob matches
armada_stormbringer.bos:Killed(severity, corpsetype)
armada_stormbringer.bos:           corpsetype = 1 ;
armada_stormbringer.bos:           return(corpsetype);
armada_stormbringer.bos:           corpsetype = 2 ;
armada_stormbringer.bos:           return(corpsetype);
armada_stormbringer.bos:           corpsetype = 3 ;
armada_stormbringer.bos:           return(corpsetype);
armada_stormbringer.bos:   corpsetype = 3 ;
armada_stormbringer.bos:   return corpsetype;
armada_tidalgenerator.bos:Killed(severity, corpsetype)
armada_tidalgenerator.bos:            corpsetype = 1 ;
armada_tidalgenerator.bos:            return(corpsetype);
armada_tidalgenerator.bos:            corpsetype = 2 ;
armada_tidalgenerator.bos:            return(corpsetype);
armada_tidalgenerator.bos:            corpsetype = 3 ;
armada_tidalgenerator.bos:            return(corpsetype);
armada_tidalgenerator.bos:    corpsetype = 3 ;
armada_tidalgenerator.bos:    return corpsetype;
armada_harpoon.bos:SetStunned(State)
armada_harpoon.bos:      set-signal-mask SIG_AIM;
armada_harpoon.bos:Killed(severity, corpsetype)
armada_harpoon.bos:              corpsetype = 1 ;
armada_harpoon.bos:              return(corpsetype);
armada_harpoon.bos:              corpsetype = 2 ;
armada_harpoon.bos:              return(corpsetype);
armada_harpoon.bos:              corpsetype = 3 ;
armada_harpoon.bos:              return(corpsetype);
armada_harpoon.bos:      corpsetype = 3 ;
armada_harpoon.bos:      return corpsetype;
Binary file armada_harpoon.cob matches
armada_convoy.bos:   set-signal-mask SIG_MOVE;
armada_convoy.bos:   set-signal-mask 4;
armada_convoy.bos:BoomReset()
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           call-script BoomReset();
armada_convoy.bos:           set BUSY to 0;
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           call-script BoomReset();
armada_convoy.bos:           set BUSY to 0;
armada_convoy.bos:Killed(severity, corpsetype)
armada_convoy.bos:           corpsetype = 1 ;
armada_convoy.bos:           return(corpsetype);
armada_convoy.bos:           corpsetype = 2 ;
armada_convoy.bos:           return(corpsetype);
armada_convoy.bos:           corpsetype = 3 ;
armada_convoy.bos:           return(corpsetype);
armada_convoy.bos:   corpsetype = 3 ;
armada_convoy.bos:   return corpsetype;
Binary file armada_convoy.cob matches
armada_hardenedenergystorage.bos:Killed(severity, corpsetype)
armada_hardenedenergystorage.bos:         corpsetype = 1 ;
armada_hardenedenergystorage.bos:         return(corpsetype);
armada_hardenedenergystorage.bos:         corpsetype = 2 ;
armada_hardenedenergystorage.bos:         return(corpsetype);
armada_hardenedenergystorage.bos:         corpsetype = 3 ;
armada_hardenedenergystorage.bos:         return(corpsetype);
armada_hardenedenergystorage.bos: corpsetype = 3 ;
armada_hardenedenergystorage.bos: return corpsetype;
armada_hardenedmetalstorage.bos:Killed(severity, corpsetype)
armada_hardenedmetalstorage.bos:         corpsetype = 1 ;
armada_hardenedmetalstorage.bos:         return(corpsetype);
armada_hardenedmetalstorage.bos:         corpsetype = 2 ;
armada_hardenedmetalstorage.bos:         return(corpsetype);
armada_hardenedmetalstorage.bos:         corpsetype = 3 ;
armada_hardenedmetalstorage.bos:         return(corpsetype);
armada_hardenedmetalstorage.bos: corpsetype = 3 ;
armada_hardenedmetalstorage.bos: return corpsetype;
armada_navalenergystorage.bos:Killed(severity, corpsetype)
armada_navalenergystorage.bos:            corpsetype = 1 ;
armada_navalenergystorage.bos:            return(corpsetype);
armada_navalenergystorage.bos:            corpsetype = 2 ;
armada_navalenergystorage.bos:            return(corpsetype);
armada_navalenergystorage.bos:            corpsetype = 3 ;
armada_navalenergystorage.bos:            return(corpsetype);
armada_navalenergystorage.bos:    corpsetype = 3 ;
armada_navalenergystorage.bos:    return corpsetype;
armada_navalfusionreactor.bos:Killed(severity, corpsetype)
armada_navalfusionreactor.bos:           corpsetype = 1 ;
armada_navalfusionreactor.bos:           return(corpsetype);
armada_navalfusionreactor.bos:           corpsetype = 2 ;
armada_navalfusionreactor.bos:           return(corpsetype);
armada_navalfusionreactor.bos:           corpsetype = 3 ;
armada_navalfusionreactor.bos:           return(corpsetype);
armada_navalfusionreactor.bos:   corpsetype = 3 ;
armada_navalfusionreactor.bos:   return corpsetype;
armada_navalmetalextractor.bos:   set-signal-mask SIG_ACTIVATE;
armada_navalmetalextractor.bos:SetSpeed(Func_Var_1)
armada_navalmetalextractor.bos:Killed(severity, corpsetype)
armada_navalmetalextractor.bos:           corpsetype = 1 ;
armada_navalmetalextractor.bos:           return(corpsetype);
armada_navalmetalextractor.bos:           corpsetype = 2 ;
armada_navalmetalextractor.bos:           return(corpsetype);
armada_navalmetalextractor.bos:           corpsetype = 3 ;
armada_navalmetalextractor.bos:           return(corpsetype);
armada_navalmetalextractor.bos:   corpsetype = 3 ;
armada_navalmetalextractor.bos:   return corpsetype;
Binary file armada_navalmetalextractor.cob matches
armada_navaladvancedmetalextractor.bos:   set-signal-mask SIG_WORK;
armada_navaladvancedmetalextractor.bos:   set-signal-mask SIG_ACTIVATE;
armada_navaladvancedmetalextractor.bos:SetSpeed(Func_Var_1)
armada_navaladvancedmetalextractor.bos:Killed(severity, corpsetype)
armada_navaladvancedmetalextractor.bos:           corpsetype = 1 ;
armada_navaladvancedmetalextractor.bos:           return(corpsetype);
armada_navaladvancedmetalextractor.bos:           corpsetype = 2 ;
armada_navaladvancedmetalextractor.bos:           return(corpsetype);
armada_navaladvancedmetalextractor.bos:           corpsetype = 3 ;
armada_navaladvancedmetalextractor.bos:           return(corpsetype);
armada_navaladvancedmetalextractor.bos:   corpsetype = 3 ;
armada_navaladvancedmetalextractor.bos:   return corpsetype;
Binary file armada_navaladvancedmetalextractor.cob matches
armada_navaladvancedenergyconverter.bos:Killed(severity, corpsetype)
armada_navaladvancedenergyconverter.bos:           corpsetype = 1 ;
armada_navaladvancedenergyconverter.bos:           return(corpsetype);
armada_navaladvancedenergyconverter.bos:           corpsetype = 2 ;
armada_navaladvancedenergyconverter.bos:           return(corpsetype);
armada_navaladvancedenergyconverter.bos:           corpsetype = 3 ;
armada_navaladvancedenergyconverter.bos:           return(corpsetype);
armada_navaladvancedenergyconverter.bos:   corpsetype = 3 ;
armada_navaladvancedenergyconverter.bos:   return corpsetype;
armada_navalmetalstorage.bos:Killed(severity, corpsetype)
armada_navalmetalstorage.bos:            corpsetype = 1 ;
armada_navalmetalstorage.bos:            return(corpsetype);
armada_navalmetalstorage.bos:            corpsetype = 2 ;
armada_navalmetalstorage.bos:            return(corpsetype);
armada_navalmetalstorage.bos:            corpsetype = 3 ;
armada_navalmetalstorage.bos:            return(corpsetype);
armada_navalmetalstorage.bos:    corpsetype = 3 ;
armada_navalmetalstorage.bos:    return corpsetype;
armada_tumbleweed.bos:   set-signal-mask SIG_MOVE;
armada_tumbleweed.bos:Killed(severity, corpsetype)
armada_tumbleweed.bos:           corpsetype = 1 ;
armada_tumbleweed.bos:           return(corpsetype);
armada_tumbleweed.bos:           corpsetype = 2 ;
armada_tumbleweed.bos:           return(corpsetype);
armada_tumbleweed.bos:           corpsetype = 3 ;
armada_tumbleweed.bos:           return(corpsetype);
armada_tumbleweed.bos:   corpsetype = 3 ;
armada_tumbleweed.bos:   return corpsetype;
armada_vanguard.bos:    set-signal-mask SIG_WALK;
armada_vanguard.bos:SetStunned(State)
armada_vanguard.bos:    set-signal-mask SIG_AIM;
armada_vanguard.bos:Killed(severity, corpsetype)
armada_vanguard.bos:            corpsetype = 1 ;
armada_vanguard.bos:            return(corpsetype);
armada_vanguard.bos:            corpsetype = 2 ;
armada_vanguard.bos:            return(corpsetype);
armada_vanguard.bos:            corpsetype = 3 ;
armada_vanguard.bos:            return(corpsetype);
armada_vanguard.bos:    corpsetype = 3 ;
armada_vanguard.bos:    return corpsetype;
Binary file armada_vanguard.cob matches
armada_veil.bos:Killed(severity, corpsetype)
armada_veil.bos:            corpsetype = 1 ;
armada_veil.bos:            return(corpsetype);
armada_veil.bos:            corpsetype = 2 ;
armada_veil.bos:            return(corpsetype);
armada_veil.bos:            corpsetype = 3 ;
armada_veil.bos:            return(corpsetype);
armada_veil.bos:    corpsetype = 3 ;
armada_veil.bos:    return corpsetype;
armada_vehicleplant.bos:      set ARMORED to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
armada_vehicleplant.bos:      set YARD_OPEN to 1;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 1;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set YARD_OPEN to 0;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 0;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set INBUILDSTANCE to 1;
armada_vehicleplant.bos:      set INBUILDSTANCE to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
armada_vehicleplant.bos:      set-signal-mask SIG_ACTIVATE;
armada_vehicleplant.bos:      set-signal-mask 0;
armada_vehicleplant.bos:Killed(severity, corpsetype)
armada_vehicleplant.bos:              corpsetype = 1 ;
armada_vehicleplant.bos:              return(corpsetype);
armada_vehicleplant.bos:              corpsetype = 2 ;
armada_vehicleplant.bos:              return(corpsetype);
armada_vehicleplant.bos:              corpsetype = 3 ;
armada_vehicleplant.bos:              return(corpsetype);
armada_vehicleplant.bos:      corpsetype = 3 ;
armada_vehicleplant.bos:      return corpsetype;
armada_ragnarok.bos:    set-signal-mask SIG_AIM;
armada_ragnarok.bos:Killed(severity, corpsetype)
armada_ragnarok.bos:            corpsetype = 1 ;
armada_ragnarok.bos:            return(corpsetype);
armada_ragnarok.bos:            corpsetype = 2 ;
armada_ragnarok.bos:            return(corpsetype);
armada_ragnarok.bos:            corpsetype = 3 ;
armada_ragnarok.bos:            return(corpsetype);
armada_ragnarok.bos:    corpsetype = 3 ;
armada_ragnarok.bos:    return corpsetype;
armada_centurion.bos:     set-signal-mask SIG_WALK;
armada_centurion.bos:SetMaxReloadTime(Func_Var_1)
armada_centurion.bos:SetStunned(State)
armada_centurion.bos:     set-signal-mask SIG_AIM;
armada_centurion.bos:Killed(severity, corpsetype)
armada_centurion.bos:             corpsetype = 1 ;
armada_centurion.bos:             return(corpsetype);
armada_centurion.bos:             corpsetype = 2 ;
armada_centurion.bos:             return(corpsetype);
armada_centurion.bos:             corpsetype = 3 ;
armada_centurion.bos:             return(corpsetype);
armada_centurion.bos:     corpsetype = 3 ;
armada_centurion.bos:     return corpsetype;
Binary file armada_centurion.cob matches
armada_windturbine.bos:SetSpeed(windSpd) //called every 450 frames
armada_windturbine.bos:                     set ACTIVATION to 100;
armada_windturbine.bos:SetDirection(windDir) //called every 450 frames
armada_windturbine.bos:SetStunned(State)
armada_windturbine.bos:             set ACTIVATION to 0;
armada_windturbine.bos:             set ACTIVATION to 100;
armada_windturbine.bos:Killed(severity, corpsetype)
armada_windturbine.bos:             corpsetype = 1 ;
armada_windturbine.bos:             return(corpsetype);
armada_windturbine.bos:             corpsetype = 2 ;
armada_windturbine.bos:             return(corpsetype);
armada_windturbine.bos:             corpsetype = 3 ;
armada_windturbine.bos:             return(corpsetype);
armada_windturbine.bos:     corpsetype = 3 ;
armada_windturbine.bos:     return corpsetype;
Binary file armada_windturbine.cob matches
armada_shredder.bos:SetMaxReloadTime(Func_Var_1)
armada_shredder.bos:    set-signal-mask 0;
armada_shredder.bos:SetStunned(State)
armada_shredder.bos:    set-signal-mask SIG_AIM_3;
armada_shredder.bos:Killed(severity, corpsetype)
armada_shredder.bos:            corpsetype = 1 ;
armada_shredder.bos:            return(corpsetype);
armada_shredder.bos:            corpsetype = 2 ;
armada_shredder.bos:            return(corpsetype);
armada_shredder.bos:            corpsetype = 3 ;
armada_shredder.bos:            return(corpsetype);
armada_shredder.bos:    corpsetype = 3 ;
armada_shredder.bos:    return corpsetype;
Binary file armada_shredder.cob matches
armada_welder.bos:SetStunned(State)
armada_welder.bos:    set-signal-mask SIG_AIM;
armada_welder.bos:Killed(severity, corpsetype)
armada_welder.bos:            corpsetype = 1 ;
armada_welder.bos:            return(corpsetype);
armada_welder.bos:            corpsetype = 2 ;
armada_welder.bos:            return(corpsetype);
armada_welder.bos:            corpsetype = 3 ;
armada_welder.bos:            return(corpsetype);
armada_welder.bos:    corpsetype = 3 ;
armada_welder.bos:    return corpsetype;
Binary file armada_welder.cob matches
Binary file cob_file.pyc matches
constants.h:** EXPtype.h -- Explosion Type information and GET/SET constants for
 scripts
constants.h:#define ACTIVATION           1  // set or get
constants.h:#define STANDINGMOVEORDERS   2  // set or get
constants.h:#define STANDINGFIREORDERS   3  // set or get
constants.h:#define INBUILDSTANCE        5  // set or get
constants.h:#define BUSY                 6  // set or get (used by misc. special
 case missions like transport ships)
constants.h:#define YARD_OPEN           18  // set or get (change which plots we
 occupy when building opens and closes)
constants.h:#define BUGGER_OFF          19  // set or get (ask other units to cl
ear the area)
constants.h:#define ARMORED             20  // set or get
constants.h:#define UPRIGHT                   79 // set or get
constants.h:#define LOS_RADIUS                85 // set or get
constants.h:#define AIR_LOS_RADIUS            86 // set or get
constants.h:#define RADAR_RADIUS              87 // set or get
constants.h:#define JAMMER_RADIUS             88 // set or get
constants.h:#define SONAR_RADIUS              89 // set or get
constants.h:#define SONAR_JAM_RADIUS          90 // set or get
constants.h:#define SEISMIC_RADIUS            91 // set or get
constants.h:#define CURRENT_FUEL              93 // set or get
constants.h:#define SHIELD_POWER              95 // set or get
constants.h:#define STEALTH                   96 // set or get
constants.h:#define CRASHING                  97 // set or get, returns whether
aircraft isCrashing state
constants.h:#define CHANGE_TARGET             98 // set, the value it's set to d
etermines the affected weapon
constants.h:#define CEG_DAMAGE                99 // set
constants.h:#define ALPHA_THRESHOLD          103 // set or get
constants.h:#define SET_WEAPON_UNIT_TARGET   106 // get (fake set)
constants.h:#define SET_WEAPON_GROUND_TARGET 107 // get (fake set)
constants.h:#define SONAR_STEALTH            108 // set or get
constants.h:// Indices for SET, GET, and GET_UNIT_VALUE for LUA return values
constants.h:#define FLANK_B_MODE                120 // set or get
constants.h:#define FLANK_B_DIR         121 // set or get, set is through get fo
r multiple args
constants.h:#define FLANK_B_MOBILITY_ADD        122 // set or get
constants.h:#define FLANK_B_MAX_DAMAGE  123 // set or get
constants.h:#define FLANK_B_MIN_DAMAGE  124 // set or get
constants.h:#define WEAPON_RELOADSTATE  125 // get (with fake set)  get WEAPON_R
ELOADSTATE(weaponNum)           for GET
constants.h:#define WEAPON_RELOADTIME   126 // get (with fake set)  get WEAPON_R
ELOADSTATE(-weaponNum,val)      for SET
constants.h:#define WEAPON_ACCURACY             127 // get (with fake set)
constants.h:#define WEAPON_SPRAY                128 // get (with fake set)
constants.h:#define WEAPON_RANGE                129 // get (with fake set)
constants.h:#define WEAPON_PROJECTILE_SPEED     130 // get (with fake set)
constants.h:#define WEAPON_STOCKPILE_COUNT  139 // get (with fake set)
constants.h:#define ENERGY_MAKE             140 // set or get (100*E production)

constants.h:#define METAL_MAKE              141 // set or get (100*M production)

coraak.bos:     set-signal-mask SIG_WALK;
coraak.bos:     set-signal-mask 0;
coraak.bos:     set-signal-mask 2;
coraak.bos:     set-signal-mask 4;
coraak.bos:     set-signal-mask 8;
coraak.bos:     set-signal-mask 16;
coraak.bos:     set-signal-mask 32;
coraak.bos:     set-signal-mask 64;
coraak.bos:     set-signal-mask 128;
coraak.bos:     set-signal-mask 256;
coraak.bos:     set-signal-mask 512;
coraak.bos:Killed(severity, corpsetype)
coraak.bos:             corpsetype = 1;
coraak.bos:             return (corpsetype);
coraak.bos:             corpsetype = 2;
coraak.bos:             return (corpsetype);
coraak.bos:             corpsetype = 3;
coraak.bos:             return (corpsetype);
coraak.bos:     corpsetype = 3;
coraak.bos:     return corpsetype;
coraak.lua_old: SetSignalMask(SIG_WALK)
coraak.lua_old:local function ResetLegs()
coraak.lua_old: ResetLegs()
coraak.lua_old:         SetSignalMask( SIG_AIM2)
coraak.lua_old:         SetSignalMask(math.pow(2,num))
coraak.lua_old:         -- SetSignalMask( )
coraap.bos:     set YARD_OPEN to 1;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 1;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set YARD_OPEN to 0;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 0;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set INBUILDSTANCE to 1;
coraap.bos:     set INBUILDSTANCE to 0;
coraap.bos:     set-signal-mask SIG_ACTIVATE;
coraap.bos:     set-signal-mask 0;
coraap.bos:Killed(severity, corpsetype)
coraap.bos:             corpsetype = 1 ;
coraap.bos:             return(corpsetype);
coraap.bos:             corpsetype = 2 ;
coraap.bos:             return(corpsetype);
coraap.bos:             corpsetype = 3 ;
coraap.bos:             return(corpsetype);
coraap.bos:     corpsetype = 3 ;
coraap.bos:     return corpsetype;
coraca.bos:     set INBUILDSTANCE to 1;
coraca.bos:     set INBUILDSTANCE to 0;
coraca.bos:Killed(severity, corpsetype)
coraca.bos:             corpsetype = 1 ;
coraca.bos:             return(corpsetype);
coraca.bos:             corpsetype = 2 ;
coraca.bos:             return(corpsetype);
coraca.bos:             corpsetype = 3 ;
coraca.bos:             return(corpsetype);
coraca.bos:     corpsetype = 3 ;
coraca.bos:     return corpsetype;
corack.bos:     set-signal-mask SIG_WALK;
corack.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 1;
corack.bos:     set-signal-mask SIG_BUILD;
corack.bos:     set-signal-mask 0;
corack.bos:Killed(severity, corpsetype)
corack.bos:             corpsetype = 1 ;
corack.bos:             return(corpsetype);
corack.bos:             corpsetype = 2 ;
corack.bos:             return(corpsetype);
corack.bos:             corpsetype = 3 ;
corack.bos:             return(corpsetype);
corack.bos:     corpsetype = 3 ;
corack.bos:     return corpsetype;
coracsub.bos:   set INBUILDSTANCE to 0;
coracsub.bos:   set-signal-mask SIG_MOVE;
coracsub.bos:   set INBUILDSTANCE to 1;
coracsub.bos:   set-signal-mask SIG_BUILD;
coracsub.bos:   set-signal-mask 0;
coracsub.bos:Killed(severity, corpsetype)
coracsub.bos:           corpsetype = 1 ;
coracsub.bos:           return(corpsetype);
coracsub.bos:           corpsetype = 2 ;
coracsub.bos:           return(corpsetype);
coracsub.bos:           corpsetype = 3 ;
coracsub.bos:           return(corpsetype);
coracsub.bos:   corpsetype = 3 ;
coracsub.bos:   return corpsetype;
coracv.bos:     set INBUILDSTANCE to 0;
coracv.bos:setSFXoccupy(state)
coracv.bos:     set INBUILDSTANCE to 1;
coracv.bos:     set-signal-mask SIG_BUILD;
coracv.bos:     set-signal-mask 0;
coracv.bos:Killed(severity, corpsetype)
coracv.bos:             corpsetype = 1 ;
coracv.bos:             return(corpsetype);
coracv.bos:             corpsetype = 2 ;
coracv.bos:             return(corpsetype);
coracv.bos:             corpsetype = 3 ;
coracv.bos:             return(corpsetype);
coracv.bos:     corpsetype = 3 ;
coracv.bos:     return corpsetype;
Binary file coracv.cob matches
coradvsol.bos:// OffsetToScriptCodeIndexArray        54c
coradvsol.bos:// OffsetToScriptNameOffsetArray       568
coradvsol.bos:// OffsetToPieceNameOffsetArray        584
coradvsol.bos:// OffsetToScriptCode                  2c
coradvsol.bos:// OffsetToNameArray                   59c
coradvsol.bos:// OffsetToFirstName                   59c
coradvsol.bos:/*    57:*/       set ARMORED to 0;
coradvsol.bos:/*    5f:*/       set ARMORED to 1;
coradvsol.bos:/*    78:*/       set-signal-mask 2;
coradvsol.bos:/*    7d:*/       set ACTIVATION to 0;
coradvsol.bos:/*    85:*/       set ACTIVATION to 100;
coradvsol.bos:Killed(severity, corpsetype)
coradvsol.bos:          corpsetype = 1 ;
coradvsol.bos:          return(corpsetype);
coradvsol.bos:          corpsetype = 2 ;
coradvsol.bos:          return(corpsetype);
coradvsol.bos:          corpsetype = 3 ;
coradvsol.bos:          return(corpsetype);
coradvsol.bos:  corpsetype = 3 ;
coradvsol.bos:  return corpsetype;
corafus.bos:// OffsetToScriptCodeIndexArray        730
corafus.bos:// OffsetToScriptNameOffsetArray       758
corafus.bos:// OffsetToPieceNameOffsetArray        780
corafus.bos:// OffsetToScriptCode                  2c
corafus.bos:// OffsetToNameArray                   794
corafus.bos:// OffsetToFirstName                   794
corafus.bos:/*    b0:*/ set ARMORED to 1;
corafus.bos:/*    ba:*/ set ARMORED to 0;
corafus.bos:Killed(severity, corpsetype)
corafus.bos:/*   133:*/         corpsetype = 1;
corafus.bos:/*   14c:*/         return (corpsetype);
corafus.bos:/*   156:*/         corpsetype = 2;
corafus.bos:/*   16f:*/         return (corpsetype);
corafus.bos:/*   179:*/         corpsetype = 3;
corafus.bos:/*   19b:*/         return (corpsetype);
corafus.bos:/*   19e:*/ corpsetype = 3;
corafus.bos:/*   1c0:*/ return (corpsetype);
corageo.lua:            return 1 -- corpsetype
corageo.lua:            return 2 -- corpsetype
corageo.lua:            return 3 -- corpsetype
corah.bos:              // Set values for tilt
corah.bos:      set-signal-mask SIG_MOVE;
corah.bos:setSFXoccupy(Func_Var_1)
corah.bos:SetStunned(State)
corah.bos:      set-signal-mask 2;
corah.bos:Killed(severity, corpsetype)
corah.bos:              corpsetype = 1 ;
corah.bos:              return(corpsetype);
corah.bos:              corpsetype = 2 ;
corah.bos:              return(corpsetype);
corah.bos:              corpsetype = 3 ;
corah.bos:              return(corpsetype);
corah.bos:      corpsetype = 3 ;
corah.bos:      return corpsetype;
Binary file corah.cob matches
corak.bos:      set-signal-mask SIG_WALK;
corak.bos:      set-signal-mask SIG_WALK | SIG_AIM; //you might need this
corak.bos:SetStunned(State)
corak.bos:      set-signal-mask SIG_AIM;
corak.bos:Killed(severity, corpsetype)
corak.bos:              corpsetype = 1 ;
corak.bos:              return(corpsetype);
corak.bos:              corpsetype = 2 ;
corak.bos:              return(corpsetype);
corak.bos:              corpsetype = 3 ;
corak.bos:              return(corpsetype);
corak.bos:      corpsetype = 3 ;
corak.bos:      return corpsetype;
Binary file corak.cob matches
coralab.lua:    UnitScript.SetSignalMask(SIG_OPENCLOSE);
coralab.lua:    UnitScript.SetUnitValue(COB.INBUILDSTANCE, 1);
coralab.lua:    UnitScript.SetSignalMask(SIG_OPENCLOSE);
coralab.lua:    UnitScript.SetUnitValue(COB.INBUILDSTANCE, 0);
coralab.lua:    UnitScript.SetSignalMask(SIG_ACTIVATE);
coralab.lua:    UnitScript.SetSignalMask(SIG_BUILD);
coralab.lua:    local corpsetype;
coralab.lua:            corpsetype = 1;
coralab.lua:            return corpsetype;
coralab.lua:            corpsetype = 2;
coralab.lua:            return corpsetype;
coralab.lua:            corpsetype = 3;
coralab.lua:            return corpsetype;
coralab.lua:    corpsetype = 1;
coralab.lua:    return corpsetype;
coramph.bos:    set-signal-mask SIG_MOVE;
coramph.bos:SetMaxReloadTime(Func_Var_1)
coramph.bos:SetStunned(State)
coramph.bos:    set-signal-mask SIG_AIM;
coramph.bos:Killed(severity, corpsetype)
coramph.bos:            corpsetype = 1 ;
coramph.bos:            return(corpsetype);
coramph.bos:            corpsetype = 2 ;
coramph.bos:            return(corpsetype);
coramph.bos:            corpsetype = 3 ;
coramph.bos:            return(corpsetype);
coramph.bos:    corpsetype = 3 ;
coramph.bos:    return corpsetype;
Binary file coramph.cob matches
coramsub.bos:// OffsetToScriptCodeIndexArray        bc0
coramsub.bos:// OffsetToScriptNameOffsetArray       c00
coramsub.bos:// OffsetToPieceNameOffsetArray        c40
coramsub.bos:// OffsetToScriptCode                  2c
coramsub.bos:// OffsetToNameArray                   c78
coramsub.bos:// OffsetToFirstName                   c78
coramsub.bos:/*    87:*/        set YARD_OPEN to 1;
coramsub.bos:/*    92:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    9a:*/                set YARD_OPEN to 1;
coramsub.bos:/*    a1:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    a9:*/        set YARD_OPEN to 0;
coramsub.bos:/*    b3:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    bb:*/                set YARD_OPEN to 0;
coramsub.bos:/*    c2:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    d0:*/        set INBUILDSTANCE to 1;
coramsub.bos:/*    d8:*/        set INBUILDSTANCE to 0;
coramsub.bos:/*   176:*/        set-signal-mask SIG_ACTIVATE;
coramsub.bos:/*   181:*/        set-signal-mask 0;
coramsub.bos:Killed(severity, corpsetype)
coramsub.bos:           corpsetype = 1 ;
coramsub.bos:           return(corpsetype);
coramsub.bos:           corpsetype = 2 ;
coramsub.bos:           return(corpsetype);
coramsub.bos:           corpsetype = 3 ;
coramsub.bos:           return(corpsetype);
coramsub.bos:   corpsetype = 3 ;
coramsub.bos:   return corpsetype;
corap.bos:// OffsetToScriptCodeIndexArray        11f0
corap.bos:// OffsetToScriptNameOffsetArray       123c
corap.bos:// OffsetToPieceNameOffsetArray        1288
corap.bos:// OffsetToScriptCode                  2c
corap.bos:// OffsetToNameArray                   12ac
corap.bos:// OffsetToFirstName                   12ac
corap.bos:/*   17e:*/   set YARD_OPEN to 1;
corap.bos:/*   189:*/           set BUGGER_OFF to 1;
corap.bos:/*   191:*/           set YARD_OPEN to 1;
corap.bos:/*   198:*/   set BUGGER_OFF to 0;
corap.bos:/*   1a0:*/   set YARD_OPEN to 0;
corap.bos:/*   1aa:*/           set BUGGER_OFF to 1;
corap.bos:/*   1b2:*/           set YARD_OPEN to 0;
corap.bos:/*   1b9:*/   set BUGGER_OFF to 0;
corap.bos:/*   1d5:*/   set INBUILDSTANCE to 1;
corap.bos:/*   1dd:*/   set INBUILDSTANCE to 0;
corap.bos:/*   2af:*/   set-signal-mask SIG_ACTIVATE;
corap.bos:/*   2ba:*/   set-signal-mask 0;
corap.bos:Killed(severity, corpsetype)
corap.bos:              corpsetype = 1 ;
corap.bos:              return(corpsetype);
corap.bos:              corpsetype = 2 ;
corap.bos:              return(corpsetype);
corap.bos:              corpsetype = 3 ;
corap.bos:              return(corpsetype);
corap.bos:      corpsetype = 3 ;
corap.bos:      return corpsetype;
corape.bos://SetMaxReloadTime(Func_Var_1)
corape.bos://SetStunned(State)
corape.bos:     set-signal-mask SIG_AIM;
corape.bos:     set-signal-mask 0;
corape.bos:     set-signal-mask SIG_AIM;
corape.bos:Killed(severity, corpsetype)
corape.bos:             corpsetype = 1 ;
corape.bos:             return(corpsetype);
corape.bos:             corpsetype = 2 ;
corape.bos:             return(corpsetype);
corape.bos:             corpsetype = 3 ;
corape.bos:             return(corpsetype);
corape.bos:     corpsetype = 3 ;
corape.bos:     return corpsetype;
corarad.bos:// OffsetToScriptCodeIndexArray        624
corarad.bos:// OffsetToScriptNameOffsetArray       64c
corarad.bos:// OffsetToPieceNameOffsetArray        674
corarad.bos:// OffsetToScriptCode                  2c
corarad.bos:// OffsetToNameArray                   680
corarad.bos:// OffsetToFirstName                   680
corarad.bos:Killed(severity, corpsetype)
corarad.bos:            corpsetype = 1 ;
corarad.bos:            return(corpsetype);
corarad.bos:            corpsetype = 2 ;
corarad.bos:            return(corpsetype);
corarad.bos:            corpsetype = 3 ;
corarad.bos:            return(corpsetype);
corarad.bos:    corpsetype = 3 ;
corarad.bos:    return corpsetype;
corarch.bos:SetMaxReloadTime(Func_Var_1)
corarch.bos:    set-signal-mask 0;
corarch.bos:SetStunned(State)
corarch.bos:    set-signal-mask SIG_MOVE;
corarch.bos:    set-signal-mask SIG_AIM_2;
corarch.bos:    set-signal-mask SIG_AIM_3;
corarch.bos:Killed(severity, corpsetype)
corarch.bos:            corpsetype = 1 ;
corarch.bos:            return(corpsetype);
corarch.bos:            corpsetype = 2 ;
corarch.bos:            return(corpsetype);
corarch.bos:            corpsetype = 3 ;
corarch.bos:            return(corpsetype);
corarch.bos:    corpsetype = 3 ;
corarch.bos:    return corpsetype;
Binary file corarch.cob matches
corason.bos:Killed(severity, corpsetype)
corason.bos:            corpsetype = 1 ;
corason.bos:            return(corpsetype);
corason.bos:            corpsetype = 2 ;
corason.bos:            return(corpsetype);
corason.bos:            corpsetype = 3 ;
corason.bos:            return(corpsetype);
corason.bos:    corpsetype = 3 ;
corason.bos:    return corpsetype;
corasp.bos:// OffsetToScriptCodeIndexArray        a94
corasp.bos:// OffsetToScriptNameOffsetArray       aac
corasp.bos:// OffsetToPieceNameOffsetArray        ac4
corasp.bos:// OffsetToScriptCode                  2c
corasp.bos:// OffsetToNameArray                   b04
corasp.bos:// OffsetToFirstName                   b04
corasp.bos:Killed(severity, corpsetype)
corasp.bos:             corpsetype = 1 ;
corasp.bos:             return(corpsetype);
corasp.bos:             corpsetype = 2 ;
corasp.bos:             return(corpsetype);
corasp.bos:             corpsetype = 3 ;
corasp.bos:             return(corpsetype);
corasp.bos:     corpsetype = 3 ;
corasp.bos:     return corpsetype;
corasy.bos:     set YARD_OPEN to 1;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 1;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set YARD_OPEN to 0;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 0;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set INBUILDSTANCE to 1;
corasy.bos:     set INBUILDSTANCE to 0;
corasy.bos:     set-signal-mask SIG_ACTIVATE;
corasy.bos:     set-signal-mask 0;
corasy.bos:Killed(severity, corpsetype)
corasy.bos:             corpsetype = 1 ;
corasy.bos:             return(corpsetype);
corasy.bos:             corpsetype = 2 ;
corasy.bos:             return(corpsetype);
corasy.bos:             corpsetype = 3 ;
corasy.bos:             return(corpsetype);
corasy.bos:     corpsetype = 3 ;
corasy.bos:     return corpsetype;
corasye.bos:    set YARD_OPEN to 1;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 1;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set YARD_OPEN to 0;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 0;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set INBUILDSTANCE to 1;
corasye.bos:    set INBUILDSTANCE to 0;
corasye.bos:    set-signal-mask SIG_ACTIVATE;
corasye.bos:    set-signal-mask 0;
corasye.bos:Killed(severity, corpsetype)
corasye.bos:            corpsetype = 1;
corasye.bos:            return (corpsetype);
corasye.bos:            corpsetype = 2;
corasye.bos:            return (corpsetype);
corasye.bos:            corpsetype = 3;
corasye.bos:            return (corpsetype);
corasye.bos:    corpsetype = 3;
corasye.bos:    return (corpsetype);
coratl.bos:     set-signal-mask SIG_AIM;
coratl.bos:Killed(severity, corpsetype)
coratl.bos:             corpsetype = 1 ;
coratl.bos:             return(corpsetype);
coratl.bos:             corpsetype = 2 ;
coratl.bos:             return(corpsetype);
coratl.bos:             corpsetype = 3 ;
coratl.bos:             return(corpsetype);
coratl.bos:     corpsetype = 3 ;
coratl.bos:     return corpsetype;
coravp.bos:     set YARD_OPEN to 1;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 1;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set YARD_OPEN to 0;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 0;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set INBUILDSTANCE to 1;
coravp.bos:     set INBUILDSTANCE to 0;
coravp.bos:     set-signal-mask SIG_ACTIVATE;
coravp.bos:     set-signal-mask 0;
coravp.bos:Killed(severity, corpsetype)
coravp.bos:             corpsetype = 1 ;
coravp.bos:             return(corpsetype);
coravp.bos:             corpsetype = 2 ;
coravp.bos:             return(corpsetype);
coravp.bos:             corpsetype = 3 ;
coravp.bos:             return(corpsetype);
coravp.bos:     corpsetype = 3 ;
coravp.bos:     return corpsetype;
corawac.bos:Killed(severity, corpsetype)
corawac.bos:    corpsetype = 1 ;
corawac.bos:            return(corpsetype);
corawac.bos:    corpsetype = 2 ;
corawac.bos:            return(corpsetype);
corawac.bos:    corpsetype = 3 ;
corawac.bos:            return(corpsetype);
corawac.bos:    corpsetype = 3 ;
corawac.bos:            return corpsetype;
corban.bos:setSFXoccupy(state)
corban.bos:SetMaxReloadTime(Func_Var_1)
corban.bos:SetStunned(State)
corban.bos:     set-signal-mask SIG_AIM;
corban.bos:Killed(severity, corpsetype)
corban.bos:             corpsetype = 1 ;
corban.bos:             return(corpsetype);
corban.bos:             corpsetype = 2 ;
corban.bos:             return(corpsetype);
corban.bos:             corpsetype = 3 ;
corban.bos:             return(corpsetype);
corban.bos:     corpsetype = 3 ;
corban.bos:     return corpsetype;
Binary file corban.cob matches
corbats.bos:    set-signal-mask 16;
corbats.bos:SetMaxReloadTime(Func_Var_1)
corbats.bos:SetStunned(State)
corbats.bos:    set-signal-mask SIG_AIM;
corbats.bos:    set-signal-mask 0;
corbats.bos:    set-signal-mask SIG_MOVE;
corbats.bos:    set-signal-mask SIG_AIM_2;
corbats.bos:Killed(severity, corpsetype)
corbats.bos:            corpsetype = 1 ;
corbats.bos:            return(corpsetype);
corbats.bos:            corpsetype = 2 ;
corbats.bos:            return(corpsetype);
corbats.bos:            corpsetype = 3 ;
corbats.bos:            return(corpsetype);
corbats.bos:    corpsetype = 3 ;
corbats.bos:    return corpsetype;
Binary file corbats.cob matches
corbhmth.bos:   set-signal-mask 4;
corbhmth.bos:   set ACTIVATION to 100;
corbhmth.bos:   set ACTIVATION to 0;
corbhmth.bos:   set-signal-mask 0;
corbhmth.bos:ResetFiretube()
corbhmth.bos:   set-signal-mask SIG_AIM;
corbhmth.bos:   set-signal-mask SIG_AIM;
corbhmth.bos:   start-script ResetFiretube();
corbhmth.bos:   set-signal-mask SIG_AIM;
corbhmth.bos:Killed(severity, corpsetype)
corbhmth.bos:           corpsetype = 1 ;
corbhmth.bos:           return(corpsetype);
corbhmth.bos:           corpsetype = 2 ;
corbhmth.bos:           return(corpsetype);
corbhmth.bos:           corpsetype = 3 ;
corbhmth.bos:           return(corpsetype);
corbhmth.bos:   corpsetype = 3 ;
corbhmth.bos:   return corpsetype;
Binary file corbhmth.cob matches
corblackhy.bos: set-signal-mask 16;
corblackhy.bos: set ARMORED to 1;
corblackhy.bos:SetMaxReloadTime(Func_Var_1)
corblackhy.bos:SetStunned(State)
corblackhy.bos: set-signal-mask SIG_MOVE;
corblackhy.bos: set-signal-mask SIG_AIM;
corblackhy.bos: set-signal-mask 2;
corblackhy.bos: set-signal-mask 4;
corblackhy.bos: set-signal-mask 8;
corblackhy.bos: set-signal-mask 16;
corblackhy.bos: set-signal-mask 32;
corblackhy.bos: set-signal-mask 64;
corblackhy.bos:Killed(severity, corpsetype)
corblackhy.bos:         corpsetype = 1 ;
corblackhy.bos:         return(corpsetype);
corblackhy.bos:         corpsetype = 2 ;
corblackhy.bos:         return(corpsetype);
corblackhy.bos:         corpsetype = 3 ;
corblackhy.bos:         return(corpsetype);
corblackhy.bos: corpsetype = 3 ;
corblackhy.bos: return corpsetype;
Binary file corblackhy.cob matches
corbuzz.lua:    SetSignalMask( SIG_AIM)
corbuzz.lua:                    return 1 -- corpsetype
corbuzz.lua:                    return 2 -- corpsetype
corbuzz.lua:                    return 3 -- corpsetype
corbw.bos:      set-signal-mask SIG_AIM;
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 0 - 1500 + get UNK
NOWN_UNIT_VALUE(82);
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 1500 + get UNKNOWN
_UNIT_VALUE(82);
corbw.bos:Killed(severity, corpsetype)
corbw.bos:              corpsetype = 1 ;
corbw.bos:              return(corpsetype);
corbw.bos:              corpsetype = 2 ;
corbw.bos:              return(corpsetype);
corbw.bos:              corpsetype = 3 ;
corbw.bos:              return(corpsetype);
corbw.bos:      corpsetype = 3 ;
corbw.bos:      return corpsetype;
corca.bos:      set INBUILDSTANCE to 1;
corca.bos:      set INBUILDSTANCE to 0;
corca.bos:Killed(severity, corpsetype)
corca.bos:              corpsetype = 1 ;
corca.bos:              return(corpsetype);
corca.bos:              corpsetype = 2 ;
corca.bos:              return(corpsetype);
corca.bos:              corpsetype = 3 ;
corca.bos:              return(corpsetype);
corca.bos:      corpsetype = 3 ;
corca.bos:      return corpsetype;
corcan.bos:     set-signal-mask SIG_WALK;
corcan.bos:SetMaxReloadTime(Func_Var_1)
corcan.bos:SetStunned(State)
corcan.bos:     set-signal-mask SIG_AIM;
corcan.bos:Killed(severity, corpsetype)
corcan.bos:             corpsetype = 1 ;
corcan.bos:             return(corpsetype);
corcan.bos:             corpsetype = 2 ;
corcan.bos:             return(corpsetype);
corcan.bos:             corpsetype = 3 ;
corcan.bos:             return(corpsetype);
corcan.bos:     corpsetype = 3 ;
corcan.bos:     return corpsetype;
Binary file corcan.cob matches
corcarry.bos:   set-signal-mask SIG_MOVE;
corcarry.bos:   set-signal-mask 0;
corcarry.bos:SetStunned(State)
corcarry.bos:   set-signal-mask SIG_AIM;
corcarry.bos:Killed(severity, corpsetype)
corcarry.bos:           corpsetype = 1 ;
corcarry.bos:           return(corpsetype);
corcarry.bos:           corpsetype = 2 ;
corcarry.bos:           return(corpsetype);
corcarry.bos:           corpsetype = 3 ;
corcarry.bos:           return(corpsetype);
corcarry.bos:   corpsetype = 3 ;
corcarry.bos:   return corpsetype;
Binary file corcarry.cob matches
corcat.bos:     set-signal-mask SIG_WALK;
corcat.bos:SetStunned(State)
corcat.bos:     set-signal-mask SIG_AIM;
corcat.bos:Killed(severity, corpsetype)
corcat.bos:             corpsetype = 1 ;
corcat.bos:             return(corpsetype);
corcat.bos:             corpsetype = 2 ;
corcat.bos:             return(corpsetype);
corcat.bos:             corpsetype = 3 ;
corcat.bos:             return(corpsetype);
corcat.bos:     corpsetype = 3 ;
corcat.bos:     return corpsetype;
Binary file corcat.cob matches
corch.bos:      set INBUILDSTANCE to 0;
corch.bos:              // Set values for tilt
corch.bos:      set-signal-mask SIG_MOVE;
corch.bos:setSFXoccupy(state)
corch.bos:      set INBUILDSTANCE to 1;
corch.bos:      set-signal-mask SIG_BUILD;
corch.bos:      set-signal-mask 0;
corch.bos:Killed(severity, corpsetype)
corch.bos:              corpsetype = 1 ;
corch.bos:              return(corpsetype);
corch.bos:              corpsetype = 2 ;
corch.bos:              return(corpsetype);
corch.bos:              corpsetype = 3 ;
corch.bos:              return(corpsetype);
corch.bos:      corpsetype = 3 ;
corch.bos:      return corpsetype;
Binary file corch.cob matches
corck.bos:      set-signal-mask SIG_WALK;
corck.bos:      set INBUILDSTANCE to 0;
corck.bos:      set INBUILDSTANCE to 1;
corck.bos:      set-signal-mask SIG_BUILD;
corck.bos:      set-signal-mask 0;
corck.bos:Killed(severity, corpsetype)
corck.bos:              corpsetype = 1 ;
corck.bos:              return(corpsetype);
corck.bos:              corpsetype = 2 ;
corck.bos:              return(corpsetype);
corck.bos:              corpsetype = 3 ;
corck.bos:              return(corpsetype);
corck.bos:      corpsetype = 3 ;
corck.bos:      return corpsetype;
cortex_commander.bos:     set-signal-mask SIG_WALK;
cortex_commander.bos:     set-signal-mask SIG_AIM;
cortex_commander.bos:     set-signal-mask SIG_AIM;
cortex_commander.bos:     set-signal-mask SIG_AIM;
cortex_commander.bos:     set-signal-mask SIG_AIM;
cortex_commander.bos:     //set-signal-mask SIG_AIM;
cortex_commander.bos:     set INBUILDSTANCE to 1;
cortex_commander.bos:     set-signal-mask SIG_AIM;
cortex_commander.bos:     set INBUILDSTANCE to 0;
cortex_commander.bos:     set-signal-mask SIG_AIM;
cortex_commander.bos:Killed( severity, corpsetype )
cortex_commander.bos:     corpsetype = 1;
cortex_commander.bos:     return(corpsetype);
cortex_commander_lus.lua: SetSignalMask(SIG_WALK)
cortex_commander_lus.lua: SetSignalMask(SIG_AIM)
cortex_commander_lus.lua:                 SetSignalMask(SIG_AIM)
cortex_commander_lus.lua:                 SetSignalMask(SIG_AIM)
cortex_commander_lus.lua: Spring.UnitScript.SetUnitValue(COB.INBUILDSTANCE, true)
cortex_commander_lus.lua: Spring.UnitScript.SetUnitValue(COB.INBUILDSTANCE, false)
cortex_commander_lus.lua: SetSignalMask(SIG_AIM)
cortex_commander_lus.lua: SetSignalMask(SIG_AIM)
cortex_commanderboss.bos: set-signal-mask SIG_WALK;
cortex_commanderboss.bos: set-signal-mask SIG_AIM;
cortex_commanderboss.bos: set-signal-mask SIG_AIM;
cortex_commanderboss.bos: set-signal-mask SIG_AIM;
cortex_commanderboss.bos: set-signal-mask SIG_AIM;
cortex_commanderboss.bos: //set-signal-mask SIG_AIM;
cortex_commanderboss.bos: set INBUILDSTANCE to 1;
cortex_commanderboss.bos: set-signal-mask SIG_AIM;
cortex_commanderboss.bos: set INBUILDSTANCE to 0;
cortex_commanderboss.bos: set-signal-mask SIG_AIM;
cortex_commanderboss.bos:Killed( severity, corpsetype )
cortex_commanderboss.bos: corpsetype = 1;
cortex_commanderboss.bos: return(corpsetype);
corcrash.bos:   set-signal-mask SIG_WALK;
corcrash.bos:SetMaxReloadTime(Func_Var_1)
corcrash.bos:SetStunned(State)
corcrash.bos:   set-signal-mask SIG_AIM_3;
corcrash.bos:Killed(severity, corpsetype)
corcrash.bos:           corpsetype = 1 ;
corcrash.bos:           return(corpsetype);
corcrash.bos:           corpsetype = 2 ;
corcrash.bos:           return(corpsetype);
corcrash.bos:           corpsetype = 3 ;
corcrash.bos:           return(corpsetype);
corcrash.bos:   corpsetype = 3 ;
corcrash.bos:   return corpsetype;
Binary file corcrash.cob matches
corcrus.bos:SetMaxReloadTime(Func_Var_1)
corcrus.bos:    set-signal-mask 0;
corcrus.bos:SetStunned(State)
corcrus.bos:    set-signal-mask 0;
corcrus.bos:    set-signal-mask SIG_MOVE;
corcrus.bos:    set-signal-mask SIG_AIM_2;
corcrus.bos:    set-signal-mask SIG_AIM;
corcrus.bos:Killed(severity, corpsetype)
corcrus.bos:            corpsetype = 1 ;
corcrus.bos:            return(corpsetype);
corcrus.bos:            corpsetype = 2 ;
corcrus.bos:            return(corpsetype);
corcrus.bos:            corpsetype = 3 ;
corcrus.bos:            return(corpsetype);
corcrus.bos:    corpsetype = 3 ;
corcrus.bos:    return corpsetype;
Binary file corcrus.cob matches
corcrw.bos:SetMaxReloadTime(Func_Var_1)
corcrw.bos:SetStunned(State)
corcrw.bos:     set-signal-mask SIG_AIM;
corcrw.bos:     set-signal-mask SIG_AIM_2;
corcrw.bos:     set-signal-mask SIG_AIM_3;
corcrw.bos:Killed(severity, corpsetype)
corcrw.bos:             corpsetype = 1 ;
corcrw.bos:             return(corpsetype);
corcrw.bos:             corpsetype = 2 ;
corcrw.bos:             return(corpsetype);
corcrw.bos:             corpsetype = 3 ;
corcrw.bos:             return(corpsetype);
corcrw.bos:     corpsetype = 3 ;
corcrw.bos:     return corpsetype;
Binary file corcrw.cob matches
corcs.bos:      set-signal-mask SIG_MOVE;
corcs.bos:      set INBUILDSTANCE to 1;
corcs.bos:      set INBUILDSTANCE to 0;
corcs.bos:Killed(severity, corpsetype)
corcs.bos:              corpsetype = 1 ;
corcs.bos:              return(corpsetype);
corcs.bos:              corpsetype = 2 ;
corcs.bos:              return(corpsetype);
corcs.bos:              corpsetype = 3 ;
corcs.bos:              return(corpsetype);
corcs.bos:      corpsetype = 3 ;
corcs.bos:      return corpsetype;
corcsa.bos:     set INBUILDSTANCE to 1;
corcsa.bos:     set INBUILDSTANCE to 0;
corcsa.bos:Killed(severity, corpsetype)
corcsa.bos:             corpsetype = 1 ;
corcsa.bos:             return(corpsetype);
corcsa.bos:             corpsetype = 2 ;
corcsa.bos:             return(corpsetype);
corcsa.bos:             corpsetype = 3 ;
corcsa.bos:             return(corpsetype);
corcsa.bos:     corpsetype = 3 ;
corcsa.bos:     return corpsetype;
corcut.bos:     set-signal-mask 0;
corcut.bos:SetStunned(State)
corcut.bos:setSFXoccupy(Func_Var_1)
corcut.bos:Killed(severity, corpsetype)
corcut.bos:             corpsetype = 1 ;
corcut.bos:             return(corpsetype);
corcut.bos:             corpsetype = 2 ;
corcut.bos:             return(corpsetype);
corcut.bos:             corpsetype = 3 ;
corcut.bos:             return(corpsetype);
corcut.bos:     corpsetype = 3 ;
corcut.bos:     return corpsetype;
Binary file corcut.cob matches
corcv.bos:      set INBUILDSTANCE to 0;
corcv.bos:      set INBUILDSTANCE to 1;
corcv.bos:      set-signal-mask SIG_BUILD;
corcv.bos:      set-signal-mask 0;
corcv.bos:Killed(severity, corpsetype)
corcv.bos:              corpsetype = 1 ;
corcv.bos:              return(corpsetype);
corcv.bos:              corpsetype = 2 ;
corcv.bos:              return(corpsetype);
corcv.bos:              corpsetype = 3 ;
corcv.bos:              return(corpsetype);
corcv.bos:      corpsetype = 3 ;
corcv.bos:      return corpsetype;
cordl.bos:// OffsetToScriptCodeIndexArray        77c
cordl.bos:// OffsetToScriptNameOffsetArray       79c
cordl.bos:// OffsetToPieceNameOffsetArray        7bc
cordl.bos:// OffsetToScriptCode                  2c
cordl.bos:// OffsetToNameArray                   7cc
cordl.bos:// OffsetToFirstName                   7cc
cordl.bos:/*    95:*/   set-signal-mask SIG_AIM;
cordl.bos:Killed(severity, corpsetype)
cordl.bos:              corpsetype = 1 ;
cordl.bos:              return(corpsetype);
cordl.bos:              corpsetype = 2 ;
cordl.bos:              return(corpsetype);
cordl.bos:              corpsetype = 3 ;
cordl.bos:              return(corpsetype);
cordl.bos:      corpsetype = 3 ;
cordl.bos:      return corpsetype;
cordoom.bos:    set ARMORED to 0;
cordoom.bos:    set ARMORED to 1;
cordoom.bos:SetMaxReloadTime(Func_Var_1)
cordoom.bos:    set-signal-mask SIG_AIM;
cordoom.bos:    set-signal-mask SIG_AIM_2;
cordoom.bos:    set-signal-mask SIG_AIM;
cordoom.bos:    set-signal-mask SIG_AIM_2;
cordoom.bos:    set-signal-mask SIG_AIM_3;
cordoom.bos:Killed(severity, corpsetype)
cordoom.bos:            corpsetype = 1 ;
cordoom.bos:            return(corpsetype);
cordoom.bos:            corpsetype = 2 ;
cordoom.bos:            return(corpsetype);
cordoom.bos:            corpsetype = 3 ;
cordoom.bos:            return(corpsetype);
cordoom.bos:    corpsetype = 3 ;
cordoom.bos:    return corpsetype;
Binary file cordoom.cob matches
cordrag.bos:// OffsetToScriptCodeIndexArray        38
cordrag.bos:// OffsetToScriptNameOffsetArray       3c
cordrag.bos:// OffsetToPieceNameOffsetArray        40
cordrag.bos:// OffsetToScriptCode                  2c
cordrag.bos:// OffsetToNameArray                   40
cordrag.bos:// OffsetToFirstName                   40
corenaa.bos:SetMaxReloadTime(Func_Var_1)
corenaa.bos:SetStunned(State)
corenaa.bos:    set-signal-mask SIG_AIM;
corenaa.bos:Killed(severity, corpsetype)
corenaa.bos:            corpsetype = 1 ;
corenaa.bos:            return(corpsetype);
corenaa.bos:            corpsetype = 2 ;
corenaa.bos:            return(corpsetype);
corenaa.bos:            corpsetype = 3 ;
corenaa.bos:            return(corpsetype);
corenaa.bos:    corpsetype = 3 ;
corenaa.bos:    return corpsetype;
Binary file corenaa.cob matches
corerad.bos:SetStunned(State)
corerad.bos:    set-signal-mask SIG_AIM;
corerad.bos:            set CHANGE_TARGET to 1;
corerad.bos:Killed(severity, corpsetype)
corerad.bos:            corpsetype = 1 ;
corerad.bos:            return(corpsetype);
corerad.bos:            corpsetype = 2 ;
corerad.bos:            return(corpsetype);
corerad.bos:            corpsetype = 3 ;
corerad.bos:            return(corpsetype);
corerad.bos:    corpsetype = 3 ;
corerad.bos:    return corpsetype;
Binary file corerad.cob matches
corestor.bos:// OffsetToScriptCodeIndexArray        3e8
corestor.bos:// OffsetToScriptNameOffsetArray       3f8
corestor.bos:// OffsetToPieceNameOffsetArray        408
corestor.bos:// OffsetToScriptCode                  2c
corestor.bos:// OffsetToNameArray                   414
corestor.bos:// OffsetToFirstName                   414
corestor.bos:Killed(severity, corpsetype)
corestor.bos:           corpsetype = 1 ;
corestor.bos:           return(corpsetype);
corestor.bos:           corpsetype = 2 ;
corestor.bos:           return(corpsetype);
corestor.bos:           corpsetype = 3 ;
corestor.bos:           return(corpsetype);
corestor.bos:   corpsetype = 3 ;
corestor.bos:   return corpsetype;
coresupp.bos:SetMaxReloadTime(Func_Var_1)
coresupp.bos:SetStunned(State)
coresupp.bos:   set-signal-mask SIG_MOVE;
coresupp.bos:   set-signal-mask SIG_AIM;
coresupp.bos:   set-signal-mask SIG_AIM_2;
coresupp.bos:Killed(severity, corpsetype)
coresupp.bos:           corpsetype = 1 ;
coresupp.bos:           return(corpsetype);
coresupp.bos:           corpsetype = 2 ;
coresupp.bos:           return(corpsetype);
coresupp.bos:           corpsetype = 3 ;
coresupp.bos:           return(corpsetype);
coresupp.bos:   corpsetype = 3 ;
coresupp.bos:   return corpsetype;
Binary file coresupp.cob matches
coreter.bos:            set ACTIVATION to 0;
coreter.bos:SetStunned(State)
coreter.bos:            set-signal-mask 2;
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 100;
coreter.bos:Killed(severity, corpsetype)
coreter.bos:            corpsetype = 1 ;
coreter.bos:            return(corpsetype);
coreter.bos:            corpsetype = 2 ;
coreter.bos:            return(corpsetype);
coreter.bos:            corpsetype = 3 ;
coreter.bos:            return(corpsetype);
coreter.bos:    corpsetype = 3 ;
coreter.bos:    return corpsetype;
Binary file coreter.cob matches
corexp.bos:SetMaxReloadTime(Func_Var_1)
corexp.bos:     set-signal-mask 0;
corexp.bos:SetStunned(State)
corexp.bos:SetSpeed(Func_Var_1)
corexp.bos:     set-signal-mask SIG_AIM;
corexp.bos:Killed(severity, corpsetype)
corexp.bos:             corpsetype = 1 ;
corexp.bos:             return(corpsetype);
corexp.bos:             corpsetype = 2 ;
corexp.bos:             return(corpsetype);
corexp.bos:             corpsetype = 3 ;
corexp.bos:             return(corpsetype);
corexp.bos:     corpsetype = 3 ;
corexp.bos:     return corpsetype;
Binary file corexp.cob matches
coreyes.bos:Killed(severity, corpsetype)
coreyes.bos:    corpsetype = 3;
coreyes.bos:    return (corpsetype);
corfast.bos:    set-signal-mask SIG_BUILD;
corfast.bos:    set INBUILDSTANCE to 1;
corfast.bos:    set-signal-mask SIG_BUILD;
corfast.bos:    set INBUILDSTANCE to 0;
corfast.bos:Killed(severity, corpsetype)
corfast.bos:            corpsetype = 1 ;
corfast.bos:            return(corpsetype);
corfast.bos:            corpsetype = 2 ;
corfast.bos:            return(corpsetype);
corfast.bos:            corpsetype = 3 ;
corfast.bos:            return(corpsetype);
corfast.bos:    corpsetype = 3 ;
corfast.bos:    return corpsetype;
corfatf.bos:Killed(severity, corpsetype)
corfatf.bos:            corpsetype = 1 ;
corfatf.bos:            return(corpsetype);
corfatf.bos:            corpsetype = 2 ;
corfatf.bos:            return(corpsetype);
corfatf.bos:            corpsetype = 3 ;
corfatf.bos:            return(corpsetype);
corfatf.bos:    corpsetype = 3 ;
corfatf.bos:    return corpsetype;
corfav.bos:SetMaxReloadTime(Func_Var_1)
corfav.bos:SetStunned(State)
corfav.bos:     set-signal-mask SIG_AIM;
corfav.bos:Killed(severity, corpsetype)
corfav.bos:             corpsetype = 1 ;
corfav.bos:             return(corpsetype);
corfav.bos:             corpsetype = 2 ;
corfav.bos:             return(corpsetype);
corfav.bos:             corpsetype = 3 ;
corfav.bos:             return(corpsetype);
corfav.bos:     corpsetype = 3 ;
corfav.bos:     return corpsetype;
Binary file corfav.cob matches
corfgate.bos:Killed(severity, corpsetype)
corfgate.bos:           corpsetype = 1 ;
corfgate.bos:           return(corpsetype);
corfgate.bos:           corpsetype = 2 ;
corfgate.bos:           return(corpsetype);
corfgate.bos:           corpsetype = 3 ;
corfgate.bos:           return(corpsetype);
corfgate.bos:   corpsetype = 3 ;
corfgate.bos:   return corpsetype;
corfhlt.bos:    set-signal-mask SIG_AIM;
corfhlt.bos:Killed(severity, corpsetype)
corfhlt.bos:            corpsetype = 1 ;
corfhlt.bos:            return(corpsetype);
corfhlt.bos:            corpsetype = 2 ;
corfhlt.bos:            return(corpsetype);
corfhlt.bos:            corpsetype = 3 ;
corfhlt.bos:            return(corpsetype);
corfhlt.bos:    corpsetype = 3 ;
corfhlt.bos:    return corpsetype;
corfhp.bos:// OffsetToScriptCodeIndexArray        11e4
corfhp.bos:// OffsetToScriptNameOffsetArray       1230
corfhp.bos:// OffsetToPieceNameOffsetArray        127c
corfhp.bos:// OffsetToScriptCode                  2c
corfhp.bos:// OffsetToNameArray                   12a4
corfhp.bos:// OffsetToFirstName                   12a4
corfhp.bos:/*   162:*/  set YARD_OPEN to 1;
corfhp.bos:/*   16d:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   175:*/          set YARD_OPEN to 1;
corfhp.bos:/*   17c:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   184:*/  set YARD_OPEN to 0;
corfhp.bos:/*   18e:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   196:*/          set YARD_OPEN to 0;
corfhp.bos:/*   19d:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   1bb:*/  set INBUILDSTANCE to 1;
corfhp.bos:/*   1c3:*/  set INBUILDSTANCE to 0;
corfhp.bos:/*   28c:*/  set-signal-mask SIG_ACTIVATE;
corfhp.bos:/*   297:*/  set-signal-mask 0;
corfhp.bos:Killed(severity, corpsetype)
corfhp.bos:             corpsetype = 1 ;
corfhp.bos:             return(corpsetype);
corfhp.bos:             corpsetype = 2 ;
corfhp.bos:             return(corpsetype);
corfhp.bos:             corpsetype = 3 ;
corfhp.bos:             return(corpsetype);
corfhp.bos:     corpsetype = 3 ;
corfhp.bos:     return corpsetype;
corfink.bos:Killed(severity, corpsetype)
corfink.bos:            corpsetype = 1 ;
corfink.bos:            return(corpsetype);
corfink.bos:            corpsetype = 2 ;
corfink.bos:            return(corpsetype);
corfink.bos:            corpsetype = 3 ;
corfink.bos:            return(corpsetype);
corfink.bos:    corpsetype = 3 ;
corfink.bos:    return corpsetype;
corflak.bos:SetStunned(State)
corflak.bos:    set-signal-mask SIG_AIM;
corflak.bos:Killed(severity, corpsetype)
corflak.bos:            corpsetype = 1 ;
corflak.bos:            return(corpsetype);
corflak.bos:            corpsetype = 2 ;
corflak.bos:            return(corpsetype);
corflak.bos:            corpsetype = 3 ;
corflak.bos:            return(corpsetype);
corflak.bos:    corpsetype = 3 ;
corflak.bos:    return corpsetype;
Binary file corflak.cob matches
corfmd.bos:SetMaxReloadTime(Func_Var_1)
corfmd.bos:/*   1d4:*/  set-signal-mask SIG_AIM;
corfmd.bos:Killed(severity, corpsetype)
corfmd.bos:             corpsetype = 1 ;
corfmd.bos:             return(corpsetype);
corfmd.bos:             corpsetype = 2 ;
corfmd.bos:             return(corpsetype);
corfmd.bos:             corpsetype = 3 ;
corfmd.bos:             return(corpsetype);
corfmd.bos:     corpsetype = 3 ;
corfmd.bos:     return corpsetype;
Binary file corfmd.cob matches
corfmkr.bos:                    set ACTIVATION to 1;
corfmkr.bos:                    set ACTIVATION to 0;
corfmkr.bos:Killed(severity, corpsetype)
corfmkr.bos:            corpsetype = 1 ;
corfmkr.bos:            return(corpsetype);
corfmkr.bos:            corpsetype = 2 ;
corfmkr.bos:            return(corpsetype);
corfmkr.bos:            corpsetype = 3 ;
corfmkr.bos:            return(corpsetype);
corfmkr.bos:    corpsetype = 3 ;
corfmkr.bos:    return corpsetype;
corfrad.bos:Killed(severity, corpsetype)
corfrad.bos:            corpsetype = 1 ;
corfrad.bos:            return(corpsetype);
corfrad.bos:            corpsetype = 2 ;
corfrad.bos:            return(corpsetype);
corfrad.bos:            corpsetype = 3 ;
corfrad.bos:            return(corpsetype);
corfrad.bos:    corpsetype = 3 ;
corfrad.bos:    return corpsetype;
corfrock.bos:SetStunned(State)
corfrock.bos:   set-signal-mask SIG_AIM;
corfrock.bos:Killed(severity, corpsetype)
corfrock.bos:           corpsetype = 1;
corfrock.bos:           return (corpsetype);
corfrock.bos:           corpsetype = 2;
corfrock.bos:           return (corpsetype);
corfrock.bos:           corpsetype = 3;
corfrock.bos:           return (corpsetype);
corfrock.bos:   corpsetype = 3;
corfrock.bos:   return (corpsetype);
Binary file corfrock.cob matches
corfrt.bos:SetStunned(State)
corfrt.bos:     set-signal-mask SIG_AIM;
corfrt.bos:Killed(severity, corpsetype)
corfrt.bos:             corpsetype = 1 ;
corfrt.bos:             return(corpsetype);
corfrt.bos:             corpsetype = 2 ;
corfrt.bos:             return(corpsetype);
corfrt.bos:             corpsetype = 3 ;
corfrt.bos:             return(corpsetype);
corfrt.bos:     corpsetype = 3 ;
corfrt.bos:     return corpsetype;
Binary file corfrt.cob matches
corfus.bos:// OffsetToScriptCodeIndexArray        52c
corfus.bos:// OffsetToScriptNameOffsetArray       53c
corfus.bos:// OffsetToPieceNameOffsetArray        54c
corfus.bos:// OffsetToScriptCode                  2c
corfus.bos:// OffsetToNameArray                   564
corfus.bos:// OffsetToFirstName                   564
corfus.bos:Killed(severity, corpsetype)
corfus.bos:             corpsetype = 1 ;
corfus.bos:             return(corpsetype);
corfus.bos:             corpsetype = 2 ;
corfus.bos:             return(corpsetype);
corfus.bos:             corpsetype = 3 ;
corfus.bos:             return(corpsetype);
corfus.bos:     corpsetype = 3 ;
corfus.bos:     return corpsetype;
corgant.bos:    set YARD_OPEN to 1;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 1;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set YARD_OPEN to 0;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 0;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set INBUILDSTANCE to 1;
corgant.bos:    set INBUILDSTANCE to 0;
corgant.bos:    set-signal-mask SIG_ACTIVATE;
corgant.bos:    set-signal-mask 0;
corgant.bos:Killed(severity, corpsetype)
corgant.bos:            corpsetype = 1 ;
corgant.bos:            return(corpsetype);
corgant.bos:            corpsetype = 2 ;
corgant.bos:            return(corpsetype);
corgant.bos:            corpsetype = 3 ;
corgant.bos:            return(corpsetype);
corgant.bos:    corpsetype = 3 ;
corgant.bos:    return corpsetype;
corgarp.bos:SetMaxReloadTime(Func_Var_1)
corgarp.bos:SetStunned(State)
corgarp.bos:    set-signal-mask SIG_AIM;
corgarp.bos:Killed(severity, corpsetype)
corgarp.bos:            corpsetype = 1 ;
corgarp.bos:            return(corpsetype);
corgarp.bos:            corpsetype = 2 ;
corgarp.bos:            return(corpsetype);
corgarp.bos:            corpsetype = 3 ;
corgarp.bos:            return(corpsetype);
corgarp.bos:    corpsetype = 3 ;
corgarp.bos:    return corpsetype;
Binary file corgarp.cob matches
corgate.bos:Killed(severity, corpsetype)
corgate.bos:            corpsetype = 1 ;
corgate.bos:            return(corpsetype);
corgate.bos:            corpsetype = 2 ;
corgate.bos:            return(corpsetype);
corgate.bos:            corpsetype = 3 ;
corgate.bos:            return(corpsetype);
corgate.bos:    corpsetype = 3 ;
corgate.bos:    return corpsetype;
corgator.bos:SetMaxReloadTime(Func_Var_1)
corgator.bos:SetStunned(State)
corgator.bos:   set-signal-mask SIG_AIM;
corgator.bos:Killed(severity, corpsetype)
corgator.bos:           corpsetype = 1 ;
corgator.bos:           return(corpsetype);
corgator.bos:           corpsetype = 2 ;
corgator.bos:           return(corpsetype);
corgator.bos:           corpsetype = 3 ;
corgator.bos:           return(corpsetype);
corgator.bos:   corpsetype = 3 ;
corgator.bos:   return corpsetype;
Binary file corgator.cob matches
corgeo.lua:             return 1 -- corpsetype
corgeo.lua:             return 2 -- corpsetype
corgeo.lua:             return 3 -- corpsetype
corgol.bos:SetMaxReloadTime(Func_Var_1)
corgol.bos:SetStunned(State)
corgol.bos:     set-signal-mask SIG_AIM;
corgol.bos:Killed(severity, corpsetype)
corgol.bos:             corpsetype = 1 ;
corgol.bos:             return(corpsetype);
corgol.bos:             corpsetype = 2 ;
corgol.bos:             return(corpsetype);
corgol.bos:             corpsetype = 3 ;
corgol.bos:             return(corpsetype);
corgol.bos:     corpsetype = 3 ;
corgol.bos:     return corpsetype;
Binary file corgol.cob matches
corgplat.bos:   set-signal-mask SIG_AIM;
corgplat.bos:Killed(severity, corpsetype)
corgplat.bos:           corpsetype = 1 ;
corgplat.bos:           return(corpsetype);
corgplat.bos:           corpsetype = 2 ;
corgplat.bos:           return(corpsetype);
corgplat.bos:           corpsetype = 3 ;
corgplat.bos:           return(corpsetype);
corgplat.bos:   corpsetype = 3 ;
corgplat.bos:   return corpsetype;
corhal.bos:             // Set values for tilt
corhal.bos:     set-signal-mask SIG_MOVE;
corhal.bos:setSFXoccupy(Func_Var_1)
corhal.bos:SetMaxReloadTime(Func_Var_1)
corhal.bos:SetStunned(State)
corhal.bos:     set-signal-mask SIG_AIM;
corhal.bos:Killed(severity, corpsetype)
corhal.bos:             corpsetype = 1 ;
corhal.bos:             return(corpsetype);
corhal.bos:             corpsetype = 2 ;
corhal.bos:             return(corpsetype);
corhal.bos:             corpsetype = 3 ;
corhal.bos:             return(corpsetype);
corhal.bos:     corpsetype = 3 ;
corhal.bos:     return corpsetype;
Binary file corhal.cob matches
corhllt.bos:SetMaxReloadTime(Func_Var_1)
corhllt.bos:    set-signal-mask SIG_AIM;
corhllt.bos:    set-signal-mask SIG_AIM_2;
corhllt.bos:Killed(severity, corpsetype)
corhllt.bos:            corpsetype = 1 ;
corhllt.bos:            return(corpsetype);
corhllt.bos:            corpsetype = 2 ;
corhllt.bos:            return(corpsetype);
corhllt.bos:            corpsetype = 3 ;
corhllt.bos:            return(corpsetype);
corhllt.bos:    corpsetype = 3 ;
corhllt.bos:    return corpsetype;
Binary file corhllt.cob matches
corhlt.bos:     set-signal-mask SIG_AIM;
corhlt.bos:     set-signal-mask SIG_AIM;
corhlt.bos:Killed(severity, corpsetype)
corhlt.bos:             corpsetype = 1 ;
corhlt.bos:             return(corpsetype);
corhlt.bos:             corpsetype = 2 ;
corhlt.bos:             return(corpsetype);
corhlt.bos:             corpsetype = 3 ;
corhlt.bos:             return(corpsetype);
corhlt.bos:     corpsetype = 3 ;
corhlt.bos:     return corpsetype;
corhp.bos:// OffsetToScriptCodeIndexArray        11e4
corhp.bos:// OffsetToScriptNameOffsetArray       1230
corhp.bos:// OffsetToPieceNameOffsetArray        127c
corhp.bos:// OffsetToScriptCode                  2c
corhp.bos:// OffsetToNameArray                   12a4
corhp.bos:// OffsetToFirstName                   12a4
corhp.bos:/*   162:*/   set YARD_OPEN to 1;
corhp.bos:/*   16d:*/           set BUGGER_OFF to 1;
corhp.bos:/*   175:*/           set YARD_OPEN to 1;
corhp.bos:/*   17c:*/   set BUGGER_OFF to 0;
corhp.bos:/*   184:*/   set YARD_OPEN to 0;
corhp.bos:/*   18e:*/           set BUGGER_OFF to 1;
corhp.bos:/*   196:*/           set YARD_OPEN to 0;
corhp.bos:/*   19d:*/   set BUGGER_OFF to 0;
corhp.bos:/*   1bb:*/   set INBUILDSTANCE to 1;
corhp.bos:/*   1c3:*/   set INBUILDSTANCE to 0;
corhp.bos:/*   28c:*/   set-signal-mask SIG_ACTIVATE;
corhp.bos:/*   297:*/   set-signal-mask 0;
corhp.bos:Killed(severity, corpsetype)
corhp.bos:              corpsetype = 1 ;
corhp.bos:              return(corpsetype);
corhp.bos:              corpsetype = 2 ;
corhp.bos:              return(corpsetype);
corhp.bos:              corpsetype = 3 ;
corhp.bos:              return(corpsetype);
corhp.bos:      corpsetype = 3 ;
corhp.bos:      return corpsetype;
corhrk.bos:     //set-signal-mask SIG_WALK;
corhrk.bos:SetMaxReloadTime(Func_Var_1)
corhrk.bos:SetStunned(State)
corhrk.bos:     set-signal-mask SIG_AIM;
corhrk.bos:Killed(severity, corpsetype)
corhrk.bos:             corpsetype = 1 ;
corhrk.bos:             return(corpsetype);
corhrk.bos:             corpsetype = 2 ;
corhrk.bos:             return(corpsetype);
corhrk.bos:             corpsetype = 3 ;
corhrk.bos:             return(corpsetype);
corhrk.bos:     corpsetype = 3 ;
corhrk.bos:     return corpsetype;
Binary file corhrk.cob matches
corhunt.bos:Killed(severity, corpsetype)
corhunt.bos:            corpsetype = 1 ;
corhunt.bos:            return(corpsetype);
corhunt.bos:            corpsetype = 2 ;
corhunt.bos:            return(corpsetype);
corhunt.bos:            corpsetype = 3 ;
corhunt.bos:            return(corpsetype);
corhunt.bos:    corpsetype = 3 ;
corhunt.bos:    return corpsetype;
corhurc.bos:Killed(severity, corpsetype)
corhurc.bos:            corpsetype = 1 ;
corhurc.bos:            return(corpsetype);
corhurc.bos:            corpsetype = 2 ;
corhurc.bos:            return(corpsetype);
corhurc.bos:            corpsetype = 3 ;
corhurc.bos:            return(corpsetype);
corhurc.bos:    corpsetype = 3 ;
corhurc.bos:    return corpsetype;
corint.bos:     set-signal-mask SIG_AIM;
corint.bos:Killed(severity, corpsetype)
corint.bos:             corpsetype = 1 ;
corint.bos:             return(corpsetype);
corint.bos:             corpsetype = 2 ;
corint.bos:             return(corpsetype);
corint.bos:             corpsetype = 3 ;
corint.bos:             return(corpsetype);
corint.bos:     corpsetype = 3 ;
corint.bos:     return corpsetype;
corintr.bos:    set ARMORED to 1;
corintr.bos:    set-signal-mask SIG_MOVE;
corintr.bos:BoomReset()
corintr.bos:    set-signal-mask 2;
corintr.bos:            set BUSY to 1;
corintr.bos:            call-script BoomReset();
corintr.bos:            set BUSY to 0;
corintr.bos:    set BUSY to 1;
corintr.bos:    start-script BoomReset();
corintr.bos:    set BUSY to 0;
corintr.bos:Killed(severity, corpsetype)
corintr.bos:            corpsetype = 1 ;
corintr.bos:            return(corpsetype);
corintr.bos:            corpsetype = 2 ;
corintr.bos:            return(corpsetype);
corintr.bos:            corpsetype = 3 ;
corintr.bos:            return(corpsetype);
corintr.bos:    corpsetype = 3 ;
corintr.bos:    return corpsetype;
Binary file corintr.cob matches
corjamt.bos:// OffsetToScriptCodeIndexArray        744
corjamt.bos:// OffsetToScriptNameOffsetArray       76c
corjamt.bos:// OffsetToPieceNameOffsetArray        794
corjamt.bos:// OffsetToScriptCode                  2c
corjamt.bos:// OffsetToNameArray                   7a8
corjamt.bos:// OffsetToFirstName                   7a8
corjamt.bos:Killed(severity, corpsetype)
corjamt.bos:            corpsetype = 1 ;
corjamt.bos:            return(corpsetype);
corjamt.bos:            corpsetype = 2 ;
corjamt.bos:            return(corpsetype);
corjamt.bos:            corpsetype = 3 ;
corjamt.bos:            return(corpsetype);
corjamt.bos:    corpsetype = 3 ;
corjamt.bos:    return corpsetype;
corjugg.bos:    set-signal-mask SIG_WALK;
corjugg.bos:SetMaxReloadTime(Func_Var_1)
corjugg.bos:    set-signal-mask 4 | 8 | 16 | 32;
corjugg.bos:    set-signal-mask 4;
corjugg.bos:    set-signal-mask 8;
corjugg.bos:    set CHANGE_TARGET to 2;
corjugg.bos:    set-signal-mask 16;
corjugg.bos:    set CHANGE_TARGET to 3;
corjugg.bos:    set-signal-mask 32;
corjugg.bos:    set CHANGE_TARGET to 4;
corjugg.bos:Killed(severity, corpsetype)
corjugg.bos:            corpsetype = 1;
corjugg.bos:            return (corpsetype);
corjugg.bos:            corpsetype = 2;
corjugg.bos:            return (corpsetype);
corjugg.bos:            corpsetype = 3;
corjugg.bos:            return (corpsetype);
corjugg.bos:    corpsetype = 3;
corjugg.bos:    return corpsetype;
Binary file corjugg.cob matches
corjugg.lua_old:        SetSignalMask( SIG_walk )
corjugg.lua_old:        SetSignalMask( SIG_stop )
corjugg.lua_old:        SetSignalMask( SIG_aim1 )
corjugg.lua_old:        SetSignalMask( SIG_aim2 )
corjugg.lua_old:        SetSignalMask( SIG_aim3 )
corjugg.lua_old:        SetSignalMask( SIG_aim4 )
corjuno.bos:// OffsetToScriptCodeIndexArray        d80
corjuno.bos:// OffsetToScriptNameOffsetArray       dc4
corjuno.bos:// OffsetToPieceNameOffsetArray        e08
corjuno.bos:// OffsetToScriptCode                  2c
corjuno.bos:// OffsetToNameArray                   e4c
corjuno.bos:// OffsetToFirstName                   e4c
corjuno.bos:SetMaxReloadTime(Func_Var_1)
corjuno.bos:/*   1f1:*/ set-signal-mask 0;
corjuno.bos:/*   206:*/ set-signal-mask SIG_AIM;
corjuno.bos:Killed(severity, corpsetype)
corjuno.bos:            corpsetype = 1 ;
corjuno.bos:            return(corpsetype);
corjuno.bos:            corpsetype = 2 ;
corjuno.bos:            return(corpsetype);
corjuno.bos:            corpsetype = 3 ;
corjuno.bos:            return(corpsetype);
corjuno.bos:    corpsetype = 3 ;
corjuno.bos:    return corpsetype;
Binary file corjuno.cob matches
corkarg.bos:    //set-signal-mask SIG_WALK;
corkarg.bos:    set-signal-mask SIG_AIM;
corkarg.bos:Killed(severity, corpsetype)
corkarg.bos:            corpsetype = 1 ;
corkarg.bos:            corpsetype = 2 ;
corkarg.bos:            corpsetype = 3 ;
corkarg.bos:    corpsetype = 3 ;
corkarg.lua_old:        SetSignalMask(SIG_WALK)
corkarg.lua_old:        SetSignalMask(SIG_RESTORE)
corkarg.lua_old:                SetSignalMask(SIG_AIM)
corkorg.bos:    set-signal-mask SIG_WALK;
corkorg.bos:    set ARMORED to 1;
corkorg.bos:SetMaxReloadTime(Func_Var_1)
corkorg.bos:setSFXoccupy(Func_Var_1)
corkorg.bos:    set-signal-mask SIG_HEAD; //sets what signals kill the current t
hread
corkorg.bos:    set-signal-mask SIG_BODY;
corkorg.bos:    set-signal-mask SIG_FOOTSTOMP_L;
corkorg.bos:    set-signal-mask SIG_FOOTSTOMP_R;
corkorg.bos:Killed(severity, corpsetype)
corkorg.bos:            corpsetype = 1 ;
corkorg.bos:            return(corpsetype);
corkorg.bos:            corpsetype = 2 ;
corkorg.bos:            return(corpsetype);
corkorg.bos:            corpsetype = 3 ;
corkorg.bos:            return(corpsetype);
corkorg.bos:    corpsetype = 3 ;
corkorg.bos:    return corpsetype;
Binary file corkorg.cob matches
corlab.lua:     UnitScript.SetSignalMask(SIG_OPENCLOSE);
corlab.lua:     UnitScript.SetUnitValue(COB.INBUILDSTANCE, 1);
corlab.lua:     UnitScript.SetSignalMask(SIG_OPENCLOSE);
corlab.lua:     UnitScript.SetUnitValue(COB.INBUILDSTANCE, 0);
corlab.lua:     UnitScript.SetSignalMask(SIG_ACTIVATE);
corlab.lua:    SetSignalMask(SIG_CRANE1);
corlab.lua:    SetSignalMask(SIG_CRANE2);
corlab.lua:     local corpsetype;
corlab.lua:             corpsetype = 1;
corlab.lua:             return corpsetype;
corlab.lua:             corpsetype = 2;
corlab.lua:             return corpsetype;
corlab.lua:             corpsetype = 3;
corlab.lua:             return corpsetype;
corlab.lua:     corpsetype = 3;
corlab.lua:     return corpsetype;
corlevlr.bos:SetMaxReloadTime(Func_Var_1)
corlevlr.bos:SetStunned(State)
corlevlr.bos:   set-signal-mask SIG_AIM;
corlevlr.bos:Killed(severity, corpsetype)
corlevlr.bos:           corpsetype = 1 ;
corlevlr.bos:           return(corpsetype);
corlevlr.bos:           corpsetype = 2 ;
corlevlr.bos:           return(corpsetype);
corlevlr.bos:           corpsetype = 3 ;
corlevlr.bos:           return(corpsetype);
corlevlr.bos:   corpsetype = 3 ;
corlevlr.bos:   return corpsetype;
Binary file corlevlr.cob matches
corllt.bos:     set-signal-mask SIG_AIM;
corllt.bos:Killed(severity, corpsetype)
corllt.bos:             corpsetype = 1 ;
corllt.bos:             return(corpsetype);
corllt.bos:             corpsetype = 2 ;
corllt.bos:             return(corpsetype);
corllt.bos:             corpsetype = 3 ;
corllt.bos:             return(corpsetype);
corllt.bos:     corpsetype = 3 ;
corllt.bos:     return corpsetype;
cormabm.bos:    set-signal-mask 0;
cormabm.bos:SetStunned(State)
cormabm.bos:    set-signal-mask SIG_AIM;
cormabm.bos:Killed(severity, corpsetype)
cormabm.bos:            corpsetype = 1 ;
cormabm.bos:            return(corpsetype);
cormabm.bos:            corpsetype = 2 ;
cormabm.bos:            return(corpsetype);
cormabm.bos:            corpsetype = 3 ;
cormabm.bos:            return(corpsetype);
cormabm.bos:    corpsetype = 3 ;
cormabm.bos:    return corpsetype;
Binary file cormabm.cob matches
cormadsam.lua:                SetSignalMask(SIG_AIM)
cormadsam.lua:                  return 1 -- corpsetype
cormadsam.lua:                  return 2 -- corpsetype
cormadsam.lua:                  return 3 -- corpsetype
cormakr.bos:                            set ACTIVATION to 1;
cormakr.bos:                            set ACTIVATION to 0;
cormakr.bos:Killed(severity, corpsetype)
cormakr.bos:            corpsetype = 1 ;
cormakr.bos:            return(corpsetype);
cormakr.bos:            corpsetype = 2 ;
cormakr.bos:            return(corpsetype);
cormakr.bos:            corpsetype = 3 ;
cormakr.bos:            return(corpsetype);
cormakr.bos:    corpsetype = 3 ;
cormakr.bos:    return corpsetype;
cormando.bos:   set-signal-mask SIG_WALK;
cormando.bos:   set INBUILDSTANCE to 0;
cormando.bos:   set INBUILDSTANCE to 1;
cormando.bos:   set-signal-mask SIG_BUILD;
cormando.bos:   set-signal-mask 0;
cormando.bos:Killed(severity, corpsetype)
cormando.bos:           corpsetype = 1 ;
cormando.bos:           return(corpsetype);
cormando.bos:           corpsetype = 2 ;
cormando.bos:           return(corpsetype);
cormando.bos:           corpsetype = 3 ;
cormando.bos:           return(corpsetype);
cormando.bos:   corpsetype = 3 ;
cormando.bos:   return corpsetype;
cormart.bos:SetMaxReloadTime(Func_Var_1)
cormart.bos:SetStunned(State)
cormart.bos:    set-signal-mask SIG_AIM;
cormart.bos:Killed(severity, corpsetype)
cormart.bos:            corpsetype = 1 ;
cormart.bos:            return(corpsetype);
cormart.bos:            corpsetype = 2 ;
cormart.bos:            return(corpsetype);
cormart.bos:            corpsetype = 3 ;
cormart.bos:            return(corpsetype);
cormart.bos:    corpsetype = 3 ;
cormart.bos:    return corpsetype;
Binary file cormart.cob matches
cormaw.bos:     set ARMORED to 0;
cormaw.bos:     set ARMORED to 1;
cormaw.bos:SetMaxReloadTime(Func_Var_1)
cormaw.bos:     set-signal-mask 0;
cormaw.bos:SetStunned(State)
cormaw.bos:     set-signal-mask SIG_AIM;
cormaw.bos:Killed(severity, corpsetype)
cormaw.bos:             corpsetype = 1 ;
cormaw.bos:             return(corpsetype);
cormaw.bos:             corpsetype = 2 ;
cormaw.bos:             return(corpsetype);
cormaw.bos:             corpsetype = 3 ;
cormaw.bos:             return(corpsetype);
cormaw.bos:     corpsetype = 3 ;
cormaw.bos:     return corpsetype;
Binary file cormaw.cob matches
cormex.bos:     set ARMORED to 0;
cormex.bos:     set ARMORED to 1;
cormex.bos:SetStunned(State)
cormex.bos:SetSpeed(Func_Var_1)
cormex.bos:Killed(severity, corpsetype)
cormex.bos:             corpsetype = 1 ;
cormex.bos:             return(corpsetype);
cormex.bos:             corpsetype = 2 ;
cormex.bos:             return(corpsetype);
cormex.bos:             corpsetype = 3 ;
cormex.bos:             return(corpsetype);
cormex.bos:     corpsetype = 3 ;
cormex.bos:     return corpsetype;
Binary file cormex.cob matches
cormexp.bos:    set ARMORED to 0;
cormexp.bos:    set ARMORED to 1;
cormexp.bos:    set ACTIVATION to 100;
cormexp.bos:            set ACTIVATION to 0;
cormexp.bos:    set ARMORED to 0;
cormexp.bos:    set-signal-mask 0;
cormexp.bos:SetStunned(State)
cormexp.bos:SetMaxReloadTime(Func_Var_1)
cormexp.bos:    set-signal-mask SIG_AIM;
cormexp.bos:    set-signal-mask 8;
cormexp.bos:    set-signal-mask SIG_AIM_2;
cormexp.bos:SetSpeed(Func_Var_1)
cormexp.bos:Killed(severity, corpsetype)
cormexp.bos:            corpsetype = 1 ;
cormexp.bos:            return(corpsetype);
cormexp.bos:            corpsetype = 2 ;
cormexp.bos:            return(corpsetype);
cormexp.bos:            corpsetype = 3 ;
cormexp.bos:            return(corpsetype);
cormexp.bos:    corpsetype = 3 ;
cormexp.bos:    return corpsetype;
Binary file cormexp.cob matches
cormh.bos:              // Set values for tilt
cormh.bos:SetMaxReloadTime(Func_Var_1)
cormh.bos:      set-signal-mask 0;
cormh.bos:SetStunned(State)
cormh.bos:      set-signal-mask SIG_RESTORE;
cormh.bos:      set-signal-mask SIG_MOVE;
cormh.bos:setSFXoccupy(Func_Var_1)
cormh.bos:      set-signal-mask SIG_AIM;
cormh.bos:Killed(severity, corpsetype)
cormh.bos:              corpsetype = 1 ;
cormh.bos:              return(corpsetype);
cormh.bos:              corpsetype = 2 ;
cormh.bos:              return(corpsetype);
cormh.bos:              corpsetype = 3 ;
cormh.bos:              return(corpsetype);
cormh.bos:      corpsetype = 3 ;
cormh.bos:      return corpsetype;
Binary file cormh.cob matches
cormist.bos:SetMaxReloadTime(Func_Var_1)
cormist.bos:SetStunned(State)
cormist.bos:    set-signal-mask SIG_AIM;
cormist.bos:Killed(severity, corpsetype)
cormist.bos:            corpsetype = 1 ;
cormist.bos:            return(corpsetype);
cormist.bos:            corpsetype = 2 ;
cormist.bos:            return(corpsetype);
cormist.bos:            corpsetype = 3 ;
cormist.bos:            return(corpsetype);
cormist.bos:    corpsetype = 3 ;
cormist.bos:    return corpsetype;
Binary file cormist.cob matches
cormls.bos:     set INBUILDSTANCE to 1;
cormls.bos:     set INBUILDSTANCE to 0;
cormls.bos:     set-signal-mask SIG_MOVE;
cormls.bos:Killed(severity, corpsetype)
cormls.bos:             corpsetype = 1 ;
cormls.bos:             return(corpsetype);
cormls.bos:             corpsetype = 2 ;
cormls.bos:             return(corpsetype);
cormls.bos:             corpsetype = 3 ;
cormls.bos:             return(corpsetype);
cormls.bos:     corpsetype = 3 ;
cormls.bos:     return corpsetype;
cormlv.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 1;
cormlv.bos:     set-signal-mask SIG_BUILD;
cormlv.bos:     set-signal-mask 0;
cormlv.bos:Killed(severity, corpsetype)
cormlv.bos:             corpsetype = 1 ;
cormlv.bos:             return(corpsetype);
cormlv.bos:             corpsetype = 2 ;
cormlv.bos:             return(corpsetype);
cormlv.bos:             corpsetype = 3 ;
cormlv.bos:             return(corpsetype);
cormlv.bos:     corpsetype = 3 ;
cormlv.bos:             return corpsetype;
cormmkr.bos:    set ARMORED to 0;  //Not needed as MM in BAR have no damage modi
fyer tag set
cormmkr.bos:    set ARMORED to 1;
cormmkr.bos:Killed(severity, corpsetype)
cormmkr.bos:            corpsetype = 1 ;
cormmkr.bos:            return(corpsetype);
cormmkr.bos:            corpsetype = 2 ;
cormmkr.bos:            return(corpsetype);
cormmkr.bos:            corpsetype = 3 ;
cormmkr.bos:            return(corpsetype);
cormmkr.bos:    corpsetype = 3 ;
cormmkr.bos:    return corpsetype;
cormoho.bos:    set ARMORED to 0;
cormoho.bos:    set ARMORED to 1;
cormoho.bos:SetStunned(State)
cormoho.bos:    set ARMORED to 1;
cormoho.bos:SetSpeed(Func_Var_1)
cormoho.bos:Killed(severity, corpsetype)
cormoho.bos:            corpsetype = 1 ;
cormoho.bos:            return(corpsetype);
cormoho.bos:            corpsetype = 2 ;
cormoho.bos:            return(corpsetype);
cormoho.bos:            corpsetype = 3 ;
cormoho.bos:            return(corpsetype);
cormoho.bos:    corpsetype = 3 ;
cormoho.bos:    return corpsetype;
Binary file cormoho.cob matches
cormort.bos:    set-signal-mask SIG_WALK;
cormort.bos:SetMaxReloadTime(Func_Var_1)
cormort.bos:SetStunned(State)
cormort.bos:    set-signal-mask SIG_AIM;
cormort.bos:Killed(severity, corpsetype)
cormort.bos:            corpsetype = 1 ;
cormort.bos:            return(corpsetype);
cormort.bos:            corpsetype = 2 ;
cormort.bos:            return(corpsetype);
cormort.bos:            corpsetype = 3 ;
cormort.bos:            return(corpsetype);
cormort.bos:    corpsetype = 3 ;
cormort.bos:    return corpsetype;
Binary file cormort.cob matches
cormship.bos:SetMaxReloadTime(Func_Var_1)
cormship.bos:SetStunned(State)
cormship.bos:   set-signal-mask SIG_MOVE;
cormship.bos:   set-signal-mask SIG_AIM;
cormship.bos:   set-signal-mask SIG_AIM_3;
cormship.bos:Killed(severity, corpsetype)
cormship.bos:           corpsetype = 1 ;
cormship.bos:           return(corpsetype);
cormship.bos:           corpsetype = 2 ;
cormship.bos:           return(corpsetype);
cormship.bos:           corpsetype = 3 ;
cormship.bos:           return(corpsetype);
cormship.bos:   corpsetype = 3 ;
cormship.bos:   return corpsetype;
Binary file cormship.cob matches
cormstor.bos:// OffsetToScriptCodeIndexArray        2f8
cormstor.bos:// OffsetToScriptNameOffsetArray       308
cormstor.bos:// OffsetToPieceNameOffsetArray        318
cormstor.bos:// OffsetToScriptCode                  2c
cormstor.bos:// OffsetToNameArray                   31c
cormstor.bos:// OffsetToFirstName                   31c
cormstor.bos:Killed(severity, corpsetype)
cormstor.bos:           corpsetype = 1 ;
cormstor.bos:           return(corpsetype);
cormstor.bos:           corpsetype = 2 ;
cormstor.bos:           return(corpsetype);
cormstor.bos:           corpsetype = 3 ;
cormstor.bos:           return(corpsetype);
cormstor.bos:   corpsetype = 3 ;
cormstor.bos:   return corpsetype;
cormuskrat.bos: set INBUILDSTANCE to 1;
cormuskrat.bos: set INBUILDSTANCE to 0;
cormuskrat.bos: set INBUILDSTANCE to 1;
cormuskrat.bos: set-signal-mask SIG_BUILD;
cormuskrat.bos: set-signal-mask 0;
cormuskrat.bos:Killed(severity, corpsetype)
cormuskrat.bos:         corpsetype = 1 ;
cormuskrat.bos:         return(corpsetype);
cormuskrat.bos:         corpsetype = 2 ;
cormuskrat.bos:         return(corpsetype);
cormuskrat.bos:         corpsetype = 3 ;
cormuskrat.bos:         return(corpsetype);
cormuskrat.bos: corpsetype = 3 ;
cormuskrat.bos: return corpsetype;
cornanotc.bos:  set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 0;
cornanotc.bos:SetStunned(State)
cornanotc.bos:Killed(severity, corpsetype)
cornanotc.bos:          corpsetype = 1 ;
cornanotc.bos:          return(corpsetype);
cornanotc.bos:          corpsetype = 2 ;
cornanotc.bos:          return(corpsetype);
cornanotc.bos:          corpsetype = 3 ;
cornanotc.bos:          return(corpsetype);
cornanotc.bos:  corpsetype = 3 ;
cornanotc.bos:  return corpsetype;
Binary file cornanotc.cob matches
cornanotcplat.bos:      set INBUILDSTANCE to 1;
cornanotcplat.bos:      set INBUILDSTANCE to 0;
cornanotcplat.bos:SetStunned(State)
cornanotcplat.bos:Killed(severity, corpsetype)
cornanotcplat.bos:              corpsetype = 1 ;
cornanotcplat.bos:              return(corpsetype);
cornanotcplat.bos:              corpsetype = 2 ;
cornanotcplat.bos:              return(corpsetype);
cornanotcplat.bos:              corpsetype = 3 ;
cornanotcplat.bos:              return(corpsetype);
cornanotcplat.bos:      corpsetype = 3 ;
cornanotcplat.bos:      return corpsetype;
Binary file cornanotcplat.cob matches
cornecro.bos:   set-signal-mask SIG_WALK;
cornecro.bos:   set INBUILDSTANCE to 0;
cornecro.bos:   set-signal-mask SIG_BUILD;
cornecro.bos:   set INBUILDSTANCE to 1;
cornecro.bos:   set-signal-mask SIG_BUILD;
cornecro.bos:Killed(severity, corpsetype)
cornecro.bos:           corpsetype = 1 ;
cornecro.bos:           return(corpsetype);
cornecro.bos:           corpsetype = 2 ;
cornecro.bos:           return(corpsetype);
cornecro.bos:           corpsetype = 3 ;
cornecro.bos:           return(corpsetype);
cornecro.bos:   corpsetype = 3 ;
cornecro.bos:   return corpsetype;
corparrow.bos:setSFXoccupy(state)
corparrow.bos:SetMaxReloadTime(Func_Var_1)
corparrow.bos:SetStunned(State)
corparrow.bos:  set-signal-mask SIG_AIM;
corparrow.bos:Killed(severity, corpsetype)
corparrow.bos:          corpsetype = 1 ;
corparrow.bos:          return(corpsetype);
corparrow.bos:          corpsetype = 2 ;
corparrow.bos:          return(corpsetype);
corparrow.bos:          corpsetype = 3 ;
corparrow.bos:          return(corpsetype);
corparrow.bos:  corpsetype = 3 ;
corparrow.bos:  return corpsetype;
Binary file corparrow.cob matches
corplat.bos:    set ARMORED to 0;
corplat.bos:    set ARMORED to 1;
corplat.bos:    set YARD_OPEN to 1;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 1;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set YARD_OPEN to 0;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 0;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set INBUILDSTANCE to 1;
corplat.bos:    set INBUILDSTANCE to 0;
corplat.bos:    set ARMORED to 1;
corplat.bos:    set-signal-mask SIG_ACTIVATE;
corplat.bos:    set-signal-mask 0;
corplat.bos:Killed(severity, corpsetype)
corplat.bos:            corpsetype = 1 ;
corplat.bos:            return(corpsetype);
corplat.bos:            corpsetype = 2 ;
corplat.bos:            return(corpsetype);
corplat.bos:            corpsetype = 3 ;
corplat.bos:            return(corpsetype);
corplat.bos:    corpsetype = 3 ;
corplat.bos:    return corpsetype;
corpship.bos:SetDirection(heading)
corpship.bos:   set-signal-mask 4096;
corpship.bos:SetMaxReloadTime(Func_Var_1)
corpship.bos:SetStunned(State)
corpship.bos:   set-signal-mask 0;
corpship.bos:   set-signal-mask SIG_MOVE;
corpship.bos:   set-signal-mask SIG_AIM;
corpship.bos:Killed(severity, corpsetype)
corpship.bos:           corpsetype = 1;
corpship.bos:           return (corpsetype);
corpship.bos:           corpsetype = 2;
corpship.bos:           return (corpsetype);
corpship.bos:   corpsetype = 3;
corpship.bos:   return corpsetype;
Binary file corpship.cob matches
corpt.bos:SetMaxReloadTime(Func_Var_1)
corpt.bos:      set-signal-mask 0;
corpt.bos:SetStunned(State)
corpt.bos:      set-signal-mask SIG_MOVE;
corpt.bos:      set-signal-mask SIG_AIM_3;
corpt.bos:      set-signal-mask SIG_AIM;
corpt.bos:Killed(severity, corpsetype)
corpt.bos:              corpsetype = 1 ;
corpt.bos:              return(corpsetype);
corpt.bos:              corpsetype = 2 ;
corpt.bos:              return(corpsetype);
corpt.bos:              corpsetype = 3 ;
corpt.bos:              return(corpsetype);
corpt.bos:      corpsetype = 3 ;
corpt.bos:      return corpsetype;
Binary file corpt.cob matches
corptl.bos:     set-signal-mask SIG_AIM;
corptl.bos:Killed(severity, corpsetype)
corptl.bos:             corpsetype = 1;
corptl.bos:             return (corpsetype);
corptl.bos:             corpsetype = 2;
corptl.bos:             return (corpsetype);
corptl.bos:             corpsetype = 3;
corptl.bos:             return (corpsetype);
corptl.bos:     corpsetype = 3;
corptl.bos:     return corpsetype;
corpun.lua:             SetSignalMask(SIG_AIM)
corpun.lua:             return 1 -- corpsetype
corpun.lua:             return 2 -- corpsetype
corpun.lua:             return 3 -- corpsetype
corpyro.bos:    //set-signal-mask SIG_WALK;
corpyro.bos:SetMaxReloadTime(Func_Var_1)
corpyro.bos:SetStunned(State)
corpyro.bos:    set-signal-mask SIG_AIM;
corpyro.bos:Killed(severity, corpsetype)
corpyro.bos:            corpsetype = 1 ;
corpyro.bos:            return(corpsetype);
corpyro.bos:            corpsetype = 2 ;
corpyro.bos:            return(corpsetype);
corpyro.bos:            corpsetype = 3 ;
corpyro.bos:            return(corpsetype);
corpyro.bos:    corpsetype = 3 ;
corpyro.bos:    return corpsetype;
Binary file corpyro.cob matches
corrad.bos:// OffsetToScriptCodeIndexArray        54c
corrad.bos:// OffsetToScriptNameOffsetArray       574
corrad.bos:// OffsetToPieceNameOffsetArray        59c
corrad.bos:// OffsetToScriptCode                  2c
corrad.bos:// OffsetToNameArray                   5a4
corrad.bos:// OffsetToFirstName                   5a4
corrad.bos:Killed(severity, corpsetype)
corrad.bos:             corpsetype = 1 ;
corrad.bos:             return(corpsetype);
corrad.bos:             corpsetype = 2 ;
corrad.bos:             return(corpsetype);
corrad.bos:             corpsetype = 3 ;
corrad.bos:             return(corpsetype);
corrad.bos:     corpsetype = 3 ;
corrad.bos:     return corpsetype;
corraid.bos:SetMaxReloadTime(Func_Var_1)
corraid.bos:    set-signal-mask 0;
corraid.bos:SetStunned(State)
corraid.bos:    set-signal-mask SIG_AIM;
corraid.bos:Killed(severity, corpsetype)
corraid.bos:            corpsetype = 1 ;
corraid.bos:            return(corpsetype);
corraid.bos:            corpsetype = 2 ;
corraid.bos:            return(corpsetype);
corraid.bos:            corpsetype = 3 ;
corraid.bos:            return(corpsetype);
corraid.bos:    corpsetype = 3 ;
corraid.bos:    return corpsetype;
Binary file corraid.cob matches
correap.bos:setSFXoccupy(state)
correap.bos:SetMaxReloadTime(Func_Var_1)
correap.bos:SetStunned(State)
correap.bos:    set-signal-mask SIG_AIM;
correap.bos:Killed(severity, corpsetype)
correap.bos:            corpsetype = 1 ;
correap.bos:            return(corpsetype);
correap.bos:            corpsetype = 2 ;
correap.bos:            return(corpsetype);
correap.bos:            corpsetype = 3 ;
correap.bos:            return(corpsetype);
correap.bos:    corpsetype = 3 ;
correap.bos:    return corpsetype;
Binary file correap.cob matches
correcl.bos:    set-signal-mask SIG_MOVE;
correcl.bos:    set INBUILDSTANCE to 1;
correcl.bos:    set INBUILDSTANCE to 0;
correcl.bos:Killed(severity, corpsetype)
correcl.bos:            corpsetype = 1 ;
correcl.bos:            return(corpsetype);
correcl.bos:            corpsetype = 2 ;
correcl.bos:            return(corpsetype);
correcl.bos:            corpsetype = 3 ;
correcl.bos:            return(corpsetype);
correcl.bos:    corpsetype = 3 ;
correcl.bos:    return corpsetype;
corrl.bos:// OffsetToScriptCodeIndexArray        9cc
corrl.bos:// OffsetToScriptNameOffsetArray       9ec
corrl.bos:// OffsetToPieceNameOffsetArray        a0c
corrl.bos:// OffsetToScriptCode                  2c
corrl.bos:// OffsetToNameArray                   a2c
corrl.bos:// OffsetToFirstName                   a2c
corrl.bos:SetStunned(State)
corrl.bos:Killed(severity, corpsetype)
corrl.bos:              corpsetype = 1 ;
corrl.bos:              return(corpsetype);
corrl.bos:              corpsetype = 2 ;
corrl.bos:              return(corpsetype);
corrl.bos:              corpsetype = 3 ;
corrl.bos:              return(corpsetype);
corrl.bos:      corpsetype = 3 ;
corrl.bos:      return corpsetype;
Binary file corrl.cob matches
corroach.bos:Killed(severity, corpsetype)
corroach.bos:           corpsetype = 1 ;
corroach.bos:           return(corpsetype);
corroach.bos:           corpsetype = 2 ;
corroach.bos:           return(corpsetype);
corroach.bos:           corpsetype = 3 ;
corroach.bos:           return(corpsetype);
corroach.bos:   corpsetype = 3 ;
corroach.bos:   return corpsetype;
corroy.bos:SetMaxReloadTime(Func_Var_1)
corroy.bos:SetStunned(State)
corroy.bos:     set-signal-mask SIG_MOVE;
corroy.bos:     set-signal-mask 2;
corroy.bos:     set-signal-mask 4;
corroy.bos:Killed(severity, corpsetype)
corroy.bos:             corpsetype = 1 ;
corroy.bos:             return(corpsetype);
corroy.bos:             corpsetype = 2 ;
corroy.bos:             return(corpsetype);
corroy.bos:             corpsetype = 3 ;
corroy.bos:             return(corpsetype);
corroy.bos:     corpsetype = 3 ;
corroy.bos:     return corpsetype;
Binary file corroy.cob matches
corsb.bos:setSFXoccupy(Func_Var_1)
corsb.bos:Killed(severity, corpsetype)
corsb.bos:              corpsetype = 1 ;
corsb.bos:              return(corpsetype);
corsb.bos:              corpsetype = 2 ;
corsb.bos:              return(corpsetype);
corsb.bos:              corpsetype = 3 ;
corsb.bos:              return(corpsetype);
corsb.bos:      corpsetype = 3 ;
corsb.bos:      return corpsetype;
Binary file corsb.cob matches
corscreamer.bos:SetStunned(State)
corscreamer.bos:        set-signal-mask SIG_AIM;
corscreamer.bos:Killed(severity, corpsetype)
corscreamer.bos:                corpsetype = 1 ;
corscreamer.bos:                return(corpsetype);
corscreamer.bos:                corpsetype = 2 ;
corscreamer.bos:                return(corpsetype);
corscreamer.bos:                corpsetype = 3 ;
corscreamer.bos:                return(corpsetype);
corscreamer.bos:        corpsetype = 3 ;
corscreamer.bos:        return corpsetype;
Binary file corscreamer.cob matches
corsd.bos:// OffsetToScriptCodeIndexArray        43c
corsd.bos:// OffsetToScriptNameOffsetArray       44c
corsd.bos:// OffsetToPieceNameOffsetArray        45c
corsd.bos:// OffsetToScriptCode                  2c
corsd.bos:// OffsetToNameArray                   460
corsd.bos:// OffsetToFirstName                   460
corsd.bos:Killed(severity, corpsetype)
corsd.bos:              corpsetype = 1 ;
corsd.bos:              return(corpsetype);
corsd.bos:              corpsetype = 2 ;
corsd.bos:              return(corpsetype);
corsd.bos:              corpsetype = 3 ;
corsd.bos:              return(corpsetype);
corsd.bos:      corpsetype = 3 ;
corsd.bos:      return corpsetype;
corseah.bos:    set-signal-mask 8;
corseah.bos:    set-signal-mask 8;
corseah.bos:    set-signal-mask 8;
corseah.bos:Killed(severity, corpsetype)
corseah.bos:            corpsetype = 1 ;
corseah.bos:            return(corpsetype);
corseah.bos:            corpsetype = 2 ;
corseah.bos:            return(corpsetype);
corseah.bos:            corpsetype = 3 ;
corseah.bos:            return(corpsetype);
corseah.bos:    corpsetype = 3 ;
corseah.bos:    return corpsetype;
corseal.bos:setSFXoccupy(state)
corseal.bos:SetMaxReloadTime(Func_Var_1)
corseal.bos:SetStunned(State)
corseal.bos:    set-signal-mask SIG_AIM;
corseal.bos:Killed(severity, corpsetype)
corseal.bos:            corpsetype = 1 ;
corseal.bos:            return(corpsetype);
corseal.bos:            corpsetype = 2 ;
corseal.bos:            return(corpsetype);
corseal.bos:            corpsetype = 3 ;
corseal.bos:            return(corpsetype);
corseal.bos:    corpsetype = 3 ;
corseal.bos:    return corpsetype;
Binary file corseal.cob matches
corseap.bos:Killed(severity, corpsetype)
corseap.bos:            corpsetype = 1 ;
corseap.bos:            return(corpsetype);
corseap.bos:            corpsetype = 2 ;
corseap.bos:            return(corpsetype);
corseap.bos:            corpsetype = 3 ;
corseap.bos:            return(corpsetype);
corseap.bos:    corpsetype = 3 ;
corseap.bos:    return corpsetype;
corsent.bos:SetMaxReloadTime(Func_Var_1)
corsent.bos:    set-signal-mask 0;
corsent.bos:SetStunned(State)
corsent.bos:    set-signal-mask SIG_AIM_3;
corsent.bos:Killed(severity, corpsetype)
corsent.bos:            corpsetype = 1 ;
corsent.bos:            return(corpsetype);
corsent.bos:            corpsetype = 2 ;
corsent.bos:            return(corpsetype);
corsent.bos:            corpsetype = 3 ;
corsent.bos:            return(corpsetype);
corsent.bos:    corpsetype = 3 ;
corsent.bos:    return corpsetype;
Binary file corsent.cob matches
corsfig.bos:    set-signal-mask SIG_MOVE;
corsfig.bos:Killed(severity, corpsetype)
corsfig.bos:            corpsetype = 1 ;
corsfig.bos:            return(corpsetype);
corsfig.bos:            corpsetype = 2 ;
corsfig.bos:            return(corpsetype);
corsfig.bos:            corpsetype = 3 ;
corsfig.bos:            return(corpsetype);
corsfig.bos:    corpsetype = 3 ;
corsfig.bos:    return corpsetype;
corsh.bos:              // Set values for tilt
corsh.bos:      set-signal-mask SIG_MOVE;
corsh.bos:setSFXoccupy(Func_Var_1)
corsh.bos:SetMaxReloadTime(Func_Var_1)
corsh.bos:SetStunned(State)
corsh.bos:      set-signal-mask SIG_AIM;
corsh.bos:Killed(severity, corpsetype)
corsh.bos:              corpsetype = 1 ;
corsh.bos:              return(corpsetype);
corsh.bos:              corpsetype = 2 ;
corsh.bos:              return(corpsetype);
corsh.bos:              corpsetype = 3 ;
corsh.bos:              return(corpsetype);
corsh.bos:      corpsetype = 3 ;
corsh.bos:      return corpsetype;
Binary file corsh.cob matches
corshad.bos:Killed(severity, corpsetype)
corshad.bos:            corpsetype = 1 ;
corshad.bos:            return(corpsetype);
corshad.bos:            corpsetype = 2 ;
corshad.bos:            return(corpsetype);
corshad.bos:            corpsetype = 3 ;
corshad.bos:            return(corpsetype);
corshad.bos:    corpsetype = 3 ;
corshad.bos:    return corpsetype;
corshark.bos:   set-signal-mask SIG_MOVE;
corshark.bos:Killed(severity, corpsetype)
corshark.bos:           corpsetype = 1 ;
corshark.bos:           return(corpsetype);
corshark.bos:           corpsetype = 2 ;
corshark.bos:           return(corpsetype);
corshark.bos:           corpsetype = 3 ;
corshark.bos:           return(corpsetype);
corshark.bos:   corpsetype = 3 ;
corshark.bos:   return corpsetype;
corshiva.bos:   set ARMORED to 1;
corshiva.bos:SetMaxReloadTime(maxtime_ms) //this is called by engine immediately
 after Create(), and returns the longest of all weapon reload times in ms
corshiva.bos:   set ARMORED to 0;
corshiva.bos:   set ARMORED to 1;
corshiva.bos:   set-signal-mask SIG_AIM;
corshiva.bos:   set-signal-mask SIG_AIM;
corshiva.bos:   set-signal-mask SIG_AIM_3;
corshiva.bos:Killed(severity, corpsetype)
Binary file corshiva.cob matches
corshiva.lua_old:       SetSignalMask( SIG_walk )
corshiva.lua_old:                               UnitScript.SetUnitValue(COB.ARMO
RED, 1);
corshiva.lua_old:                               UnitScript.SetUnitValue(COB.ARMO
RED, 0);
corshiva.lua_old:       SetSignalMask( SIG_swim )
corshiva.lua_old:    SetSignalMask( SIG_wake )
corshiva.lua_old:       SetSignalMask( SIG_stop )
corshiva.lua_old:       SetSignalMask( SIG_stop )
corshiva.lua_old:    SetSignalMask( SIG_open )
corshiva.lua_old:       SetSignalMask( SIG_aim1 )
corshiva.lua_old:       SetSignalMask( SIG_aim3 )
corshroud.bos:// OffsetToScriptCodeIndexArray        898
corshroud.bos:// OffsetToScriptNameOffsetArray       8c4
corshroud.bos:// OffsetToPieceNameOffsetArray        8f0
corshroud.bos:// OffsetToScriptCode                  2c
corshroud.bos:// OffsetToNameArray                   904
corshroud.bos:// OffsetToFirstName                   904
corshroud.bos:/*    80:*/               set ACTIVATION to 0;
corshroud.bos:/*   133:*/               set-signal-mask 2;
corshroud.bos:/*   138:*/               set ACTIVATION to 0;
corshroud.bos:/*   144:*/               set ACTIVATION to 100;
corshroud.bos:Killed(severity, corpsetype)
corshroud.bos:          corpsetype = 1 ;
corshroud.bos:          return(corpsetype);
corshroud.bos:          corpsetype = 2 ;
corshroud.bos:          return(corpsetype);
corshroud.bos:          corpsetype = 3 ;
corshroud.bos:          return(corpsetype);
corshroud.bos:  corpsetype = 3 ;
corshroud.bos:  return corpsetype;
corsilo.bos:// OffsetToScriptCodeIndexArray        c08
corsilo.bos:// OffsetToScriptNameOffsetArray       c4c
corsilo.bos:// OffsetToPieceNameOffsetArray        c90
corsilo.bos:// OffsetToScriptCode                  2c
corsilo.bos:// OffsetToNameArray                   ca4
corsilo.bos:// OffsetToFirstName                   ca4
corsilo.bos:SetMaxReloadTime(Func_Var_1)
corsilo.bos:/*   217:*/ set-signal-mask 0;
corsilo.bos:/*   22c:*/ set-signal-mask SIG_AIM;
corsilo.bos:Killed(severity, corpsetype)
corsilo.bos:            corpsetype = 1 ;
corsilo.bos:            return(corpsetype);
corsilo.bos:            corpsetype = 2 ;
corsilo.bos:            return(corpsetype);
corsilo.bos:            corpsetype = 3 ;
corsilo.bos:            return(corpsetype);
corsilo.bos:    corpsetype = 3 ;
corsilo.bos:    return corpsetype;
Binary file corsilo.cob matches
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set-signal-mask 4;
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 100;
corsjam.bos:    set-signal-mask SIG_MOVE;
corsjam.bos:Killed(severity, corpsetype)
corsjam.bos:            corpsetype = 1 ;
corsjam.bos:            return(corpsetype);
corsjam.bos:            corpsetype = 2 ;
corsjam.bos:            return(corpsetype);
corsjam.bos:            corpsetype = 3 ;
corsjam.bos:            return(corpsetype);
corsjam.bos:    corpsetype = 3 ;
corsjam.bos:    return corpsetype;
corsktl.bos:Killed(severity, corpsetype)
corsktl.bos:            corpsetype = 1 ;
corsktl.bos:            return(corpsetype);
corsktl.bos:            corpsetype = 2 ;
corsktl.bos:            return(corpsetype);
corsktl.bos:            corpsetype = 3 ;
corsktl.bos:            return(corpsetype);
corsktl.bos:    corpsetype = 3 ;
corsktl.bos:    return corpsetype;
corsnap.bos:            // Set values for tilt
corsnap.bos:    set-signal-mask SIG_MOVE;
corsnap.bos:setSFXoccupy(Func_Var_1)
corsnap.bos:SetMaxReloadTime(Func_Var_1)
corsnap.bos:SetStunned(State)
corsnap.bos:    set-signal-mask SIG_AIM;
corsnap.bos:Killed(severity, corpsetype)
corsnap.bos:            corpsetype = 1 ;
corsnap.bos:            return(corpsetype);
corsnap.bos:            corpsetype = 2 ;
corsnap.bos:            return(corpsetype);
corsnap.bos:            corpsetype = 3 ;
corsnap.bos:            return(corpsetype);
corsnap.bos:    corpsetype = 3 ;
corsnap.bos:    return corpsetype;
Binary file corsnap.cob matches
corsok.bos:     set-signal-mask SIG_MOVE;
corsok.bos:setSFXoccupy(state)
corsok.bos:SetStunned(State)
corsok.bos:     set-signal-mask SIG_AIM;
corsok.bos:     set-signal-mask SIG_AIM_3;
corsok.bos:Killed(severity, corpsetype)
corsok.bos:                     corpsetype = 1;
corsok.bos:                     return (corpsetype);
corsok.bos:             corpsetype = 2;
corsok.bos:             return (corpsetype);
corsok.bos:             corpsetype = 3;
corsok.bos:             return (corpsetype);
corsok.bos:     corpsetype = 3;
corsok.bos:     return (corpsetype);
Binary file corsok.cob matches
corsolar.bos:   set YARD_OPEN to 1;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 1;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set YARD_OPEN to 0;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 0;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set ACTIVATION to 100;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:   set ARMORED to 0;
corsolar.bos:   set ARMORED to 1;
corsolar.bos:           set-signal-mask 2;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:           set ACTIVATION to 100;
corsolar.bos:Killed(severity, corpsetype)
corsolar.bos:           corpsetype = 1 ;
corsolar.bos:           return(corpsetype);
corsolar.bos:           corpsetype = 2 ;
corsolar.bos:           return(corpsetype);
corsolar.bos:           corpsetype = 3 ;
corsolar.bos:           return(corpsetype);
corsolar.bos:   corpsetype = 3 ;
corsolar.bos:   return corpsetype;
corsonar.bos:// OffsetToScriptCodeIndexArray        42c
corsonar.bos:// OffsetToScriptNameOffsetArray       450
corsonar.bos:// OffsetToPieceNameOffsetArray        474
corsonar.bos:// OffsetToScriptCode                  2c
corsonar.bos:// OffsetToNameArray                   47c
corsonar.bos:// OffsetToFirstName                   47c
corsonar.bos:Killed(severity, corpsetype)
corsonar.bos:           corpsetype = 1 ;
corsonar.bos:           return(corpsetype);
corsonar.bos:           corpsetype = 2 ;
corsonar.bos:           return(corpsetype);
corsonar.bos:           corpsetype = 3 ;
corsonar.bos:           return(corpsetype);
corsonar.bos:   corpsetype = 3 ;
corsonar.bos:   return corpsetype;
corspec.bos:    set-signal-mask SIG_WALK;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:    set-signal-mask SIG_ACTIVATE;
corspec.bos:    set-signal-mask SIG_ACTIVATE;
corspec.bos:            set-signal-mask 4;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 100;
corspec.bos:SetStunned(State)
corspec.bos:Killed(severity, corpsetype)
corspec.bos:            corpsetype = 1 ;
corspec.bos:            return(corpsetype);
corspec.bos:            corpsetype = 2 ;
corspec.bos:            return(corpsetype);
corspec.bos:            corpsetype = 3 ;
corspec.bos:            return(corpsetype);
corspec.bos:    corpsetype = 3 ;
corspec.bos:    return corpsetype;
Binary file corspec.cob matches
corspy.bos:     //set-signal-mask SIG_WALK;
corspy.bos:     set INBUILDSTANCE to 1;
corspy.bos:     set INBUILDSTANCE to 0;
corspy.bos:setSFXoccupy(Func_Var_1)
corspy.bos:Killed(severity, corpsetype)
corspy.bos:             corpsetype = 1 ;
corspy.bos:             return(corpsetype);
corspy.bos:             corpsetype = 2 ;
corspy.bos:             return(corpsetype);
corspy.bos:             corpsetype = 3 ;
corspy.bos:             return(corpsetype);
corspy.bos:     corpsetype = 3 ;
corspy.bos:     return corpsetype;
Binary file corspy.cob matches
corssub.bos:    set-signal-mask SIG_MOVE;
corssub.bos:Killed(severity, corpsetype)
corssub.bos:            corpsetype = 1 ;
corssub.bos:            return(corpsetype);
corssub.bos:            corpsetype = 2 ;
corssub.bos:            return(corpsetype);
corssub.bos:            corpsetype = 3 ;
corssub.bos:            return(corpsetype);
corssub.bos:    corpsetype = 3 ;
corssub.bos:    return corpsetype;
corstorm.bos:   set-signal-mask SIG_WALK;       if (bMoving) { //Frame:4
corstorm.bos:   set-signal-mask SIG_MOVE;
corstorm.bos:SetStunned(State)
corstorm.bos:   set-signal-mask SIG_AIM;
corstorm.bos:Killed(severity, corpsetype)
corstorm.bos:           corpsetype = 1 ;
corstorm.bos:           return(corpsetype);
corstorm.bos:           corpsetype = 2 ;
corstorm.bos:           return(corpsetype);
corstorm.bos:           corpsetype = 3 ;
corstorm.bos:           return(corpsetype);
corstorm.bos:   corpsetype = 3 ;
corstorm.bos:   return corpsetype;
Binary file corstorm.cob matches
corsub.bos:     set-signal-mask SIG_MOVE;
corsub.bos:Killed(severity, corpsetype)
corsub.bos:             corpsetype = 1 ;
corsub.bos:             return(corpsetype);
corsub.bos:             corpsetype = 2 ;
corsub.bos:             return(corpsetype);
corsub.bos:             corpsetype = 3 ;
corsub.bos:             return(corpsetype);
corsub.bos:     corpsetype = 3 ;
corsub.bos:     return corpsetype;
corsumo.bos:    set-signal-mask SIG_WALK;
corsumo.bos:SetMaxReloadTime(Func_Var_1)
corsumo.bos:    set-signal-mask SIG_AIM;
corsumo.bos:Killed(severity, corpsetype)
corsumo.bos:            corpsetype = 1;
corsumo.bos:            return (corpsetype);
corsumo.bos:            corpsetype = 2;
corsumo.bos:            return (corpsetype);
corsumo.bos:            corpsetype = 3;
corsumo.bos:            return (corpsetype);
corsumo.bos:    corpsetype = 3;
corsumo.bos:    return (corpsetype);
Binary file corsumo.cob matches
corsumo.lua_old:        SetSignalMask(SIG_WALK)
corsumo.lua_old:    SetSignalMask(SIG_RESTORE)
corsumo.lua_old:                SetSignalMask(SIG_AIM)
corsy.bos:      set YARD_OPEN to 1;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 1;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set YARD_OPEN to 0;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 0;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set INBUILDSTANCE to 1;
corsy.bos:      set INBUILDSTANCE to 0;
corsy.bos:      set-signal-mask SIG_ACTIVATE;
corsy.bos:      set-signal-mask 0;
corsy.bos:Killed(severity, corpsetype)
corsy.bos:              corpsetype = 1 ;
corsy.bos:              return(corpsetype);
corsy.bos:              corpsetype = 2 ;
corsy.bos:              return(corpsetype);
corsy.bos:              corpsetype = 3 ;
corsy.bos:              return(corpsetype);
corsy.bos:      corpsetype = 3 ;
corsy.bos:      return corpsetype;
cortarg.bos:// OffsetToScriptCodeIndexArray        d6c
cortarg.bos:// OffsetToScriptNameOffsetArray       d98
cortarg.bos:// OffsetToPieceNameOffsetArray        dc4
cortarg.bos:// OffsetToScriptCode                  2c
cortarg.bos:// OffsetToNameArray                   dec
cortarg.bos:// OffsetToFirstName                   dec
cortarg.bos:/*   1a1:*/ set-signal-mask 2;
cortarg.bos:/*   1a6:*/ set ACTIVATION to 0;
cortarg.bos:/*   1ae:*/ set ACTIVATION to 1;
cortarg.bos:Killed(severity, corpsetype)
cortarg.bos:            corpsetype = 1 ;
cortarg.bos:            return(corpsetype);
cortarg.bos:            corpsetype = 2 ;
cortarg.bos:            return(corpsetype);
cortarg.bos:            corpsetype = 3 ;
cortarg.bos:            return(corpsetype);
cortarg.bos:    corpsetype = 3 ;
cortarg.bos:    return corpsetype;
cortermite.bos: set-signal-mask SIG_MOVE;
cortermite.bos: set-signal-mask SIG_MOVE;
cortermite.bos:SetMaxReloadTime(Func_Var_1)
cortermite.bos:SetStunned(State)
cortermite.bos: set-signal-mask SIG_AIM;
cortermite.bos:Killed(severity, corpsetype)
cortermite.bos:         corpsetype = 1 ;
cortermite.bos:         return(corpsetype);
cortermite.bos:         corpsetype = 2 ;
cortermite.bos:         return(corpsetype);
cortermite.bos:         corpsetype = 3 ;
cortermite.bos:         return(corpsetype);
cortermite.bos: corpsetype = 3 ;
cortermite.bos: return corpsetype;
Binary file cortermite.cob matches
corthovr.bos:           // Set values for tilt
corthovr.bos:   set-signal-mask SIG_MOVE;
corthovr.bos:setSFXoccupy(Func_Var_1)
corthovr.bos:   set-signal-mask 4;
corthovr.bos:BoomReset()
corthovr.bos:           set BUSY to 1;
corthovr.bos:           call-script BoomReset();
corthovr.bos:           set BUSY to 0;
corthovr.bos:           set BUSY to 1;
corthovr.bos:           call-script BoomReset();
corthovr.bos:           set BUSY to 0;
corthovr.bos:Killed(severity, corpsetype)
corthovr.bos:           corpsetype = 1 ;
corthovr.bos:           return(corpsetype);
corthovr.bos:           corpsetype = 2 ;
corthovr.bos:           return(corpsetype);
corthovr.bos:           corpsetype = 3 ;
corthovr.bos:           return(corpsetype);
corthovr.bos:   corpsetype = 3 ;
corthovr.bos:   return corpsetype;
Binary file corthovr.cob matches
corthud.bos:    set-signal-mask SIG_WALK;
corthud.bos:SetStunned(State)
corthud.bos:    set-signal-mask SIG_AIM;
corthud.bos:Killed(severity, corpsetype)
corthud.bos:            corpsetype = 1 ;
corthud.bos:            return(corpsetype);
corthud.bos:            corpsetype = 2 ;
corthud.bos:            return(corpsetype);
corthud.bos:            corpsetype = 3 ;
corthud.bos:            return(corpsetype);
corthud.bos:    corpsetype = 3 ;
corthud.bos:    return corpsetype;
Binary file corthud.cob matches
cortide.bos:Killed(severity, corpsetype)
cortide.bos:            corpsetype = 1 ;
cortide.bos:            return(corpsetype);
cortide.bos:            corpsetype = 2 ;
cortide.bos:            return(corpsetype);
cortide.bos:            corpsetype = 3 ;
cortide.bos:            return(corpsetype);
cortide.bos:    corpsetype = 3 ;
cortide.bos:    return corpsetype;
cortitan.bos:Killed(severity, corpsetype)
cortitan.bos:           corpsetype = 1 ;
cortitan.bos:           return(corpsetype);
cortitan.bos:           corpsetype = 2 ;
cortitan.bos:           return(corpsetype);
cortitan.bos:           corpsetype = 3 ;
cortitan.bos:           return(corpsetype);
cortitan.bos:   corpsetype = 3 ;
cortitan.bos:   return corpsetype;
cortl.bos:      set-signal-mask SIG_AIM;
cortl.bos:Killed(severity, corpsetype)
cortl.bos:              corpsetype = 1 ;
cortl.bos:              return(corpsetype);
cortl.bos:              corpsetype = 2 ;
cortl.bos:              return(corpsetype);
cortl.bos:              corpsetype = 3 ;
cortl.bos:              return(corpsetype);
cortl.bos:      corpsetype = 3 ;
cortl.bos:      return corpsetype;
cortoast.bos:   set ARMORED to 0;
cortoast.bos:   set ARMORED to 1;
cortoast.bos:   set-signal-mask 0;
cortoast.bos:SetStunned(State)
cortoast.bos:   set-signal-mask SIG_AIM;
cortoast.bos:   set-signal-mask 2;
cortoast.bos:/*SetMaxReloadTime(Func_Var_1)
cortoast.bos:Killed(severity, corpsetype)
cortoast.bos:           corpsetype = 1 ;
cortoast.bos:           return(corpsetype);
cortoast.bos:           corpsetype = 2 ;
cortoast.bos:           return(corpsetype);
cortoast.bos:           corpsetype = 3 ;
cortoast.bos:           return(corpsetype);
cortoast.bos:   corpsetype = 3 ;
cortoast.bos:   return corpsetype;
Binary file cortoast.cob matches
cortrem.bos:SetStunned(State)
cortrem.bos:    set-signal-mask SIG_AIM;
cortrem.bos:Killed(severity, corpsetype)
cortrem.bos:            corpsetype = 1 ;
cortrem.bos:            return(corpsetype);
cortrem.bos:            corpsetype = 2 ;
cortrem.bos:            return(corpsetype);
cortrem.bos:            corpsetype = 3 ;
cortrem.bos:            return(corpsetype);
cortrem.bos:    corpsetype = 3 ;
cortrem.bos:    return corpsetype;
Binary file cortrem.cob matches
cortron.bos:// OffsetToScriptCodeIndexArray        c08
cortron.bos:// OffsetToScriptNameOffsetArray       c4c
cortron.bos:// OffsetToPieceNameOffsetArray        c90
cortron.bos:// OffsetToScriptCode                  2c
cortron.bos:// OffsetToNameArray                   ca4
cortron.bos:// OffsetToFirstName                   ca4
cortron.bos:SetMaxReloadTime(Func_Var_1)
cortron.bos:/*   217:*/ set-signal-mask 0;
cortron.bos:/*   22c:*/ set-signal-mask SIG_AIM;
cortron.bos:Killed(severity, corpsetype)
cortron.bos:            corpsetype = 1 ;
cortron.bos:            return(corpsetype);
cortron.bos:            corpsetype = 2 ;
cortron.bos:            return(corpsetype);
cortron.bos:            corpsetype = 3 ;
cortron.bos:            return(corpsetype);
cortron.bos:    corpsetype = 3 ;
cortron.bos:    return corpsetype;
Binary file cortron.cob matches
cortship.bos:SetDirection(heading)
cortship.bos:   set-signal-mask SIG_MOVE;
cortship.bos:   set-signal-mask 4;
cortship.bos:BoomReset()
cortship.bos:           set BUSY to 1;
cortship.bos:           call-script BoomReset();
cortship.bos:           set BUSY to 0;
cortship.bos:           set BUSY to 1;
cortship.bos:           call-script BoomReset();
cortship.bos:           set BUSY to 0;
cortship.bos:Killed(severity, corpsetype)
cortship.bos:           corpsetype = 1 ;
cortship.bos:           return(corpsetype);
cortship.bos:           corpsetype = 2 ;
cortship.bos:           return(corpsetype);
cortship.bos:           corpsetype = 3 ;
cortship.bos:           return(corpsetype);
cortship.bos:   corpsetype = 3 ;
cortship.bos:   return corpsetype;
Binary file cortship.cob matches
coruwadves.bos:// OffsetToScriptCodeIndexArray        5b0
coruwadves.bos:// OffsetToScriptNameOffsetArray       5c0
coruwadves.bos:// OffsetToPieceNameOffsetArray        5d0
coruwadves.bos:// OffsetToScriptCode                  2c
coruwadves.bos:// OffsetToNameArray                   5e4
coruwadves.bos:// OffsetToFirstName                   5e4
coruwadves.bos:Killed(severity, corpsetype)
coruwadves.bos:         corpsetype = 1 ;
coruwadves.bos:         return(corpsetype);
coruwadves.bos:         corpsetype = 2 ;
coruwadves.bos:         return(corpsetype);
coruwadves.bos:         corpsetype = 3 ;
coruwadves.bos:         return(corpsetype);
coruwadves.bos: corpsetype = 3 ;
coruwadves.bos: return corpsetype;
coruwadvms.bos:// OffsetToScriptCodeIndexArray        420
coruwadvms.bos:// OffsetToScriptNameOffsetArray       430
coruwadvms.bos:// OffsetToPieceNameOffsetArray        440
coruwadvms.bos:// OffsetToScriptCode                  2c
coruwadvms.bos:// OffsetToNameArray                   448
coruwadvms.bos:// OffsetToFirstName                   448
coruwadvms.bos:Killed(severity, corpsetype)
coruwadvms.bos:         corpsetype = 1 ;
coruwadvms.bos:         return(corpsetype);
coruwadvms.bos:         corpsetype = 2 ;
coruwadvms.bos:         return(corpsetype);
coruwadvms.bos:         corpsetype = 3 ;
coruwadvms.bos:         return(corpsetype);
coruwadvms.bos: corpsetype = 3 ;
coruwadvms.bos: return corpsetype;
coruwes.bos:// OffsetToScriptCodeIndexArray        2f4
coruwes.bos:// OffsetToScriptNameOffsetArray       304
coruwes.bos:// OffsetToPieceNameOffsetArray        314
coruwes.bos:// OffsetToScriptCode                  2c
coruwes.bos:// OffsetToNameArray                   31c
coruwes.bos:// OffsetToFirstName                   31c
coruwes.bos:Killed(severity, corpsetype)
coruwes.bos:            corpsetype = 1 ;
coruwes.bos:            return(corpsetype);
coruwes.bos:            corpsetype = 2 ;
coruwes.bos:            return(corpsetype);
coruwes.bos:            corpsetype = 3 ;
coruwes.bos:            return(corpsetype);
coruwes.bos:    corpsetype = 3 ;
coruwes.bos:    return corpsetype;
coruwfus.bos:// OffsetToScriptCodeIndexArray        1f0
coruwfus.bos:// OffsetToScriptNameOffsetArray       200
coruwfus.bos:// OffsetToPieceNameOffsetArray        210
coruwfus.bos:// OffsetToScriptCode                  2c
coruwfus.bos:// OffsetToNameArray                   218
coruwfus.bos:// OffsetToFirstName                   218
coruwfus.bos:Killed(severity, corpsetype)
coruwfus.bos:           corpsetype = 1 ;
coruwfus.bos:           return(corpsetype);
coruwfus.bos:           corpsetype = 2 ;
coruwfus.bos:           return(corpsetype);
coruwfus.bos:           corpsetype = 3 ;
coruwfus.bos:           return(corpsetype);
coruwfus.bos:   corpsetype = 3 ;
coruwfus.bos:   return corpsetype;
coruwmex.bos:   set-signal-mask SIG_ACTIVATE;
coruwmex.bos:SetSpeed(Func_Var_1)
coruwmex.bos:Killed(severity, corpsetype)
coruwmex.bos:           corpsetype = 1 ;
coruwmex.bos:           return(corpsetype);
coruwmex.bos:           corpsetype = 2 ;
coruwmex.bos:           return(corpsetype);
coruwmex.bos:           corpsetype = 3 ;
coruwmex.bos:           return(corpsetype);
coruwmex.bos:   corpsetype = 3 ;
coruwmex.bos:   return corpsetype;
Binary file coruwmex.cob matches
coruwmme.bos:   set ARMORED to 0;
coruwmme.bos:   set ARMORED to 1;
coruwmme.bos:   set ARMORED to 1;
coruwmme.bos:   set-signal-mask SIG_ACTIVATE;
coruwmme.bos:SetSpeed(Func_Var_1)
coruwmme.bos:Killed(severity, corpsetype)
coruwmme.bos:           corpsetype = 1 ;
coruwmme.bos:           return(corpsetype);
coruwmme.bos:           corpsetype = 2 ;
coruwmme.bos:           return(corpsetype);
coruwmme.bos:           corpsetype = 3 ;
coruwmme.bos:           return(corpsetype);
coruwmme.bos:   corpsetype = 3 ;
coruwmme.bos:   return corpsetype;
Binary file coruwmme.cob matches
coruwmmm.bos:Killed(severity, corpsetype)
coruwmmm.bos:           corpsetype = 1;
coruwmmm.bos:           return (corpsetype);
coruwmmm.bos:           corpsetype = 2;
coruwmmm.bos:           return (corpsetype);
coruwmmm.bos:           corpsetype = 3;
coruwmmm.bos:           return (corpsetype);
coruwmmm.bos:   corpsetype = 3;
coruwmmm.bos:   return (corpsetype);
coruwms.bos:// OffsetToScriptCodeIndexArray        2ec
coruwms.bos:// OffsetToScriptNameOffsetArray       2fc
coruwms.bos:// OffsetToPieceNameOffsetArray        30c
coruwms.bos:// OffsetToScriptCode                  2c
coruwms.bos:// OffsetToNameArray                   310
coruwms.bos:// OffsetToFirstName                   310
coruwms.bos:Killed(severity, corpsetype)
coruwms.bos:            corpsetype = 1 ;
coruwms.bos:            return(corpsetype);
coruwms.bos:            corpsetype = 2 ;
coruwms.bos:            return(corpsetype);
coruwms.bos:            corpsetype = 3 ;
coruwms.bos:            return(corpsetype);
coruwms.bos:    corpsetype = 3 ;
coruwms.bos:    return corpsetype;
corvalk.bos:    set-signal-mask 8;
corvalk.bos:    set-signal-mask 8;
corvalk.bos:    set-signal-mask 8;
corvalk.bos:Killed(severity, corpsetype)
corvalk.bos:            corpsetype = 1 ;
corvalk.bos:            return(corpsetype);
corvalk.bos:            corpsetype = 2 ;
corvalk.bos:            return(corpsetype);
corvalk.bos:            corpsetype = 3 ;
corvalk.bos:            return(corpsetype);
corvalk.bos:    corpsetype = 3 ;
corvalk.bos:    return corpsetype;
corvamp.bos:Killed(severity, corpsetype)
corvamp.bos:            corpsetype = 1 ;
corvamp.bos:            return(corpsetype);
corvamp.bos:            corpsetype = 2 ;
corvamp.bos:            return(corpsetype);
corvamp.bos:            corpsetype = 3 ;
corvamp.bos:            return(corpsetype);
corvamp.bos:    corpsetype = 3 ;
corvamp.bos:    return corpsetype;
corveng.bos:Killed(severity, corpsetype)
corveng.bos:            corpsetype = 1 ;
corveng.bos:            return(corpsetype);
corveng.bos:            corpsetype = 2 ;
corveng.bos:            return(corpsetype);
corveng.bos:            corpsetype = 3 ;
corveng.bos:            return(corpsetype);
corveng.bos:    corpsetype = 3 ;
corveng.bos:    return corpsetype;
corvipe.lua:    UnitScript.SetSignalMask(SIG_OPENCLOSE + SIG_AIM);
corvipe.lua:    UnitScript.SetUnitValue(COB.ARMORED, 1);
corvipe.lua:    UnitScript.SetSignalMask(SIG_OPENCLOSE);
corvipe.lua:    UnitScript.SetUnitValue(COB.ARMORED, 0);
corvipe.lua:    UnitScript.SetSignalMask(SIG_AIM);
corvipe.lua:    local corpsetype;
corvipe.lua:            if (not is_open) then corpsetype = 1; end
corvipe.lua:            if (is_open) then corpsetype = 2; end
corvipe.lua:            return corpsetype;
corvipe.lua:            if (not is_open) then corpsetype = 2; end
corvipe.lua:            if (is_open) then corpsetype = 3; end
corvipe.lua:            return corpsetype;
corvipe.lua:            if (not is_open) then corpsetype = 3; end
corvipe.lua:            if (is_open) then corpsetype = 3; end
corvipe.lua:            return corpsetype;
corvipe.lua:    corpsetype = 3;
corvipe.lua:    return corpsetype;
corvoyr.bos:    set-signal-mask SIG_WALK;
corvoyr.bos:    set-signal-mask SIG_ACTIVATE;
corvoyr.bos:    set-signal-mask SIG_ACTIVATE;
corvoyr.bos:SetStunned(State)
corvoyr.bos:Killed(severity, corpsetype)
corvoyr.bos:            corpsetype = 1 ;
corvoyr.bos:            return(corpsetype);
corvoyr.bos:            corpsetype = 2 ;
corvoyr.bos:            return(corpsetype);
corvoyr.bos:            corpsetype = 3 ;
corvoyr.bos:            return(corpsetype);
corvoyr.bos:    corpsetype = 3 ;
corvoyr.bos:    return corpsetype;
Binary file corvoyr.cob matches
corvp.bos:      set YARD_OPEN to 1;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 1;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set YARD_OPEN to 0;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 0;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set INBUILDSTANCE to 1;
corvp.bos:      set INBUILDSTANCE to 0;
corvp.bos:      set-signal-mask SIG_ACTIVATE;
corvp.bos:      set-signal-mask 0;
corvp.bos:Killed(severity, corpsetype)
corvp.bos:              corpsetype = 1 ;
corvp.bos:              return(corpsetype);
corvp.bos:              corpsetype = 2 ;
corvp.bos:              return(corpsetype);
corvp.bos:              corpsetype = 3 ;
corvp.bos:              return(corpsetype);
corvp.bos:      corpsetype = 3 ;
corvp.bos:      return corpsetype;
corvp.lua:      UnitScript.SetSignalMask(SIG_OPENCLOSE);
corvp.lua:      UnitScript.SetUnitValue(COB.INBUILDSTANCE, 1);
corvp.lua:      UnitScript.SetSignalMask(SIG_OPENCLOSE);
corvp.lua:      UnitScript.SetUnitValue(COB.INBUILDSTANCE, 0);
corvp.lua:      UnitScript.SetSignalMask(SIG_ACTIVATE);
corvp.lua:      local corpsetype;
corvp.lua:              corpsetype = 1;
corvp.lua:              return corpsetype;
corvp.lua:              corpsetype = 2;
corvp.lua:              return corpsetype;
corvp.lua:              corpsetype = 3;
corvp.lua:              return corpsetype;
corvp.lua:      corpsetype = 3;
corvp.lua:      return corpsetype;
corvrad.bos:    set-signal-mask SIG_ACTIVATE;
corvrad.bos:    set-signal-mask SIG_ACTIVATE;
corvrad.bos:SetStunned(State)
corvrad.bos:Killed(severity, corpsetype)
corvrad.bos:            corpsetype = 1 ;
corvrad.bos:            return(corpsetype);
corvrad.bos:            corpsetype = 2 ;
corvrad.bos:            return(corpsetype);
corvrad.bos:            corpsetype = 3 ;
corvrad.bos:            return(corpsetype);
corvrad.bos:    corpsetype = 3 ;
corvrad.bos:    return corpsetype;
Binary file corvrad.cob matches
corvroc.bos:SetMaxReloadTime(Func_Var_1)
corvroc.bos:    set-signal-mask 0;
corvroc.bos:SetStunned(State)
corvroc.bos:    set-signal-mask SIG_RESTORE;
corvroc.bos:    set-signal-mask SIG_AIM;
corvroc.bos:Killed(severity, corpsetype)
corvroc.bos:            corpsetype = 1 ;
corvroc.bos:            return(corpsetype);
corvroc.bos:            corpsetype = 2 ;
corvroc.bos:            return(corpsetype);
corvroc.bos:            corpsetype = 3 ;
corvroc.bos:            return(corpsetype);
corvroc.bos:    corpsetype = 3 ;
corvroc.bos:    return corpsetype;
Binary file corvroc.cob matches
corwin.bos:SetSpeed(windSpd) //called every 450 frames
corwin.bos:                     set ACTIVATION to 100;
corwin.bos:SetDirection(windDir) //called every 450 frames
corwin.bos:SetStunned(State)
corwin.bos:             set ACTIVATION to 0;
corwin.bos:             set ACTIVATION to 100;
corwin.bos:Killed(severity, corpsetype)
corwin.bos:             corpsetype = 1 ;
corwin.bos:             return(corpsetype);
corwin.bos:             corpsetype = 2 ;
corwin.bos:             return(corpsetype);
corwin.bos:             corpsetype = 3 ;
corwin.bos:             return(corpsetype);
corwin.bos:     corpsetype = 3 ;
corwin.bos:     return corpsetype;
Binary file corwin.cob matches
corwolv.bos:SetMaxReloadTime(Func_Var_1)
corwolv.bos:SetStunned(State)
corwolv.bos:    set-signal-mask SIG_AIM;
corwolv.bos:Killed(severity, corpsetype)
corwolv.bos:            corpsetype = 1 ;
corwolv.bos:            return(corpsetype);
corwolv.bos:            corpsetype = 2 ;
corwolv.bos:            return(corpsetype);
corwolv.bos:            corpsetype = 3 ;
corwolv.bos:            return(corpsetype);
corwolv.bos:    corpsetype = 3 ;
corwolv.bos:    return corpsetype;
Binary file corwolv.cob matches
exptype.h:** EXPtype.h -- Explosion Type information and GET/SET constants for s
cripts
exptype.h:#define ACTIVATION           1  // set or get
exptype.h:#define STANDINGMOVEORDERS   2  // set or get
exptype.h:#define STANDINGFIREORDERS   3  // set or get
exptype.h:#define INBUILDSTANCE        5  // set or get
exptype.h:#define BUSY                 6  // set or get (used by misc. special c
ase missions like transport ships)
exptype.h:#define YARD_OPEN           18  // set or get (change which plots we o
ccupy when building opens and closes)
exptype.h:#define BUGGER_OFF          19  // set or get (ask other units to clea
r the area)
exptype.h:#define ARMORED             20  // set or get
exptype.h:#define UPRIGHT                   79 // set or get
exptype.h:#define LOS_RADIUS                85 // set or get
exptype.h:#define AIR_LOS_RADIUS            86 // set or get
exptype.h:#define RADAR_RADIUS              87 // set or get
exptype.h:#define JAMMER_RADIUS             88 // set or get
exptype.h:#define SONAR_RADIUS              89 // set or get
exptype.h:#define SONAR_JAM_RADIUS          90 // set or get
exptype.h:#define SEISMIC_RADIUS            91 // set or get
exptype.h:#define CURRENT_FUEL              93 // set or get
exptype.h:#define SHIELD_POWER              95 // set or get
exptype.h:#define STEALTH                   96 // set or get
exptype.h:#define CRASHING                  97 // set or get, returns whether ai
rcraft isCrashing state
exptype.h:#define CHANGE_TARGET             98 // set, the value it's set to det
ermines the affected weapon
exptype.h:#define CEG_DAMAGE                99 // set
exptype.h:#define ALPHA_THRESHOLD          103 // set or get
exptype.h:#define SET_WEAPON_UNIT_TARGET   106 // get (fake set)
exptype.h:#define SET_WEAPON_GROUND_TARGET 107 // get (fake set)
exptype.h:#define SONAR_STEALTH            108 // set or get
exptype.h:// Indices for SET, GET, and GET_UNIT_VALUE for LUA return values
exptype.h:#define FLANK_B_MODE          120 // set or get
exptype.h:#define FLANK_B_DIR           121 // set or get, set is through get fo
r multiple args
exptype.h:#define FLANK_B_MOBILITY_ADD  122 // set or get
exptype.h:#define FLANK_B_MAX_DAMAGE    123 // set or get
exptype.h:#define FLANK_B_MIN_DAMAGE    124 // set or get
exptype.h:#define WEAPON_RELOADSTATE    125 // get (with fake set)  get WEAPON_R
ELOADSTATE(weaponNum)           for GET
exptype.h:#define WEAPON_RELOADTIME     126 // get (with fake set)  get WEAPON_R
ELOADSTATE(-weaponNum,val)      for SET
exptype.h:#define WEAPON_ACCURACY               127 // get (with fake set)
exptype.h:#define WEAPON_SPRAY          128 // get (with fake set)
exptype.h:#define WEAPON_RANGE          129 // get (with fake set)
exptype.h:#define WEAPON_PROJECTILE_SPEED       130 // get (with fake set)
exptype.h:#define WEAPON_STOCKPILE_COUNT  139 // get (with fake set)
exptype.h:#define ENERGY_MAKE             140 // set or get (100*E production)
exptype.h:#define METAL_MAKE              141 // set or get (100*M production)
Binary file fgrep.exe matches
LICENSE:organization, or substantially all assets of one, or subdividing an
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 1;
meteor.bos:     set ARMORED to 0;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 0;
meteor.bos:Killed(severity, corpsetype)
fgrep: New folder: Is a directory
roost.bos:      set ARMORED to 0;
roost.bos:Killed(severity, corpsetype)
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
standard_commands_gpl.h:// Indices for set/get value
standard_commands_gpl.h:#define ACTIVATION              1       // set or get
standard_commands_gpl.h:#define STANDINGMOVEORDERS      2       // set or get
standard_commands_gpl.h:#define STANDINGFIREORDERS      3       // set or get
standard_commands_gpl.h:#define INBUILDSTANCE           5       // set or get
standard_commands_gpl.h:#define BUSY                    6       // set or get (u
sed by misc. special case missions like transport ships)
standard_commands_gpl.h:#define YARD_OPEN                       18      // set o
r get (change which plots we occupy when building opens and closes)
standard_commands_gpl.h:#define BUGGER_OFF              19      // set or get (a
sk other units to clear the area)
standard_commands_gpl.h:#define ARMORED                 20      // SET or GET.
Turns on the Armored state.
standard_commands_gpl.h:#define CURRENT_SPEED           29      // SET only, if
I'm reading the code right.  Gives us a new speed for the next frame ONLY.
standard_commands_gpl.h:#define VETERAN_LEVEL           32      // SET or GET.
Can make units super-accurate, or keep them inaccurate.
standard_commands_gpl.h:#define MAX_SPEED                       75      // SET o
nly.  Alters MaxVelocity for the given unit.
teleport.bos:Killed(severity, corpsetype)
unitDefsTurretSpeeds.h:/* unitDefsTurretSpeeds.h -- sets turret speed via unitDe
fs (through lua gadget Spring.CallCOBScript())
unitDefsTurretSpeeds.h:SetWeapon1TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon2TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon3TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon4TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon5TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon6TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon7TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon8TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon9TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon10TurretSpeed(var1,var2)
weapon1control.h:       start-script InitialSetup1();
weapon1control.h:       start-script Weapon1SetWtdAim(heading, pitch);
weapon1control.h:SetStunned(State)
weapon1control.h:- Weapon1Control moves the aim pieces depending on turretSpeeds
, sets pitch = 1 when pitch reached and head = 1 when head reached
weapon1control.h:- Weapon1Drawn allows unit to fire by setting wpnReady1 = 1
weapon1control.h:InitialSetup1()
weapon1control.h:Weapon1SetWtdAim(pitch, heading)
yard.h: set YARD_OPEN to TRUE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to TRUE;
yard.h: set BUGGER_OFF to FALSE;
yard.h: set YARD_OPEN to FALSE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to FALSE;
yard.h: set BUGGER_OFF to FALSE;

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i " SET " *
armada_sweeper.bos:              // Set values for tilt
armada_crocodile.bos:            // Set values for tilt
armada_constructionhovercraft.bos:              // Set values for tilt
armada_umbra.bos:             // Set values for tilt
armada_umbra.bos:             // Set Values for differential system
fgrep: armada_marauder_lus: Is a directory
armada_possum.bos:              // Set values for tilt
armada_serpent.bos:            // Set values for tilt
armada_seeker.bos:              // Set values for tilt
armada_bearer.bos:           // Set values for tilt
constants.h:#define ACTIVATION           1  // set or get
constants.h:#define STANDINGMOVEORDERS   2  // set or get
constants.h:#define STANDINGFIREORDERS   3  // set or get
constants.h:#define INBUILDSTANCE        5  // set or get
constants.h:#define BUSY                 6  // set or get (used by misc. special
 case missions like transport ships)
constants.h:#define YARD_OPEN           18  // set or get (change which plots we
 occupy when building opens and closes)
constants.h:#define BUGGER_OFF          19  // set or get (ask other units to cl
ear the area)
constants.h:#define ARMORED             20  // set or get
constants.h:#define UPRIGHT                   79 // set or get
constants.h:#define LOS_RADIUS                85 // set or get
constants.h:#define AIR_LOS_RADIUS            86 // set or get
constants.h:#define RADAR_RADIUS              87 // set or get
constants.h:#define JAMMER_RADIUS             88 // set or get
constants.h:#define SONAR_RADIUS              89 // set or get
constants.h:#define SONAR_JAM_RADIUS          90 // set or get
constants.h:#define SEISMIC_RADIUS            91 // set or get
constants.h:#define CURRENT_FUEL              93 // set or get
constants.h:#define SHIELD_POWER              95 // set or get
constants.h:#define STEALTH                   96 // set or get
constants.h:#define CRASHING                  97 // set or get, returns whether
aircraft isCrashing state
constants.h:#define CHANGE_TARGET             98 // set, the value it's set to d
etermines the affected weapon
constants.h:#define ALPHA_THRESHOLD          103 // set or get
constants.h:#define SONAR_STEALTH            108 // set or get
constants.h:#define FLANK_B_MODE                120 // set or get
constants.h:#define FLANK_B_DIR         121 // set or get, set is through get fo
r multiple args
constants.h:#define FLANK_B_MOBILITY_ADD        122 // set or get
constants.h:#define FLANK_B_MAX_DAMAGE  123 // set or get
constants.h:#define FLANK_B_MIN_DAMAGE  124 // set or get
constants.h:#define ENERGY_MAKE             140 // set or get (100*E production)

constants.h:#define METAL_MAKE              141 // set or get (100*M production)

corah.bos:              // Set values for tilt
corch.bos:              // Set values for tilt
corhal.bos:             // Set values for tilt
cormh.bos:              // Set values for tilt
corsh.bos:              // Set values for tilt
corsnap.bos:            // Set values for tilt
corthovr.bos:           // Set values for tilt
exptype.h:#define ACTIVATION           1  // set or get
exptype.h:#define STANDINGMOVEORDERS   2  // set or get
exptype.h:#define STANDINGFIREORDERS   3  // set or get
exptype.h:#define INBUILDSTANCE        5  // set or get
exptype.h:#define BUSY                 6  // set or get (used by misc. special c
ase missions like transport ships)
exptype.h:#define YARD_OPEN           18  // set or get (change which plots we o
ccupy when building opens and closes)
exptype.h:#define BUGGER_OFF          19  // set or get (ask other units to clea
r the area)
exptype.h:#define ARMORED             20  // set or get
exptype.h:#define UPRIGHT                   79 // set or get
exptype.h:#define LOS_RADIUS                85 // set or get
exptype.h:#define AIR_LOS_RADIUS            86 // set or get
exptype.h:#define RADAR_RADIUS              87 // set or get
exptype.h:#define JAMMER_RADIUS             88 // set or get
exptype.h:#define SONAR_RADIUS              89 // set or get
exptype.h:#define SONAR_JAM_RADIUS          90 // set or get
exptype.h:#define SEISMIC_RADIUS            91 // set or get
exptype.h:#define CURRENT_FUEL              93 // set or get
exptype.h:#define SHIELD_POWER              95 // set or get
exptype.h:#define STEALTH                   96 // set or get
exptype.h:#define CRASHING                  97 // set or get, returns whether ai
rcraft isCrashing state
exptype.h:#define CHANGE_TARGET             98 // set, the value it's set to det
ermines the affected weapon
exptype.h:#define ALPHA_THRESHOLD          103 // set or get
exptype.h:#define SONAR_STEALTH            108 // set or get
exptype.h:#define FLANK_B_MODE          120 // set or get
exptype.h:#define FLANK_B_DIR           121 // set or get, set is through get fo
r multiple args
exptype.h:#define FLANK_B_MOBILITY_ADD  122 // set or get
exptype.h:#define FLANK_B_MAX_DAMAGE    123 // set or get
exptype.h:#define FLANK_B_MIN_DAMAGE    124 // set or get
exptype.h:#define ENERGY_MAKE             140 // set or get (100*E production)
exptype.h:#define METAL_MAKE              141 // set or get (100*M production)
fgrep: New folder: Is a directory
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
standard_commands_gpl.h:#define ACTIVATION              1       // set or get
standard_commands_gpl.h:#define STANDINGMOVEORDERS      2       // set or get
standard_commands_gpl.h:#define STANDINGFIREORDERS      3       // set or get
standard_commands_gpl.h:#define INBUILDSTANCE           5       // set or get
standard_commands_gpl.h:#define BUSY                    6       // set or get (u
sed by misc. special case missions like transport ships)
standard_commands_gpl.h:#define YARD_OPEN                       18      // set o
r get (change which plots we occupy when building opens and closes)
standard_commands_gpl.h:#define BUGGER_OFF              19      // set or get (a
sk other units to clear the area)
standard_commands_gpl.h:#define ARMORED                 20      // SET or GET.
Turns on the Armored state.
standard_commands_gpl.h:#define CURRENT_SPEED           29      // SET only, if
I'm reading the code right.  Gives us a new speed for the next frame ONLY.
standard_commands_gpl.h:#define VETERAN_LEVEL           32      // SET or GET.
Can make units super-accurate, or keep them inaccurate.
standard_commands_gpl.h:#define MAX_SPEED                       75      // SET o
nly.  Alters MaxVelocity for the given unit.

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i "SET " *
armada_advancedaircraftplant.bos:     set YARD_OPEN to 1;
armada_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
armada_advancedaircraftplant.bos:             set YARD_OPEN to 1;
armada_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
armada_advancedaircraftplant.bos:     set YARD_OPEN to 0;
armada_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
armada_advancedaircraftplant.bos:             set YARD_OPEN to 0;
armada_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
armada_advancedaircraftplant.bos:     set INBUILDSTANCE to 1;
armada_advancedaircraftplant.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 1;
armada_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionbot.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionbot.bos:     set INBUILDSTANCE to 1;
armada_advancedconstructionsub.bos:   set INBUILDSTANCE to 0;
armada_advancedconstructionsub.bos:   set INBUILDSTANCE to 1;
armada_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 1;
armada_advancedsolarcollector.bos:  set ARMORED to 0;
armada_advancedsolarcollector.bos:  set ARMORED to 1;
armada_advancedfusionreactor.bos:    set ARMORED to 1;
armada_advancedfusionreactor.bos:    set ARMORED to 0;
armada_sweeper.bos:              // Set values for tilt
armada_advancedbotlab.bos:    set YARD_OPEN to 1;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 1;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set YARD_OPEN to 0;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 0;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 1;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 0;
armada_rattlesnake.bos:     set ARMORED to 0;
armada_rattlesnake.bos:     set ARMORED to 1;
armada_twilight.bos:    set ARMORED to 0;
armada_twilight.bos:    set ARMORED to 1;
armada_twilight.bos:    set ACTIVATION to 0;
armada_twilight.bos:    set ACTIVATION to 100;
armada_amphibiouscomplex.bos:   set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 1;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 0;
armada_crocodile.bos:            // Set values for tilt
armada_pulsar.bos:    set ARMORED to 0;
armada_pulsar.bos:    set ARMORED to 1;
armada_aircraftplant.bos:      set YARD_OPEN to 1;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 1;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set YARD_OPEN to 0;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 0;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set INBUILDSTANCE to 1;
armada_aircraftplant.bos:      set INBUILDSTANCE to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 100;
armada_advancedshipyard.bos:     set YARD_OPEN to 1;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 1;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set YARD_OPEN to 0;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 0;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 1;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 0;
armada_advancedvehicleplant.bos:     set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 1;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 0;
armada_beaver.bos:  set INBUILDSTANCE to 0;
armada_beaver.bos:  set INBUILDSTANCE to 1;
armada_constructionaircraft.bos:      set INBUILDSTANCE to 1;
armada_constructionaircraft.bos:      set INBUILDSTANCE to 0;
armada_constructionhovercraft.bos:              // Set values for tilt
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 0;
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 1;
armada_constructionbot.bos:      set INBUILDSTANCE to 0;
armada_constructionbot.bos:      set INBUILDSTANCE to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 1;
armada_commander.bos:     set INBUILDSTANCE to 1;
armada_commander.bos:     set INBUILDSTANCE to 0;
armada_commanderboss.bos: set INBUILDSTANCE to 1;
armada_commanderboss.bos: set INBUILDSTANCE to 0;
armada_consul.bos:  set INBUILDSTANCE to 1;
armada_consul.bos:  set INBUILDSTANCE to 0;
armada_constructionship.bos:      set INBUILDSTANCE to 0;
armada_constructionship.bos:      set INBUILDSTANCE to 1;
armada_constructionseaplane.bos:     set INBUILDSTANCE to 1;
armada_constructionseaplane.bos:     set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 1;
armada_decoycommander.lua:   -- reset parts
armada_decoyfusionreactor.bos:      set ARMORED to 1;
armada_decoyfusionreactor.bos:      set ARMORED to 0;
armada_epoch.bos:   set ARMORED to 1;
armada_butler.bos:    set INBUILDSTANCE to 0;
armada_butler.bos:    set INBUILDSTANCE to 1;
armada_ferret.bos:  set ARMORED to 0;
armada_ferret.bos:  set ARMORED to 1;
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 1;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 0;
armada_fusionreactor.bos:     set ARMORED to 1;
armada_fusionreactor.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 1;
armada_hovercraftplatform.bos:      set YARD_OPEN to 1;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 1;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set YARD_OPEN to 0;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 0;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 1;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 0;
armada_umbra.bos:             // Set values for tilt
armada_umbra.bos:             // Set Values for differential system
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 100;
armada_botlab.bos:     set YARD_OPEN to 1;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 1;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set YARD_OPEN to 0;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 0;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set INBUILDSTANCE to 1;
armada_botlab.bos:     set INBUILDSTANCE to 0;
fgrep: armada_marauder_lus: Is a directory
armada_mercury.bos: set DELAY_UNIT_VAR to 0;
armada_ambassador.bos:    set ARMORED to 1;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:    set ARMORED to 0;
armada_possum.bos:              // Set values for tilt
armada_voyager.bos:     set INBUILDSTANCE to 1;
armada_voyager.bos:     set INBUILDSTANCE to 0;
armada_groundhog.bos:     set INBUILDSTANCE to 1;
armada_groundhog.bos:     set INBUILDSTANCE to 0;
armada_advancedenergyconverter.bos:    set ARMORED to 0; //Not needed as MM in BAR have no damage modif
yer tag set
armada_advancedenergyconverter.bos:    set ARMORED to 1;
armada_constructionturret.bos:  set INBUILDSTANCE to 1;
armada_constructionturret.bos:  set INBUILDSTANCE to 0;
armada_constructionturretplat.bos:      set INBUILDSTANCE to 1;
armada_constructionturretplat.bos:      set INBUILDSTANCE to 0;
armada_pitbull.bos:      set ARMORED to 0;
armada_pitbull.bos:      set ARMORED to 1;
armada_seaplaneplatform.bos:    set ARMORED to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
armada_seaplaneplatform.bos:    set YARD_OPEN to 1;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 1;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set YARD_OPEN to 0;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 0;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 1;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
armada_grimreaper.bos:    set INBUILDSTANCE to 1;
armada_grimreaper.bos:    set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 1;
armrectrt4.bos: set INBUILDSTANCE to 0;
armrectrt4.bos: set INBUILDSTANCE to 1;
armada_serpent.bos:            // Set values for tilt
armada_seeker.bos:              // Set values for tilt
armada_experimentalgantry.bos:   set YARD_OPEN to 1;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 1;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set YARD_OPEN to 0;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 0;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 1;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 0;
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 100;
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 1;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 0;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:   set ARMORED to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:   set ARMORED to 1;
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 100;
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:     set INBUILDSTANCE to 1;
armada_ghost.bos:     set INBUILDSTANCE to 0;
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:             set ACTIVATION to 100;
armada_shipyard.bos:      set YARD_OPEN to 1;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 1;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set YARD_OPEN to 0;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 0;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set INBUILDSTANCE to 1;
armada_shipyard.bos:      set INBUILDSTANCE to 0;
armada_pinpointer.bos:    set ARMORED to 1;
armada_pinpointer.bos:    set ACTIVATION to 0;
armada_pinpointer.bos:    set ACTIVATION to 1;
armada_bearer.bos:           // Set values for tilt
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           set BUSY to 0;
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           set BUSY to 0;
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           set BUSY to 0;
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           set BUSY to 0;
armada_vehicleplant.bos:      set ARMORED to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
armada_vehicleplant.bos:      set YARD_OPEN to 1;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 1;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set YARD_OPEN to 0;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 0;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set INBUILDSTANCE to 1;
armada_vehicleplant.bos:      set INBUILDSTANCE to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
armada_windturbine.bos:                     set ACTIVATION to 100;
armada_windturbine.bos:             set ACTIVATION to 0;
armada_windturbine.bos:             set ACTIVATION to 100;
constants.h:** EXPtype.h -- Explosion Type information and GET/SET constants for
 scripts
constants.h:#define ACTIVATION           1  // set or get
constants.h:#define STANDINGMOVEORDERS   2  // set or get
constants.h:#define STANDINGFIREORDERS   3  // set or get
constants.h:#define INBUILDSTANCE        5  // set or get
constants.h:#define BUSY                 6  // set or get (used by misc. special
 case missions like transport ships)
constants.h:#define YARD_OPEN           18  // set or get (change which plots we
 occupy when building opens and closes)
constants.h:#define BUGGER_OFF          19  // set or get (ask other units to cl
ear the area)
constants.h:#define ARMORED             20  // set or get
constants.h:#define UPRIGHT                   79 // set or get
constants.h:#define LOS_RADIUS                85 // set or get
constants.h:#define AIR_LOS_RADIUS            86 // set or get
constants.h:#define RADAR_RADIUS              87 // set or get
constants.h:#define JAMMER_RADIUS             88 // set or get
constants.h:#define SONAR_RADIUS              89 // set or get
constants.h:#define SONAR_JAM_RADIUS          90 // set or get
constants.h:#define SEISMIC_RADIUS            91 // set or get
constants.h:#define CURRENT_FUEL              93 // set or get
constants.h:#define SHIELD_POWER              95 // set or get
constants.h:#define STEALTH                   96 // set or get
constants.h:#define CRASHING                  97 // set or get, returns whether
aircraft isCrashing state
constants.h:#define CHANGE_TARGET             98 // set, the value it's set to d
etermines the affected weapon
constants.h:#define ALPHA_THRESHOLD          103 // set or get
constants.h:#define SONAR_STEALTH            108 // set or get
constants.h:#define FLANK_B_MODE                120 // set or get
constants.h:#define FLANK_B_DIR         121 // set or get, set is through get fo
r multiple args
constants.h:#define FLANK_B_MOBILITY_ADD        122 // set or get
constants.h:#define FLANK_B_MAX_DAMAGE  123 // set or get
constants.h:#define FLANK_B_MIN_DAMAGE  124 // set or get
constants.h:#define ENERGY_MAKE             140 // set or get (100*E production)

constants.h:#define METAL_MAKE              141 // set or get (100*M production)

coraap.bos:     set YARD_OPEN to 1;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 1;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set YARD_OPEN to 0;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 0;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set INBUILDSTANCE to 1;
coraap.bos:     set INBUILDSTANCE to 0;
coraca.bos:     set INBUILDSTANCE to 1;
coraca.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 1;
coracsub.bos:   set INBUILDSTANCE to 0;
coracsub.bos:   set INBUILDSTANCE to 1;
coracv.bos:     set INBUILDSTANCE to 0;
coracv.bos:     set INBUILDSTANCE to 1;
coradvsol.bos:/*    57:*/       set ARMORED to 0;
coradvsol.bos:/*    5f:*/       set ARMORED to 1;
coradvsol.bos:/*    7d:*/       set ACTIVATION to 0;
coradvsol.bos:/*    85:*/       set ACTIVATION to 100;
corafus.bos:/*    b0:*/ set ARMORED to 1;
corafus.bos:/*    ba:*/ set ARMORED to 0;
corah.bos:              // Set values for tilt
coramsub.bos:/*    87:*/        set YARD_OPEN to 1;
coramsub.bos:/*    92:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    9a:*/                set YARD_OPEN to 1;
coramsub.bos:/*    a1:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    a9:*/        set YARD_OPEN to 0;
coramsub.bos:/*    b3:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    bb:*/                set YARD_OPEN to 0;
coramsub.bos:/*    c2:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    d0:*/        set INBUILDSTANCE to 1;
coramsub.bos:/*    d8:*/        set INBUILDSTANCE to 0;
corap.bos:/*   17e:*/   set YARD_OPEN to 1;
corap.bos:/*   189:*/           set BUGGER_OFF to 1;
corap.bos:/*   191:*/           set YARD_OPEN to 1;
corap.bos:/*   198:*/   set BUGGER_OFF to 0;
corap.bos:/*   1a0:*/   set YARD_OPEN to 0;
corap.bos:/*   1aa:*/           set BUGGER_OFF to 1;
corap.bos:/*   1b2:*/           set YARD_OPEN to 0;
corap.bos:/*   1b9:*/   set BUGGER_OFF to 0;
corap.bos:/*   1d5:*/   set INBUILDSTANCE to 1;
corap.bos:/*   1dd:*/   set INBUILDSTANCE to 0;
corasy.bos:     set YARD_OPEN to 1;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 1;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set YARD_OPEN to 0;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 0;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set INBUILDSTANCE to 1;
corasy.bos:     set INBUILDSTANCE to 0;
corasye.bos:    set YARD_OPEN to 1;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 1;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set YARD_OPEN to 0;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 0;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set INBUILDSTANCE to 1;
corasye.bos:    set INBUILDSTANCE to 0;
coravp.bos:     set YARD_OPEN to 1;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 1;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set YARD_OPEN to 0;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 0;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set INBUILDSTANCE to 1;
coravp.bos:     set INBUILDSTANCE to 0;
corbhmth.bos:   set ACTIVATION to 100;
corbhmth.bos:   set ACTIVATION to 0;
corblackhy.bos: set ARMORED to 1;
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 0 - 1500 + get UNK
NOWN_UNIT_VALUE(82);
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 1500 + get UNKNOWN
_UNIT_VALUE(82);
corca.bos:      set INBUILDSTANCE to 1;
corca.bos:      set INBUILDSTANCE to 0;
corch.bos:      set INBUILDSTANCE to 0;
corch.bos:              // Set values for tilt
corch.bos:      set INBUILDSTANCE to 1;
corck.bos:      set INBUILDSTANCE to 0;
corck.bos:      set INBUILDSTANCE to 1;
cortex_commander.bos:     set INBUILDSTANCE to 1;
cortex_commander.bos:     set INBUILDSTANCE to 0;
cortex_commanderboss.bos: set INBUILDSTANCE to 1;
cortex_commanderboss.bos: set INBUILDSTANCE to 0;
corcs.bos:      set INBUILDSTANCE to 1;
corcs.bos:      set INBUILDSTANCE to 0;
corcsa.bos:     set INBUILDSTANCE to 1;
corcsa.bos:     set INBUILDSTANCE to 0;
corcv.bos:      set INBUILDSTANCE to 0;
corcv.bos:      set INBUILDSTANCE to 1;
cordoom.bos:    set ARMORED to 0;
cordoom.bos:    set ARMORED to 1;
corerad.bos:            set CHANGE_TARGET to 1;
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 100;
corfast.bos:    set INBUILDSTANCE to 1;
corfast.bos:    set INBUILDSTANCE to 0;
corfhp.bos:/*   162:*/  set YARD_OPEN to 1;
corfhp.bos:/*   16d:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   175:*/          set YARD_OPEN to 1;
corfhp.bos:/*   17c:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   184:*/  set YARD_OPEN to 0;
corfhp.bos:/*   18e:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   196:*/          set YARD_OPEN to 0;
corfhp.bos:/*   19d:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   1bb:*/  set INBUILDSTANCE to 1;
corfhp.bos:/*   1c3:*/  set INBUILDSTANCE to 0;
corfmkr.bos:                    set ACTIVATION to 1;
corfmkr.bos:                    set ACTIVATION to 0;
corgant.bos:    set YARD_OPEN to 1;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 1;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set YARD_OPEN to 0;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 0;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set INBUILDSTANCE to 1;
corgant.bos:    set INBUILDSTANCE to 0;
corhal.bos:             // Set values for tilt
corhp.bos:/*   162:*/   set YARD_OPEN to 1;
corhp.bos:/*   16d:*/           set BUGGER_OFF to 1;
corhp.bos:/*   175:*/           set YARD_OPEN to 1;
corhp.bos:/*   17c:*/   set BUGGER_OFF to 0;
corhp.bos:/*   184:*/   set YARD_OPEN to 0;
corhp.bos:/*   18e:*/           set BUGGER_OFF to 1;
corhp.bos:/*   196:*/           set YARD_OPEN to 0;
corhp.bos:/*   19d:*/   set BUGGER_OFF to 0;
corhp.bos:/*   1bb:*/   set INBUILDSTANCE to 1;
corhp.bos:/*   1c3:*/   set INBUILDSTANCE to 0;
corintr.bos:    set ARMORED to 1;
corintr.bos:            set BUSY to 1;
corintr.bos:            set BUSY to 0;
corintr.bos:    set BUSY to 1;
corintr.bos:    set BUSY to 0;
corjugg.bos:    set CHANGE_TARGET to 2;
corjugg.bos:    set CHANGE_TARGET to 3;
corjugg.bos:    set CHANGE_TARGET to 4;
corkorg.bos:    set ARMORED to 1;
cormakr.bos:                            set ACTIVATION to 1;
cormakr.bos:                            set ACTIVATION to 0;
cormando.bos:   set INBUILDSTANCE to 0;
cormando.bos:   set INBUILDSTANCE to 1;
cormaw.bos:     set ARMORED to 0;
cormaw.bos:     set ARMORED to 1;
cormex.bos:     set ARMORED to 0;
cormex.bos:     set ARMORED to 1;
cormexp.bos:    set ARMORED to 0;
cormexp.bos:    set ARMORED to 1;
cormexp.bos:    set ACTIVATION to 100;
cormexp.bos:            set ACTIVATION to 0;
cormexp.bos:    set ARMORED to 0;
cormh.bos:              // Set values for tilt
cormls.bos:     set INBUILDSTANCE to 1;
cormls.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 1;
cormmkr.bos:    set ARMORED to 0;  //Not needed as MM in BAR have no damage modi
fyer tag set
cormmkr.bos:    set ARMORED to 1;
cormoho.bos:    set ARMORED to 0;
cormoho.bos:    set ARMORED to 1;
cormoho.bos:    set ARMORED to 1;
cormuskrat.bos: set INBUILDSTANCE to 1;
cormuskrat.bos: set INBUILDSTANCE to 0;
cormuskrat.bos: set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 0;
cornanotcplat.bos:      set INBUILDSTANCE to 1;
cornanotcplat.bos:      set INBUILDSTANCE to 0;
cornecro.bos:   set INBUILDSTANCE to 0;
cornecro.bos:   set INBUILDSTANCE to 1;
corplat.bos:    set ARMORED to 0;
corplat.bos:    set ARMORED to 1;
corplat.bos:    set YARD_OPEN to 1;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 1;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set YARD_OPEN to 0;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 0;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set INBUILDSTANCE to 1;
corplat.bos:    set INBUILDSTANCE to 0;
corplat.bos:    set ARMORED to 1;
correcl.bos:    set INBUILDSTANCE to 1;
correcl.bos:    set INBUILDSTANCE to 0;
corsh.bos:              // Set values for tilt
corshiva.bos:   set ARMORED to 1;
corshiva.bos:   set ARMORED to 0;
corshiva.bos:   set ARMORED to 1;
corshroud.bos:/*    80:*/               set ACTIVATION to 0;
corshroud.bos:/*   138:*/               set ACTIVATION to 0;
corshroud.bos:/*   144:*/               set ACTIVATION to 100;
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 100;
corsnap.bos:            // Set values for tilt
corsolar.bos:   set YARD_OPEN to 1;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 1;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set YARD_OPEN to 0;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 0;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set ACTIVATION to 100;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:   set ARMORED to 0;
corsolar.bos:   set ARMORED to 1;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:           set ACTIVATION to 100;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 100;
corspy.bos:     set INBUILDSTANCE to 1;
corspy.bos:     set INBUILDSTANCE to 0;
corsy.bos:      set YARD_OPEN to 1;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 1;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set YARD_OPEN to 0;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 0;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set INBUILDSTANCE to 1;
corsy.bos:      set INBUILDSTANCE to 0;
cortarg.bos:/*   1a6:*/ set ACTIVATION to 0;
cortarg.bos:/*   1ae:*/ set ACTIVATION to 1;
corthovr.bos:           // Set values for tilt
corthovr.bos:           set BUSY to 1;
corthovr.bos:           set BUSY to 0;
corthovr.bos:           set BUSY to 1;
corthovr.bos:           set BUSY to 0;
cortoast.bos:   set ARMORED to 0;
cortoast.bos:   set ARMORED to 1;
cortship.bos:           set BUSY to 1;
cortship.bos:           set BUSY to 0;
cortship.bos:           set BUSY to 1;
cortship.bos:           set BUSY to 0;
coruwmme.bos:   set ARMORED to 0;
coruwmme.bos:   set ARMORED to 1;
coruwmme.bos:   set ARMORED to 1;
corvp.bos:      set YARD_OPEN to 1;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 1;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set YARD_OPEN to 0;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 0;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set INBUILDSTANCE to 1;
corvp.bos:      set INBUILDSTANCE to 0;
corwin.bos:                     set ACTIVATION to 100;
corwin.bos:             set ACTIVATION to 0;
corwin.bos:             set ACTIVATION to 100;
exptype.h:** EXPtype.h -- Explosion Type information and GET/SET constants for s
cripts
exptype.h:#define ACTIVATION           1  // set or get
exptype.h:#define STANDINGMOVEORDERS   2  // set or get
exptype.h:#define STANDINGFIREORDERS   3  // set or get
exptype.h:#define INBUILDSTANCE        5  // set or get
exptype.h:#define BUSY                 6  // set or get (used by misc. special c
ase missions like transport ships)
exptype.h:#define YARD_OPEN           18  // set or get (change which plots we o
ccupy when building opens and closes)
exptype.h:#define BUGGER_OFF          19  // set or get (ask other units to clea
r the area)
exptype.h:#define ARMORED             20  // set or get
exptype.h:#define UPRIGHT                   79 // set or get
exptype.h:#define LOS_RADIUS                85 // set or get
exptype.h:#define AIR_LOS_RADIUS            86 // set or get
exptype.h:#define RADAR_RADIUS              87 // set or get
exptype.h:#define JAMMER_RADIUS             88 // set or get
exptype.h:#define SONAR_RADIUS              89 // set or get
exptype.h:#define SONAR_JAM_RADIUS          90 // set or get
exptype.h:#define SEISMIC_RADIUS            91 // set or get
exptype.h:#define CURRENT_FUEL              93 // set or get
exptype.h:#define SHIELD_POWER              95 // set or get
exptype.h:#define STEALTH                   96 // set or get
exptype.h:#define CRASHING                  97 // set or get, returns whether ai
rcraft isCrashing state
exptype.h:#define CHANGE_TARGET             98 // set, the value it's set to det
ermines the affected weapon
exptype.h:#define ALPHA_THRESHOLD          103 // set or get
exptype.h:#define SONAR_STEALTH            108 // set or get
exptype.h:#define FLANK_B_MODE          120 // set or get
exptype.h:#define FLANK_B_DIR           121 // set or get, set is through get fo
r multiple args
exptype.h:#define FLANK_B_MOBILITY_ADD  122 // set or get
exptype.h:#define FLANK_B_MAX_DAMAGE    123 // set or get
exptype.h:#define FLANK_B_MIN_DAMAGE    124 // set or get
exptype.h:#define ENERGY_MAKE             140 // set or get (100*E production)
exptype.h:#define METAL_MAKE              141 // set or get (100*M production)
Binary file fgrep.exe matches
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 1;
meteor.bos:     set ARMORED to 0;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 0;
fgrep: New folder: Is a directory
roost.bos:      set ARMORED to 0;
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
standard_commands_gpl.h:#define ACTIVATION              1       // set or get
standard_commands_gpl.h:#define STANDINGMOVEORDERS      2       // set or get
standard_commands_gpl.h:#define STANDINGFIREORDERS      3       // set or get
standard_commands_gpl.h:#define INBUILDSTANCE           5       // set or get
standard_commands_gpl.h:#define BUSY                    6       // set or get (u
sed by misc. special case missions like transport ships)
standard_commands_gpl.h:#define YARD_OPEN                       18      // set o
r get (change which plots we occupy when building opens and closes)
standard_commands_gpl.h:#define BUGGER_OFF              19      // set or get (a
sk other units to clear the area)
standard_commands_gpl.h:#define ARMORED                 20      // SET or GET.
Turns on the Armored state.
standard_commands_gpl.h:#define CURRENT_SPEED           29      // SET only, if
I'm reading the code right.  Gives us a new speed for the next frame ONLY.
standard_commands_gpl.h:#define VETERAN_LEVEL           32      // SET or GET.
Can make units super-accurate, or keep them inaccurate.
standard_commands_gpl.h:#define MAX_SPEED                       75      // SET o
nly.  Alters MaxVelocity for the given unit.
yard.h: set YARD_OPEN to TRUE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to TRUE;
yard.h: set BUGGER_OFF to FALSE;
yard.h: set YARD_OPEN to FALSE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to FALSE;
yard.h: set BUGGER_OFF to FALSE;

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i "SET.*to" *
fgrep: armada_marauder_lus: Is a directory
fgrep: New folder: Is a directory
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i SET.*to *
fgrep: armada_marauder_lus: Is a directory
fgrep: New folder: Is a directory
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i set.*to *
fgrep: armada_marauder_lus: Is a directory
fgrep: New folder: Is a directory
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep
Usage: fgrep [OPTION]... PATTERN [FILE]...
Try `fgrep --help' for more information.

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>man fgrep
'man' is not recognized as an internal or external command,
operable program or batch file.

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep --help
Usage: fgrep [OPTION]... PATTERN [FILE] ...
Search for PATTERN in each FILE or standard input.

Regexp selection and interpretation:
  -E, --extended-regexp     PATTERN is an extended regular expression
  -F, --fixed-regexp        PATTERN is a fixed string separated by newlines
  -G, --basic-regexp        PATTERN is a basic regular expression
  -e, --regexp=PATTERN      use PATTERN as a regular expression
  -f, --file=FILE           obtain PATTERN from FILE
  -i, --ignore-case         ignore case distinctions
  -w, --word-regexp         force PATTERN to match only whole words
  -x, --line-regexp         force PATTERN to match only whole lines

Miscellaneous:
  -s, --no-messages         suppress error messages
  -v, --revert-match        select non-matching lines
  -V, --version             print version information and exit
      --help                display this help and exit

Output control:
  -b, --byte-offset         print the byte offset with output lines
  -n, --line-number         print line number with output lines
  -H, --with-filename       print the filename for each match
  -h, --no-filename         suppress the prefixing filename on output
  -q, --quiet, --silent     suppress all normal output
  -a, --text                do not suppress binary output
  -d, --directories=ACTION  how to handle directories
                            ACTION is 'read', 'recurse', or 'skip'.
  -r, --recursive           equivalent to --directories=recurse.
  -L, --files-without-match only print FILE names containing no match
  -l, --files-with-matches  only print FILE names containing matches
  -c, --count               only print a count of matching lines per FILE

Context control:
  -B, --before-context=NUM  print NUM lines of leading context
  -A, --after-context=NUM   print NUM lines of trailing context
  -C, --context[=NUM]       print NUM (default 2) lines of output context
                            unless overriden by -A or -B
  -NUM                      same as --context=NUM
  -U, --binary              do not strip CR characters at EOL (MSDOS)
  -u, --unix-byte-offsets   report offsets as if CRs were not there (MSDOS)

If no -[GEF], then `egrep' assumes -E, `fgrep' -F, else -G.
With no FILE, or when FILE is -, read standard input. If less than
two FILEs given, assume -h. Exit with 0 if matches, with 1 if none.
Exit with 2 if syntax errors or system errors.

Report bugs to <bug-gnu-utils@gnu.org>.

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i -e set.*to *
fgrep: armada_marauder_lus: Is a directory
fgrep: New folder: Is a directory
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i -E set.*to *
Binary file armada_archangel.cob matches
armada_advancedaircraftplant.bos:     set YARD_OPEN to 1;
armada_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
armada_advancedaircraftplant.bos:             set YARD_OPEN to 1;
armada_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
armada_advancedaircraftplant.bos:     set YARD_OPEN to 0;
armada_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
armada_advancedaircraftplant.bos:             set YARD_OPEN to 0;
armada_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
armada_advancedaircraftplant.bos:     set INBUILDSTANCE to 1;
armada_advancedaircraftplant.bos:     set INBUILDSTANCE to 0;
Binary file armada_dragonslayer.cob matches
armada_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 1;
armada_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionbot.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionbot.bos:     set INBUILDSTANCE to 1;
armada_advancedconstructionsub.bos:   set INBUILDSTANCE to 0;
armada_advancedconstructionsub.bos:   set INBUILDSTANCE to 1;
armada_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 1;
Binary file armada_advancedconstructionvehicle.cob matches
armada_advancedsolarcollector.bos:  set ARMORED to 0;
armada_advancedsolarcollector.bos:  set ARMORED to 1;
armada_advancedfusionreactor.bos:    set ARMORED to 1;
armada_advancedfusionreactor.bos:    set ARMORED to 0;
Binary file armada_sweeper.cob matches
armada_advancedbotlab.bos:    set YARD_OPEN to 1;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 1;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set YARD_OPEN to 0;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 0;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 1;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 0;
armada_rattlesnake.bos:     set ARMORED to 0;
armada_rattlesnake.bos:     set ARMORED to 1;
Binary file armada_rattlesnake.cob matches
armada_citadel.bos:// OffsetToScriptCodeIndexArray        f64
armada_citadel.bos:// OffsetToScriptNameOffsetArray       fa8
armada_citadel.bos:// OffsetToPieceNameOffsetArray        fec
armada_citadel.bos:// OffsetToScriptCode                  2c
armada_citadel.bos:// OffsetToNameArray                   1010
armada_citadel.bos:// OffsetToFirstName                   1010
armada_twilight.bos:    set ARMORED to 0;
armada_twilight.bos:    set ARMORED to 1;
armada_twilight.bos:    set ACTIVATION to 0;
armada_twilight.bos:    set ACTIVATION to 100;
Binary file armada_amphibiousbot.cob matches
armada_amphibiouscomplex.bos:   set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 1;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 0;
Binary file armada_crocodile.cob matches
armada_pulsar.bos:    set ARMORED to 0;
armada_pulsar.bos:    set ARMORED to 1;
armada_aircraftplant.bos:      set YARD_OPEN to 1;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 1;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set YARD_OPEN to 0;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 0;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set INBUILDSTANCE to 1;
armada_aircraftplant.bos:      set INBUILDSTANCE to 0;
Binary file armada_shellshocker.cob matches
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 100;
Binary file armada_radarjammerbot.cob matches
armada_advancedshipyard.bos:     set YARD_OPEN to 1;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 1;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set YARD_OPEN to 0;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 0;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 1;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 0;
Binary file armada_moray.cob matches
armada_advancedvehicleplant.bos:     set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 1;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 0;
Binary file armada_titan.cob matches
Binary file armada_dreadnought.cob matches
armada_beaver.bos:  set INBUILDSTANCE to 0;
armada_beaver.bos:  set INBUILDSTANCE to 1;
Binary file armada_roughneck.cob matches
Binary file armada_bull.cob matches
armada_constructionaircraft.bos:      set INBUILDSTANCE to 1;
armada_constructionaircraft.bos:      set INBUILDSTANCE to 0;
Binary file armada_haven.cob matches
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 0;
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 1;
Binary file armada_constructionhovercraft.cob matches
Binary file armada_chainsaw.cob matches
armada_constructionbot.bos:      set INBUILDSTANCE to 0;
armada_constructionbot.bos:      set INBUILDSTANCE to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 1;
Binary file armada_dragonsclaw.cob matches
armada_commander.bos:     set INBUILDSTANCE to 1;
armada_commander.bos:     set INBUILDSTANCE to 0;
armada_commanderboss.bos: set INBUILDSTANCE to 1;
armada_commanderboss.bos: set INBUILDSTANCE to 0;
armada_consul.bos:  set INBUILDSTANCE to 1;
armada_consul.bos:  set INBUILDSTANCE to 0;
Binary file armada_turtle.cob matches
Binary file armada_paladin.cob matches
armada_constructionship.bos:      set INBUILDSTANCE to 0;
armada_constructionship.bos:      set INBUILDSTANCE to 1;
Binary file armada_constructionship.cob matches
armada_constructionseaplane.bos:     set INBUILDSTANCE to 1;
armada_constructionseaplane.bos:     set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 1;
Binary file armada_dolphin.cob matches
armada_decoyfusionreactor.bos:      set ARMORED to 1;
armada_decoyfusionreactor.bos:      set ARMORED to 0;
Binary file armada_paralyzer.cob matches
armada_epoch.bos:   set ARMORED to 1;
Binary file armada_epoch.cob matches
armada_butler.bos:    set INBUILDSTANCE to 0;
armada_butler.bos:    set INBUILDSTANCE to 1;
Binary file armada_sprinter.cob matches
Binary file armada_rover.cob matches
Binary file armada_fatboy.cob matches
armada_ferret.bos:  set ARMORED to 0;
armada_ferret.bos:  set ARMORED to 1;
Binary file armada_ferret.cob matches
Binary file armada_navalarbalest.cob matches
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 1;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 0;
Binary file armada_hound.cob matches
Binary file armada_arbalest.cob matches
Binary file armada_blitz.cob matches
Binary file armada_tick.cob matches
Binary file armada_navalnettle.cob matches
armada_fusionreactor.bos:     set ARMORED to 1;
armada_fusionreactor.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 1;
Binary file armada_gunplatform.cob matches
Binary file armada_gremlin.cob matches
Binary file armada_mace.cob matches
armada_hovercraftplatform.bos:      set YARD_OPEN to 1;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 1;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set YARD_OPEN to 0;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 0;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 1;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 0;
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 100;
Binary file armada_janus.cob matches
Binary file armada_crossbow.cob matches
Binary file armada_juno.cob matches
Binary file armada_banshee.cob matches
armada_botlab.bos:     set YARD_OPEN to 1;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 1;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set YARD_OPEN to 0;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 0;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set INBUILDSTANCE to 1;
armada_botlab.bos:     set INBUILDSTANCE to 0;
Binary file armada_jaguar.cob matches
Binary file armada_lunkhead.cob matches
Binary file armada_starlight.cob matches
Binary file armada_marauder.cob matches
fgrep: armada_marauder_lus: Is a directory
Binary file armada_compass.cob matches
Binary file armada_mauser.cob matches
Binary file armada_gunslinger.cob matches
armada_mercury.bos: set DELAY_UNIT_VAR to 0;
Binary file armada_mercury.cob matches
armada_ambassador.bos:    set ARMORED to 1;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:    set-signal-mask SIG_RESTORE;
Binary file armada_ambassador.cob matches
armada_possum.bos:      set-signal-mask SIG_RESTORE;
Binary file armada_possum.cob matches
armada_voyager.bos:     set INBUILDSTANCE to 1;
armada_voyager.bos:     set INBUILDSTANCE to 0;
Binary file armada_voyager.cob matches
armada_groundhog.bos:     set INBUILDSTANCE to 1;
armada_groundhog.bos:     set INBUILDSTANCE to 0;
armada_advancedenergyconverter.bos:    set ARMORED to 0; //Not needed as MM in BAR have no damage modif
yer tag set
armada_advancedenergyconverter.bos:    set ARMORED to 1;
Binary file armada_longbow.cob matches
armada_constructionturret.bos:  set INBUILDSTANCE to 1;
armada_constructionturret.bos:  set INBUILDSTANCE to 0;
Binary file armada_constructionturret.cob matches
armada_constructionturretplat.bos:      set INBUILDSTANCE to 1;
armada_constructionturretplat.bos:      set INBUILDSTANCE to 0;
Binary file armada_constructionturretplat.cob matches
armada_pitbull.bos:      set ARMORED to 0;
armada_pitbull.bos:      set ARMORED to 1;
armada_pitbull.bos:      set-signal-mask SIG_RESTORE;
Binary file armada_pitbull.cob matches
Binary file armada_pincer.cob matches
armada_seaplaneplatform.bos:    set ARMORED to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
armada_seaplaneplatform.bos:    set YARD_OPEN to 1;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 1;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set YARD_OPEN to 0;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 0;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 1;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
Binary file armada_ellysaw.cob matches
Binary file armada_skater.cob matches
Binary file armada_harpoon2.cob matches
armada_pawn.bos:              bAnimate = TRUE; // this sets animation started, so that
 StopAnimate knows that it should restore state quickly
Binary file armada_pawn.cob matches
armada_grimreaper.bos:    set INBUILDSTANCE to 1;
armada_grimreaper.bos:    set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 1;
armrectrt4.bos: set INBUILDSTANCE to 0;
armrectrt4.bos: set INBUILDSTANCE to 1;
Binary file armada_nettle.cob matches
Binary file armada_rocketeer.cob matches
Binary file armada_corsair.cob matches
Binary file armada_sabre.cob matches
Binary file armada_whistler.cob matches
Binary file armada_tsunami.cob matches
Binary file armada_umbrella.cob matches
Binary file armada_serpent.cob matches
Binary file armada_seeker.cob matches
armada_experimentalgantry.bos:   set YARD_OPEN to 1;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 1;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set YARD_OPEN to 0;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 0;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 1;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 0;
armada_armageddon.bos:// OffsetToScriptCodeIndexArray        c08
armada_armageddon.bos:// OffsetToScriptNameOffsetArray       c4c
armada_armageddon.bos:// OffsetToPieceNameOffsetArray        c90
armada_armageddon.bos:// OffsetToScriptCode                  2c
armada_armageddon.bos:// OffsetToNameArray                   ca4
armada_armageddon.bos:// OffsetToFirstName                   ca4
Binary file armada_armageddon.cob matches
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 100;
Binary file armada_bermuda.cob matches
Binary file armada_sharpshooter.cob matches
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 1;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 0;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:   set ARMORED to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:   set ARMORED to 1;
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 100;
Binary file armada_webber.cob matches
Binary file armada_recluse.cob matches
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:     set INBUILDSTANCE to 1;
armada_ghost.bos:     set INBUILDSTANCE to 0;
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:             set ACTIVATION to 100;
Binary file armada_stout.cob matches
Binary file armada_eel.cob matches
armada_shipyard.bos:      set YARD_OPEN to 1;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 1;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set YARD_OPEN to 0;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 0;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set INBUILDSTANCE to 1;
armada_shipyard.bos:      set INBUILDSTANCE to 0;
armada_pinpointer.bos:    set ARMORED to 1;
armada_pinpointer.bos:    set ACTIVATION to 0;
armada_pinpointer.bos:    set ACTIVATION to 1;
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           set BUSY to 0;
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           set BUSY to 0;
Binary file armada_bearer.cob matches
Binary file armada_harpoon.cob matches
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           set BUSY to 0;
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           set BUSY to 0;
Binary file armada_convoy.cob matches
Binary file armada_vanguard.cob matches
armada_vehicleplant.bos:      set ARMORED to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
armada_vehicleplant.bos:      set YARD_OPEN to 1;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 1;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set YARD_OPEN to 0;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 0;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set INBUILDSTANCE to 1;
armada_vehicleplant.bos:      set INBUILDSTANCE to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
Binary file armada_centurion.cob matches
armada_windturbine.bos:                     set ACTIVATION to 100;
armada_windturbine.bos:             set ACTIVATION to 0;
armada_windturbine.bos:             set ACTIVATION to 100;
Binary file armada_windturbine.cob matches
Binary file armada_shredder.cob matches
Binary file armada_welder.cob matches
Binary file cob_file.pyc matches
constants.h:#define BUGGER_OFF          19  // set or get (ask other units to cl
ear the area)
constants.h:#define CHANGE_TARGET             98 // set, the value it's set to d
etermines the affected weapon
coraap.bos:     set YARD_OPEN to 1;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 1;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set YARD_OPEN to 0;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 0;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set INBUILDSTANCE to 1;
coraap.bos:     set INBUILDSTANCE to 0;
coraca.bos:     set INBUILDSTANCE to 1;
coraca.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 1;
coracsub.bos:   set INBUILDSTANCE to 0;
coracsub.bos:   set INBUILDSTANCE to 1;
coracv.bos:     set INBUILDSTANCE to 0;
coracv.bos:     set INBUILDSTANCE to 1;
Binary file coracv.cob matches
coradvsol.bos:// OffsetToScriptCodeIndexArray        54c
coradvsol.bos:// OffsetToScriptNameOffsetArray       568
coradvsol.bos:// OffsetToPieceNameOffsetArray        584
coradvsol.bos:// OffsetToScriptCode                  2c
coradvsol.bos:// OffsetToNameArray                   59c
coradvsol.bos:// OffsetToFirstName                   59c
coradvsol.bos:/*    57:*/       set ARMORED to 0;
coradvsol.bos:/*    5f:*/       set ARMORED to 1;
coradvsol.bos:/*    7d:*/       set ACTIVATION to 0;
coradvsol.bos:/*    85:*/       set ACTIVATION to 100;
corafus.bos:// OffsetToScriptCodeIndexArray        730
corafus.bos:// OffsetToScriptNameOffsetArray       758
corafus.bos:// OffsetToPieceNameOffsetArray        780
corafus.bos:// OffsetToScriptCode                  2c
corafus.bos:// OffsetToNameArray                   794
corafus.bos:// OffsetToFirstName                   794
corafus.bos:/*    b0:*/ set ARMORED to 1;
corafus.bos:/*    ba:*/ set ARMORED to 0;
Binary file corah.cob matches
Binary file corak.cob matches
Binary file coramph.cob matches
coramsub.bos:// OffsetToScriptCodeIndexArray        bc0
coramsub.bos:// OffsetToScriptNameOffsetArray       c00
coramsub.bos:// OffsetToPieceNameOffsetArray        c40
coramsub.bos:// OffsetToScriptCode                  2c
coramsub.bos:// OffsetToNameArray                   c78
coramsub.bos:// OffsetToFirstName                   c78
coramsub.bos:/*    87:*/        set YARD_OPEN to 1;
coramsub.bos:/*    92:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    9a:*/                set YARD_OPEN to 1;
coramsub.bos:/*    a1:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    a9:*/        set YARD_OPEN to 0;
coramsub.bos:/*    b3:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    bb:*/                set YARD_OPEN to 0;
coramsub.bos:/*    c2:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    d0:*/        set INBUILDSTANCE to 1;
coramsub.bos:/*    d8:*/        set INBUILDSTANCE to 0;
corap.bos:// OffsetToScriptCodeIndexArray        11f0
corap.bos:// OffsetToScriptNameOffsetArray       123c
corap.bos:// OffsetToPieceNameOffsetArray        1288
corap.bos:// OffsetToScriptCode                  2c
corap.bos:// OffsetToNameArray                   12ac
corap.bos:// OffsetToFirstName                   12ac
corap.bos:/*   17e:*/   set YARD_OPEN to 1;
corap.bos:/*   189:*/           set BUGGER_OFF to 1;
corap.bos:/*   191:*/           set YARD_OPEN to 1;
corap.bos:/*   198:*/   set BUGGER_OFF to 0;
corap.bos:/*   1a0:*/   set YARD_OPEN to 0;
corap.bos:/*   1aa:*/           set BUGGER_OFF to 1;
corap.bos:/*   1b2:*/           set YARD_OPEN to 0;
corap.bos:/*   1b9:*/   set BUGGER_OFF to 0;
corap.bos:/*   1d5:*/   set INBUILDSTANCE to 1;
corap.bos:/*   1dd:*/   set INBUILDSTANCE to 0;
corarad.bos:// OffsetToScriptCodeIndexArray        624
corarad.bos:// OffsetToScriptNameOffsetArray       64c
corarad.bos:// OffsetToPieceNameOffsetArray        674
corarad.bos:// OffsetToScriptCode                  2c
corarad.bos:// OffsetToNameArray                   680
corarad.bos:// OffsetToFirstName                   680
Binary file corarch.cob matches
corasp.bos:// OffsetToScriptCodeIndexArray        a94
corasp.bos:// OffsetToScriptNameOffsetArray       aac
corasp.bos:// OffsetToPieceNameOffsetArray        ac4
corasp.bos:// OffsetToScriptCode                  2c
corasp.bos:// OffsetToNameArray                   b04
corasp.bos:// OffsetToFirstName                   b04
corasy.bos:     set YARD_OPEN to 1;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 1;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set YARD_OPEN to 0;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 0;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set INBUILDSTANCE to 1;
corasy.bos:     set INBUILDSTANCE to 0;
corasye.bos:    set YARD_OPEN to 1;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 1;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set YARD_OPEN to 0;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 0;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set INBUILDSTANCE to 1;
corasye.bos:    set INBUILDSTANCE to 0;
coravp.bos:     set YARD_OPEN to 1;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 1;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set YARD_OPEN to 0;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 0;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set INBUILDSTANCE to 1;
coravp.bos:     set INBUILDSTANCE to 0;
Binary file corban.cob matches
Binary file corbats.cob matches
corbhmth.bos:   set ACTIVATION to 100;
corbhmth.bos:   set ACTIVATION to 0;
corblackhy.bos: set ARMORED to 1;
Binary file corblackhy.cob matches
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 0 - 1500 + get UNK
NOWN_UNIT_VALUE(82);
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 1500 + get UNKNOWN
_UNIT_VALUE(82);
corca.bos:      set INBUILDSTANCE to 1;
corca.bos:      set INBUILDSTANCE to 0;
Binary file corcan.cob matches
Binary file corcarry.cob matches
Binary file corcat.cob matches
corch.bos:      set INBUILDSTANCE to 0;
corch.bos:      set INBUILDSTANCE to 1;
Binary file corch.cob matches
corck.bos:      set INBUILDSTANCE to 0;
corck.bos:      set INBUILDSTANCE to 1;
cortex_commander.bos:     set INBUILDSTANCE to 1;
cortex_commander.bos:     set INBUILDSTANCE to 0;
cortex_commanderboss.bos: set INBUILDSTANCE to 1;
cortex_commanderboss.bos: set INBUILDSTANCE to 0;
Binary file corcrash.cob matches
Binary file corcrus.cob matches
Binary file corcrw.cob matches
corcs.bos:      set INBUILDSTANCE to 1;
corcs.bos:      set INBUILDSTANCE to 0;
corcsa.bos:     set INBUILDSTANCE to 1;
corcsa.bos:     set INBUILDSTANCE to 0;
Binary file corcut.cob matches
corcv.bos:      set INBUILDSTANCE to 0;
corcv.bos:      set INBUILDSTANCE to 1;
cordl.bos:// OffsetToScriptCodeIndexArray        77c
cordl.bos:// OffsetToScriptNameOffsetArray       79c
cordl.bos:// OffsetToPieceNameOffsetArray        7bc
cordl.bos:// OffsetToScriptCode                  2c
cordl.bos:// OffsetToNameArray                   7cc
cordl.bos:// OffsetToFirstName                   7cc
cordoom.bos:    set ARMORED to 0;
cordoom.bos:    set ARMORED to 1;
cordrag.bos:// OffsetToScriptCodeIndexArray        38
cordrag.bos:// OffsetToScriptNameOffsetArray       3c
cordrag.bos:// OffsetToPieceNameOffsetArray        40
cordrag.bos:// OffsetToScriptCode                  2c
cordrag.bos:// OffsetToNameArray                   40
cordrag.bos:// OffsetToFirstName                   40
Binary file corenaa.cob matches
corerad.bos:            set CHANGE_TARGET to 1;
Binary file corerad.cob matches
corestor.bos:// OffsetToScriptCodeIndexArray        3e8
corestor.bos:// OffsetToScriptNameOffsetArray       3f8
corestor.bos:// OffsetToPieceNameOffsetArray        408
corestor.bos:// OffsetToScriptCode                  2c
corestor.bos:// OffsetToNameArray                   414
corestor.bos:// OffsetToFirstName                   414
Binary file coresupp.cob matches
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 100;
Binary file corexp.cob matches
corfast.bos:    set INBUILDSTANCE to 1;
corfast.bos:    set INBUILDSTANCE to 0;
Binary file corfav.cob matches
corfhp.bos:// OffsetToScriptCodeIndexArray        11e4
corfhp.bos:// OffsetToScriptNameOffsetArray       1230
corfhp.bos:// OffsetToPieceNameOffsetArray        127c
corfhp.bos:// OffsetToScriptCode                  2c
corfhp.bos:// OffsetToNameArray                   12a4
corfhp.bos:// OffsetToFirstName                   12a4
corfhp.bos:/*   162:*/  set YARD_OPEN to 1;
corfhp.bos:/*   16d:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   175:*/          set YARD_OPEN to 1;
corfhp.bos:/*   17c:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   184:*/  set YARD_OPEN to 0;
corfhp.bos:/*   18e:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   196:*/          set YARD_OPEN to 0;
corfhp.bos:/*   19d:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   1bb:*/  set INBUILDSTANCE to 1;
corfhp.bos:/*   1c3:*/  set INBUILDSTANCE to 0;
Binary file corflak.cob matches
corfmkr.bos:                    set ACTIVATION to 1;
corfmkr.bos:                    set ACTIVATION to 0;
Binary file corfrock.cob matches
Binary file corfrt.cob matches
corfus.bos:// OffsetToScriptCodeIndexArray        52c
corfus.bos:// OffsetToScriptNameOffsetArray       53c
corfus.bos:// OffsetToPieceNameOffsetArray        54c
corfus.bos:// OffsetToScriptCode                  2c
corfus.bos:// OffsetToNameArray                   564
corfus.bos:// OffsetToFirstName                   564
corgant.bos:    set YARD_OPEN to 1;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 1;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set YARD_OPEN to 0;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 0;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set INBUILDSTANCE to 1;
corgant.bos:    set INBUILDSTANCE to 0;
Binary file corgarp.cob matches
Binary file corgator.cob matches
Binary file corgol.cob matches
Binary file corhal.cob matches
corhp.bos:// OffsetToScriptCodeIndexArray        11e4
corhp.bos:// OffsetToScriptNameOffsetArray       1230
corhp.bos:// OffsetToPieceNameOffsetArray        127c
corhp.bos:// OffsetToScriptCode                  2c
corhp.bos:// OffsetToNameArray                   12a4
corhp.bos:// OffsetToFirstName                   12a4
corhp.bos:/*   162:*/   set YARD_OPEN to 1;
corhp.bos:/*   16d:*/           set BUGGER_OFF to 1;
corhp.bos:/*   175:*/           set YARD_OPEN to 1;
corhp.bos:/*   17c:*/   set BUGGER_OFF to 0;
corhp.bos:/*   184:*/   set YARD_OPEN to 0;
corhp.bos:/*   18e:*/           set BUGGER_OFF to 1;
corhp.bos:/*   196:*/           set YARD_OPEN to 0;
corhp.bos:/*   19d:*/   set BUGGER_OFF to 0;
corhp.bos:/*   1bb:*/   set INBUILDSTANCE to 1;
corhp.bos:/*   1c3:*/   set INBUILDSTANCE to 0;
Binary file corhrk.cob matches
corintr.bos:    set ARMORED to 1;
corintr.bos:            set BUSY to 1;
corintr.bos:            set BUSY to 0;
corintr.bos:    set BUSY to 1;
corintr.bos:    set BUSY to 0;
corjamt.bos:// OffsetToScriptCodeIndexArray        744
corjamt.bos:// OffsetToScriptNameOffsetArray       76c
corjamt.bos:// OffsetToPieceNameOffsetArray        794
corjamt.bos:// OffsetToScriptCode                  2c
corjamt.bos:// OffsetToNameArray                   7a8
corjamt.bos:// OffsetToFirstName                   7a8
corjugg.bos:    set CHANGE_TARGET to 2;
corjugg.bos:    set CHANGE_TARGET to 3;
corjugg.bos:    set CHANGE_TARGET to 4;
Binary file corjugg.cob matches
corjugg.lua_old:        SetSignalMask( SIG_stop )
corjuno.bos:// OffsetToScriptCodeIndexArray        d80
corjuno.bos:// OffsetToScriptNameOffsetArray       dc4
corjuno.bos:// OffsetToPieceNameOffsetArray        e08
corjuno.bos:// OffsetToScriptCode                  2c
corjuno.bos:// OffsetToNameArray                   e4c
corjuno.bos:// OffsetToFirstName                   e4c
Binary file corjuno.cob matches
corkarg.lua_old:        SetSignalMask(SIG_RESTORE)
corkorg.bos:    set ARMORED to 1;
corkorg.bos:    set-signal-mask SIG_FOOTSTOMP_L;
corkorg.bos:    set-signal-mask SIG_FOOTSTOMP_R;
Binary file corkorg.cob matches
Binary file corlevlr.cob matches
Binary file cormabm.cob matches
cormakr.bos:                            set ACTIVATION to 1;
cormakr.bos:                            set ACTIVATION to 0;
cormando.bos:   set INBUILDSTANCE to 0;
cormando.bos:   set INBUILDSTANCE to 1;
Binary file cormart.cob matches
cormaw.bos:     set ARMORED to 0;
cormaw.bos:     set ARMORED to 1;
Binary file cormaw.cob matches
cormex.bos:     set ARMORED to 0;
cormex.bos:     set ARMORED to 1;
cormexp.bos:    set ARMORED to 0;
cormexp.bos:    set ARMORED to 1;
cormexp.bos:    set ACTIVATION to 100;
cormexp.bos:            set ACTIVATION to 0;
cormexp.bos:    set ARMORED to 0;
Binary file cormexp.cob matches
cormh.bos:      set-signal-mask SIG_RESTORE;
Binary file cormh.cob matches
Binary file cormist.cob matches
cormls.bos:     set INBUILDSTANCE to 1;
cormls.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 1;
cormmkr.bos:    set ARMORED to 0;  //Not needed as MM in BAR have no damage modi
fyer tag set
cormmkr.bos:    set ARMORED to 1;
cormoho.bos:    set ARMORED to 0;
cormoho.bos:    set ARMORED to 1;
cormoho.bos:    set ARMORED to 1;
Binary file cormort.cob matches
Binary file cormship.cob matches
cormstor.bos:// OffsetToScriptCodeIndexArray        2f8
cormstor.bos:// OffsetToScriptNameOffsetArray       308
cormstor.bos:// OffsetToPieceNameOffsetArray        318
cormstor.bos:// OffsetToScriptCode                  2c
cormstor.bos:// OffsetToNameArray                   31c
cormstor.bos:// OffsetToFirstName                   31c
cormuskrat.bos: set INBUILDSTANCE to 1;
cormuskrat.bos: set INBUILDSTANCE to 0;
cormuskrat.bos: set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 0;
Binary file cornanotc.cob matches
cornanotcplat.bos:      set INBUILDSTANCE to 1;
cornanotcplat.bos:      set INBUILDSTANCE to 0;
Binary file cornanotcplat.cob matches
cornecro.bos:   set INBUILDSTANCE to 0;
cornecro.bos:   set INBUILDSTANCE to 1;
Binary file corparrow.cob matches
corplat.bos:    set ARMORED to 0;
corplat.bos:    set ARMORED to 1;
corplat.bos:    set YARD_OPEN to 1;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 1;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set YARD_OPEN to 0;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 0;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set INBUILDSTANCE to 1;
corplat.bos:    set INBUILDSTANCE to 0;
corplat.bos:    set ARMORED to 1;
Binary file corpship.cob matches
Binary file corpt.cob matches
Binary file corpyro.cob matches
corrad.bos:// OffsetToScriptCodeIndexArray        54c
corrad.bos:// OffsetToScriptNameOffsetArray       574
corrad.bos:// OffsetToPieceNameOffsetArray        59c
corrad.bos:// OffsetToScriptCode                  2c
corrad.bos:// OffsetToNameArray                   5a4
corrad.bos:// OffsetToFirstName                   5a4
Binary file corraid.cob matches
Binary file correap.cob matches
correcl.bos:    set INBUILDSTANCE to 1;
correcl.bos:    set INBUILDSTANCE to 0;
corrl.bos:// OffsetToScriptCodeIndexArray        9cc
corrl.bos:// OffsetToScriptNameOffsetArray       9ec
corrl.bos:// OffsetToPieceNameOffsetArray        a0c
corrl.bos:// OffsetToScriptCode                  2c
corrl.bos:// OffsetToNameArray                   a2c
corrl.bos:// OffsetToFirstName                   a2c
Binary file corrl.cob matches
Binary file corroy.cob matches
Binary file corsb.cob matches
Binary file corscreamer.cob matches
corsd.bos:// OffsetToScriptCodeIndexArray        43c
corsd.bos:// OffsetToScriptNameOffsetArray       44c
corsd.bos:// OffsetToPieceNameOffsetArray        45c
corsd.bos:// OffsetToScriptCode                  2c
corsd.bos:// OffsetToNameArray                   460
corsd.bos:// OffsetToFirstName                   460
Binary file corseal.cob matches
Binary file corsent.cob matches
Binary file corsh.cob matches
corshiva.bos:   set ARMORED to 1;
corshiva.bos:   set ARMORED to 0;
corshiva.bos:   set ARMORED to 1;
Binary file corshiva.cob matches
corshiva.lua_old:       SetSignalMask( SIG_stop )
corshiva.lua_old:       SetSignalMask( SIG_stop )
corshroud.bos:// OffsetToScriptCodeIndexArray        898
corshroud.bos:// OffsetToScriptNameOffsetArray       8c4
corshroud.bos:// OffsetToPieceNameOffsetArray        8f0
corshroud.bos:// OffsetToScriptCode                  2c
corshroud.bos:// OffsetToNameArray                   904
corshroud.bos:// OffsetToFirstName                   904
corshroud.bos:/*    80:*/               set ACTIVATION to 0;
corshroud.bos:/*   138:*/               set ACTIVATION to 0;
corshroud.bos:/*   144:*/               set ACTIVATION to 100;
corsilo.bos:// OffsetToScriptCodeIndexArray        c08
corsilo.bos:// OffsetToScriptNameOffsetArray       c4c
corsilo.bos:// OffsetToPieceNameOffsetArray        c90
corsilo.bos:// OffsetToScriptCode                  2c
corsilo.bos:// OffsetToNameArray                   ca4
corsilo.bos:// OffsetToFirstName                   ca4
Binary file corsilo.cob matches
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 100;
Binary file corsnap.cob matches
Binary file corsok.cob matches
corsolar.bos:   set YARD_OPEN to 1;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 1;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set YARD_OPEN to 0;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 0;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set ACTIVATION to 100;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:   set ARMORED to 0;
corsolar.bos:   set ARMORED to 1;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:           set ACTIVATION to 100;
corsonar.bos:// OffsetToScriptCodeIndexArray        42c
corsonar.bos:// OffsetToScriptNameOffsetArray       450
corsonar.bos:// OffsetToPieceNameOffsetArray        474
corsonar.bos:// OffsetToScriptCode                  2c
corsonar.bos:// OffsetToNameArray                   47c
corsonar.bos:// OffsetToFirstName                   47c
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 100;
Binary file corspec.cob matches
corspy.bos:     set INBUILDSTANCE to 1;
corspy.bos:     set INBUILDSTANCE to 0;
Binary file corstorm.cob matches
Binary file corsumo.cob matches
corsumo.lua_old:    SetSignalMask(SIG_RESTORE)
corsy.bos:      set YARD_OPEN to 1;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 1;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set YARD_OPEN to 0;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 0;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set INBUILDSTANCE to 1;
corsy.bos:      set INBUILDSTANCE to 0;
cortarg.bos:// OffsetToScriptCodeIndexArray        d6c
cortarg.bos:// OffsetToScriptNameOffsetArray       d98
cortarg.bos:// OffsetToPieceNameOffsetArray        dc4
cortarg.bos:// OffsetToScriptCode                  2c
cortarg.bos:// OffsetToNameArray                   dec
cortarg.bos:// OffsetToFirstName                   dec
cortarg.bos:/*   1a6:*/ set ACTIVATION to 0;
cortarg.bos:/*   1ae:*/ set ACTIVATION to 1;
Binary file cortermite.cob matches
corthovr.bos:           set BUSY to 1;
corthovr.bos:           set BUSY to 0;
corthovr.bos:           set BUSY to 1;
corthovr.bos:           set BUSY to 0;
Binary file corthovr.cob matches
Binary file corthud.cob matches
cortoast.bos:   set ARMORED to 0;
cortoast.bos:   set ARMORED to 1;
Binary file cortoast.cob matches
Binary file cortrem.cob matches
cortron.bos:// OffsetToScriptCodeIndexArray        c08
cortron.bos:// OffsetToScriptNameOffsetArray       c4c
cortron.bos:// OffsetToPieceNameOffsetArray        c90
cortron.bos:// OffsetToScriptCode                  2c
cortron.bos:// OffsetToNameArray                   ca4
cortron.bos:// OffsetToFirstName                   ca4
Binary file cortron.cob matches
cortship.bos:           set BUSY to 1;
cortship.bos:           set BUSY to 0;
cortship.bos:           set BUSY to 1;
cortship.bos:           set BUSY to 0;
Binary file cortship.cob matches
coruwadves.bos:// OffsetToScriptCodeIndexArray        5b0
coruwadves.bos:// OffsetToScriptNameOffsetArray       5c0
coruwadves.bos:// OffsetToPieceNameOffsetArray        5d0
coruwadves.bos:// OffsetToScriptCode                  2c
coruwadves.bos:// OffsetToNameArray                   5e4
coruwadves.bos:// OffsetToFirstName                   5e4
coruwadvms.bos:// OffsetToScriptCodeIndexArray        420
coruwadvms.bos:// OffsetToScriptNameOffsetArray       430
coruwadvms.bos:// OffsetToPieceNameOffsetArray        440
coruwadvms.bos:// OffsetToScriptCode                  2c
coruwadvms.bos:// OffsetToNameArray                   448
coruwadvms.bos:// OffsetToFirstName                   448
coruwes.bos:// OffsetToScriptCodeIndexArray        2f4
coruwes.bos:// OffsetToScriptNameOffsetArray       304
coruwes.bos:// OffsetToPieceNameOffsetArray        314
coruwes.bos:// OffsetToScriptCode                  2c
coruwes.bos:// OffsetToNameArray                   31c
coruwes.bos:// OffsetToFirstName                   31c
coruwfus.bos:// OffsetToScriptCodeIndexArray        1f0
coruwfus.bos:// OffsetToScriptNameOffsetArray       200
coruwfus.bos:// OffsetToPieceNameOffsetArray        210
coruwfus.bos:// OffsetToScriptCode                  2c
coruwfus.bos:// OffsetToNameArray                   218
coruwfus.bos:// OffsetToFirstName                   218
coruwmme.bos:   set ARMORED to 0;
coruwmme.bos:   set ARMORED to 1;
coruwmme.bos:   set ARMORED to 1;
coruwms.bos:// OffsetToScriptCodeIndexArray        2ec
coruwms.bos:// OffsetToScriptNameOffsetArray       2fc
coruwms.bos:// OffsetToPieceNameOffsetArray        30c
coruwms.bos:// OffsetToScriptCode                  2c
coruwms.bos:// OffsetToNameArray                   310
coruwms.bos:// OffsetToFirstName                   310
Binary file corvoyr.cob matches
corvp.bos:      set YARD_OPEN to 1;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 1;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set YARD_OPEN to 0;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 0;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set INBUILDSTANCE to 1;
corvp.bos:      set INBUILDSTANCE to 0;
corvroc.bos:    set-signal-mask SIG_RESTORE;
Binary file corvroc.cob matches
corwin.bos:                     set ACTIVATION to 100;
corwin.bos:             set ACTIVATION to 0;
corwin.bos:             set ACTIVATION to 100;
Binary file corwin.cob matches
Binary file corwolv.cob matches
exptype.h:#define BUGGER_OFF          19  // set or get (ask other units to clea
r the area)
exptype.h:#define CHANGE_TARGET             98 // set, the value it's set to det
ermines the affected weapon
Binary file fgrep.exe matches
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 1;
meteor.bos:     set ARMORED to 0;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 0;
fgrep: New folder: Is a directory
roost.bos:      set ARMORED to 0;
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
standard_commands_gpl.h:#define BUGGER_OFF              19      // set or get (a
sk other units to clear the area)
yard.h: set YARD_OPEN to TRUE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to TRUE;
yard.h: set BUGGER_OFF to FALSE;
yard.h: set YARD_OPEN to FALSE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to FALSE;
yard.h: set BUGGER_OFF to FALSE;

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i -E set.*to.*; *
armada_advancedaircraftplant.bos:     set YARD_OPEN to 1;
armada_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
armada_advancedaircraftplant.bos:             set YARD_OPEN to 1;
armada_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
armada_advancedaircraftplant.bos:     set YARD_OPEN to 0;
armada_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
armada_advancedaircraftplant.bos:             set YARD_OPEN to 0;
armada_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
armada_advancedaircraftplant.bos:     set INBUILDSTANCE to 1;
armada_advancedaircraftplant.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 1;
armada_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionbot.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionbot.bos:     set INBUILDSTANCE to 1;
armada_advancedconstructionsub.bos:   set INBUILDSTANCE to 0;
armada_advancedconstructionsub.bos:   set INBUILDSTANCE to 1;
armada_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 1;
armada_advancedsolarcollector.bos:  set ARMORED to 0;
armada_advancedsolarcollector.bos:  set ARMORED to 1;
armada_advancedfusionreactor.bos:    set ARMORED to 1;
armada_advancedfusionreactor.bos:    set ARMORED to 0;
armada_advancedbotlab.bos:    set YARD_OPEN to 1;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 1;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set YARD_OPEN to 0;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 0;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 1;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 0;
armada_rattlesnake.bos:     set ARMORED to 0;
armada_rattlesnake.bos:     set ARMORED to 1;
armada_twilight.bos:    set ARMORED to 0;
armada_twilight.bos:    set ARMORED to 1;
armada_twilight.bos:    set ACTIVATION to 0;
armada_twilight.bos:    set ACTIVATION to 100;
armada_amphibiouscomplex.bos:   set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 1;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 0;
armada_pulsar.bos:    set ARMORED to 0;
armada_pulsar.bos:    set ARMORED to 1;
armada_aircraftplant.bos:      set YARD_OPEN to 1;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 1;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set YARD_OPEN to 0;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 0;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set INBUILDSTANCE to 1;
armada_aircraftplant.bos:      set INBUILDSTANCE to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 100;
armada_advancedshipyard.bos:     set YARD_OPEN to 1;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 1;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set YARD_OPEN to 0;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 0;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 1;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 0;
armada_advancedvehicleplant.bos:     set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 1;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 0;
armada_beaver.bos:  set INBUILDSTANCE to 0;
armada_beaver.bos:  set INBUILDSTANCE to 1;
armada_constructionaircraft.bos:      set INBUILDSTANCE to 1;
armada_constructionaircraft.bos:      set INBUILDSTANCE to 0;
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 0;
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 1;
armada_constructionbot.bos:      set INBUILDSTANCE to 0;
armada_constructionbot.bos:      set INBUILDSTANCE to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 1;
armada_commander.bos:     set INBUILDSTANCE to 1;
armada_commander.bos:     set INBUILDSTANCE to 0;
armada_commanderboss.bos: set INBUILDSTANCE to 1;
armada_commanderboss.bos: set INBUILDSTANCE to 0;
armada_consul.bos:  set INBUILDSTANCE to 1;
armada_consul.bos:  set INBUILDSTANCE to 0;
armada_constructionship.bos:      set INBUILDSTANCE to 0;
armada_constructionship.bos:      set INBUILDSTANCE to 1;
armada_constructionseaplane.bos:     set INBUILDSTANCE to 1;
armada_constructionseaplane.bos:     set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 1;
armada_decoyfusionreactor.bos:      set ARMORED to 1;
armada_decoyfusionreactor.bos:      set ARMORED to 0;
armada_epoch.bos:   set ARMORED to 1;
armada_butler.bos:    set INBUILDSTANCE to 0;
armada_butler.bos:    set INBUILDSTANCE to 1;
armada_ferret.bos:  set ARMORED to 0;
armada_ferret.bos:  set ARMORED to 1;
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 1;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 0;
armada_fusionreactor.bos:     set ARMORED to 1;
armada_fusionreactor.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 1;
armada_hovercraftplatform.bos:      set YARD_OPEN to 1;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 1;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set YARD_OPEN to 0;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 0;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 1;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 0;
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 100;
armada_botlab.bos:     set YARD_OPEN to 1;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 1;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set YARD_OPEN to 0;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 0;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set INBUILDSTANCE to 1;
armada_botlab.bos:     set INBUILDSTANCE to 0;
fgrep: armada_marauder_lus: Is a directory
armada_mercury.bos: set DELAY_UNIT_VAR to 0;
armada_ambassador.bos:    set ARMORED to 1;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:    set-signal-mask SIG_RESTORE;
armada_possum.bos:      set-signal-mask SIG_RESTORE;
armada_voyager.bos:     set INBUILDSTANCE to 1;
armada_voyager.bos:     set INBUILDSTANCE to 0;
armada_groundhog.bos:     set INBUILDSTANCE to 1;
armada_groundhog.bos:     set INBUILDSTANCE to 0;
armada_advancedenergyconverter.bos:    set ARMORED to 0; //Not needed as MM in BAR have no damage modif
yer tag set
armada_advancedenergyconverter.bos:    set ARMORED to 1;
armada_constructionturret.bos:  set INBUILDSTANCE to 1;
armada_constructionturret.bos:  set INBUILDSTANCE to 0;
armada_constructionturretplat.bos:      set INBUILDSTANCE to 1;
armada_constructionturretplat.bos:      set INBUILDSTANCE to 0;
armada_pitbull.bos:      set ARMORED to 0;
armada_pitbull.bos:      set ARMORED to 1;
armada_pitbull.bos:      set-signal-mask SIG_RESTORE;
armada_seaplaneplatform.bos:    set ARMORED to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
armada_seaplaneplatform.bos:    set YARD_OPEN to 1;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 1;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set YARD_OPEN to 0;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 0;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 1;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
armada_grimreaper.bos:    set INBUILDSTANCE to 1;
armada_grimreaper.bos:    set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 1;
armrectrt4.bos: set INBUILDSTANCE to 0;
armrectrt4.bos: set INBUILDSTANCE to 1;
armada_experimentalgantry.bos:   set YARD_OPEN to 1;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 1;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set YARD_OPEN to 0;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 0;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 1;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 0;
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 100;
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 1;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 0;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:   set ARMORED to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:   set ARMORED to 1;
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 100;
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:     set INBUILDSTANCE to 1;
armada_ghost.bos:     set INBUILDSTANCE to 0;
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:             set ACTIVATION to 100;
armada_shipyard.bos:      set YARD_OPEN to 1;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 1;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set YARD_OPEN to 0;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 0;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set INBUILDSTANCE to 1;
armada_shipyard.bos:      set INBUILDSTANCE to 0;
armada_pinpointer.bos:    set ARMORED to 1;
armada_pinpointer.bos:    set ACTIVATION to 0;
armada_pinpointer.bos:    set ACTIVATION to 1;
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           set BUSY to 0;
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           set BUSY to 0;
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           set BUSY to 0;
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           set BUSY to 0;
armada_vehicleplant.bos:      set ARMORED to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
armada_vehicleplant.bos:      set YARD_OPEN to 1;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 1;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set YARD_OPEN to 0;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 0;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set INBUILDSTANCE to 1;
armada_vehicleplant.bos:      set INBUILDSTANCE to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
armada_windturbine.bos:                     set ACTIVATION to 100;
armada_windturbine.bos:             set ACTIVATION to 0;
armada_windturbine.bos:             set ACTIVATION to 100;
coraap.bos:     set YARD_OPEN to 1;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 1;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set YARD_OPEN to 0;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 0;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set INBUILDSTANCE to 1;
coraap.bos:     set INBUILDSTANCE to 0;
coraca.bos:     set INBUILDSTANCE to 1;
coraca.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 1;
coracsub.bos:   set INBUILDSTANCE to 0;
coracsub.bos:   set INBUILDSTANCE to 1;
coracv.bos:     set INBUILDSTANCE to 0;
coracv.bos:     set INBUILDSTANCE to 1;
coradvsol.bos:/*    57:*/       set ARMORED to 0;
coradvsol.bos:/*    5f:*/       set ARMORED to 1;
coradvsol.bos:/*    7d:*/       set ACTIVATION to 0;
coradvsol.bos:/*    85:*/       set ACTIVATION to 100;
corafus.bos:/*    b0:*/ set ARMORED to 1;
corafus.bos:/*    ba:*/ set ARMORED to 0;
coramsub.bos:/*    87:*/        set YARD_OPEN to 1;
coramsub.bos:/*    92:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    9a:*/                set YARD_OPEN to 1;
coramsub.bos:/*    a1:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    a9:*/        set YARD_OPEN to 0;
coramsub.bos:/*    b3:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    bb:*/                set YARD_OPEN to 0;
coramsub.bos:/*    c2:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    d0:*/        set INBUILDSTANCE to 1;
coramsub.bos:/*    d8:*/        set INBUILDSTANCE to 0;
corap.bos:/*   17e:*/   set YARD_OPEN to 1;
corap.bos:/*   189:*/           set BUGGER_OFF to 1;
corap.bos:/*   191:*/           set YARD_OPEN to 1;
corap.bos:/*   198:*/   set BUGGER_OFF to 0;
corap.bos:/*   1a0:*/   set YARD_OPEN to 0;
corap.bos:/*   1aa:*/           set BUGGER_OFF to 1;
corap.bos:/*   1b2:*/           set YARD_OPEN to 0;
corap.bos:/*   1b9:*/   set BUGGER_OFF to 0;
corap.bos:/*   1d5:*/   set INBUILDSTANCE to 1;
corap.bos:/*   1dd:*/   set INBUILDSTANCE to 0;
corasy.bos:     set YARD_OPEN to 1;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 1;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set YARD_OPEN to 0;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 0;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set INBUILDSTANCE to 1;
corasy.bos:     set INBUILDSTANCE to 0;
corasye.bos:    set YARD_OPEN to 1;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 1;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set YARD_OPEN to 0;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 0;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set INBUILDSTANCE to 1;
corasye.bos:    set INBUILDSTANCE to 0;
coravp.bos:     set YARD_OPEN to 1;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 1;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set YARD_OPEN to 0;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 0;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set INBUILDSTANCE to 1;
coravp.bos:     set INBUILDSTANCE to 0;
corbhmth.bos:   set ACTIVATION to 100;
corbhmth.bos:   set ACTIVATION to 0;
corblackhy.bos: set ARMORED to 1;
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 0 - 1500 + get UNK
NOWN_UNIT_VALUE(82);
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 1500 + get UNKNOWN
_UNIT_VALUE(82);
corca.bos:      set INBUILDSTANCE to 1;
corca.bos:      set INBUILDSTANCE to 0;
corch.bos:      set INBUILDSTANCE to 0;
corch.bos:      set INBUILDSTANCE to 1;
corck.bos:      set INBUILDSTANCE to 0;
corck.bos:      set INBUILDSTANCE to 1;
cortex_commander.bos:     set INBUILDSTANCE to 1;
cortex_commander.bos:     set INBUILDSTANCE to 0;
cortex_commanderboss.bos: set INBUILDSTANCE to 1;
cortex_commanderboss.bos: set INBUILDSTANCE to 0;
corcs.bos:      set INBUILDSTANCE to 1;
corcs.bos:      set INBUILDSTANCE to 0;
corcsa.bos:     set INBUILDSTANCE to 1;
corcsa.bos:     set INBUILDSTANCE to 0;
corcv.bos:      set INBUILDSTANCE to 0;
corcv.bos:      set INBUILDSTANCE to 1;
cordoom.bos:    set ARMORED to 0;
cordoom.bos:    set ARMORED to 1;
corerad.bos:            set CHANGE_TARGET to 1;
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 100;
corfast.bos:    set INBUILDSTANCE to 1;
corfast.bos:    set INBUILDSTANCE to 0;
corfhp.bos:/*   162:*/  set YARD_OPEN to 1;
corfhp.bos:/*   16d:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   175:*/          set YARD_OPEN to 1;
corfhp.bos:/*   17c:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   184:*/  set YARD_OPEN to 0;
corfhp.bos:/*   18e:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   196:*/          set YARD_OPEN to 0;
corfhp.bos:/*   19d:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   1bb:*/  set INBUILDSTANCE to 1;
corfhp.bos:/*   1c3:*/  set INBUILDSTANCE to 0;
corfmkr.bos:                    set ACTIVATION to 1;
corfmkr.bos:                    set ACTIVATION to 0;
corgant.bos:    set YARD_OPEN to 1;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 1;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set YARD_OPEN to 0;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 0;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set INBUILDSTANCE to 1;
corgant.bos:    set INBUILDSTANCE to 0;
corhp.bos:/*   162:*/   set YARD_OPEN to 1;
corhp.bos:/*   16d:*/           set BUGGER_OFF to 1;
corhp.bos:/*   175:*/           set YARD_OPEN to 1;
corhp.bos:/*   17c:*/   set BUGGER_OFF to 0;
corhp.bos:/*   184:*/   set YARD_OPEN to 0;
corhp.bos:/*   18e:*/           set BUGGER_OFF to 1;
corhp.bos:/*   196:*/           set YARD_OPEN to 0;
corhp.bos:/*   19d:*/   set BUGGER_OFF to 0;
corhp.bos:/*   1bb:*/   set INBUILDSTANCE to 1;
corhp.bos:/*   1c3:*/   set INBUILDSTANCE to 0;
corintr.bos:    set ARMORED to 1;
corintr.bos:            set BUSY to 1;
corintr.bos:            set BUSY to 0;
corintr.bos:    set BUSY to 1;
corintr.bos:    set BUSY to 0;
corjugg.bos:    set CHANGE_TARGET to 2;
corjugg.bos:    set CHANGE_TARGET to 3;
corjugg.bos:    set CHANGE_TARGET to 4;
corkorg.bos:    set ARMORED to 1;
corkorg.bos:    set-signal-mask SIG_FOOTSTOMP_L;
corkorg.bos:    set-signal-mask SIG_FOOTSTOMP_R;
cormakr.bos:                            set ACTIVATION to 1;
cormakr.bos:                            set ACTIVATION to 0;
cormando.bos:   set INBUILDSTANCE to 0;
cormando.bos:   set INBUILDSTANCE to 1;
cormaw.bos:     set ARMORED to 0;
cormaw.bos:     set ARMORED to 1;
cormex.bos:     set ARMORED to 0;
cormex.bos:     set ARMORED to 1;
cormexp.bos:    set ARMORED to 0;
cormexp.bos:    set ARMORED to 1;
cormexp.bos:    set ACTIVATION to 100;
cormexp.bos:            set ACTIVATION to 0;
cormexp.bos:    set ARMORED to 0;
cormh.bos:      set-signal-mask SIG_RESTORE;
cormls.bos:     set INBUILDSTANCE to 1;
cormls.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 1;
cormmkr.bos:    set ARMORED to 0;  //Not needed as MM in BAR have no damage modi
fyer tag set
cormmkr.bos:    set ARMORED to 1;
cormoho.bos:    set ARMORED to 0;
cormoho.bos:    set ARMORED to 1;
cormoho.bos:    set ARMORED to 1;
cormuskrat.bos: set INBUILDSTANCE to 1;
cormuskrat.bos: set INBUILDSTANCE to 0;
cormuskrat.bos: set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 0;
cornanotcplat.bos:      set INBUILDSTANCE to 1;
cornanotcplat.bos:      set INBUILDSTANCE to 0;
cornecro.bos:   set INBUILDSTANCE to 0;
cornecro.bos:   set INBUILDSTANCE to 1;
corplat.bos:    set ARMORED to 0;
corplat.bos:    set ARMORED to 1;
corplat.bos:    set YARD_OPEN to 1;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 1;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set YARD_OPEN to 0;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 0;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set INBUILDSTANCE to 1;
corplat.bos:    set INBUILDSTANCE to 0;
corplat.bos:    set ARMORED to 1;
correcl.bos:    set INBUILDSTANCE to 1;
correcl.bos:    set INBUILDSTANCE to 0;
corshiva.bos:   set ARMORED to 1;
corshiva.bos:   set ARMORED to 0;
corshiva.bos:   set ARMORED to 1;
corshroud.bos:/*    80:*/               set ACTIVATION to 0;
corshroud.bos:/*   138:*/               set ACTIVATION to 0;
corshroud.bos:/*   144:*/               set ACTIVATION to 100;
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 100;
corsolar.bos:   set YARD_OPEN to 1;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 1;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set YARD_OPEN to 0;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 0;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set ACTIVATION to 100;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:   set ARMORED to 0;
corsolar.bos:   set ARMORED to 1;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:           set ACTIVATION to 100;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 100;
corspy.bos:     set INBUILDSTANCE to 1;
corspy.bos:     set INBUILDSTANCE to 0;
corsy.bos:      set YARD_OPEN to 1;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 1;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set YARD_OPEN to 0;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 0;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set INBUILDSTANCE to 1;
corsy.bos:      set INBUILDSTANCE to 0;
cortarg.bos:/*   1a6:*/ set ACTIVATION to 0;
cortarg.bos:/*   1ae:*/ set ACTIVATION to 1;
corthovr.bos:           set BUSY to 1;
corthovr.bos:           set BUSY to 0;
corthovr.bos:           set BUSY to 1;
corthovr.bos:           set BUSY to 0;
cortoast.bos:   set ARMORED to 0;
cortoast.bos:   set ARMORED to 1;
cortship.bos:           set BUSY to 1;
cortship.bos:           set BUSY to 0;
cortship.bos:           set BUSY to 1;
cortship.bos:           set BUSY to 0;
coruwmme.bos:   set ARMORED to 0;
coruwmme.bos:   set ARMORED to 1;
coruwmme.bos:   set ARMORED to 1;
corvp.bos:      set YARD_OPEN to 1;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 1;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set YARD_OPEN to 0;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 0;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set INBUILDSTANCE to 1;
corvp.bos:      set INBUILDSTANCE to 0;
corvroc.bos:    set-signal-mask SIG_RESTORE;
corwin.bos:                     set ACTIVATION to 100;
corwin.bos:             set ACTIVATION to 0;
corwin.bos:             set ACTIVATION to 100;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 1;
meteor.bos:     set ARMORED to 0;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 0;
fgrep: New folder: Is a directory
roost.bos:      set ARMORED to 0;
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
yard.h: set YARD_OPEN to TRUE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to TRUE;
yard.h: set BUGGER_OFF to FALSE;
yard.h: set YARD_OPEN to FALSE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to FALSE;
yard.h: set BUGGER_OFF to FALSE;

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i -E set.+to *
Binary file armada_archangel.cob matches
armada_advancedaircraftplant.bos:     set YARD_OPEN to 1;
armada_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
armada_advancedaircraftplant.bos:             set YARD_OPEN to 1;
armada_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
armada_advancedaircraftplant.bos:     set YARD_OPEN to 0;
armada_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
armada_advancedaircraftplant.bos:             set YARD_OPEN to 0;
armada_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
armada_advancedaircraftplant.bos:     set INBUILDSTANCE to 1;
armada_advancedaircraftplant.bos:     set INBUILDSTANCE to 0;
Binary file armada_dragonslayer.cob matches
armada_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 1;
armada_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionbot.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionbot.bos:     set INBUILDSTANCE to 1;
armada_advancedconstructionsub.bos:   set INBUILDSTANCE to 0;
armada_advancedconstructionsub.bos:   set INBUILDSTANCE to 1;
armada_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 1;
Binary file armada_advancedconstructionvehicle.cob matches
armada_advancedsolarcollector.bos:  set ARMORED to 0;
armada_advancedsolarcollector.bos:  set ARMORED to 1;
armada_advancedfusionreactor.bos:    set ARMORED to 1;
armada_advancedfusionreactor.bos:    set ARMORED to 0;
Binary file armada_sweeper.cob matches
armada_advancedbotlab.bos:    set YARD_OPEN to 1;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 1;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set YARD_OPEN to 0;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 0;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 1;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 0;
armada_rattlesnake.bos:     set ARMORED to 0;
armada_rattlesnake.bos:     set ARMORED to 1;
Binary file armada_rattlesnake.cob matches
armada_twilight.bos:    set ARMORED to 0;
armada_twilight.bos:    set ARMORED to 1;
armada_twilight.bos:    set ACTIVATION to 0;
armada_twilight.bos:    set ACTIVATION to 100;
Binary file armada_amphibiousbot.cob matches
armada_amphibiouscomplex.bos:   set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 1;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 0;
Binary file armada_crocodile.cob matches
armada_pulsar.bos:    set ARMORED to 0;
armada_pulsar.bos:    set ARMORED to 1;
armada_aircraftplant.bos:      set YARD_OPEN to 1;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 1;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set YARD_OPEN to 0;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 0;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set INBUILDSTANCE to 1;
armada_aircraftplant.bos:      set INBUILDSTANCE to 0;
Binary file armada_shellshocker.cob matches
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 100;
Binary file armada_radarjammerbot.cob matches
armada_advancedshipyard.bos:     set YARD_OPEN to 1;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 1;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set YARD_OPEN to 0;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 0;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 1;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 0;
Binary file armada_moray.cob matches
armada_advancedvehicleplant.bos:     set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 1;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 0;
Binary file armada_titan.cob matches
Binary file armada_dreadnought.cob matches
armada_beaver.bos:  set INBUILDSTANCE to 0;
armada_beaver.bos:  set INBUILDSTANCE to 1;
Binary file armada_roughneck.cob matches
Binary file armada_bull.cob matches
armada_constructionaircraft.bos:      set INBUILDSTANCE to 1;
armada_constructionaircraft.bos:      set INBUILDSTANCE to 0;
Binary file armada_haven.cob matches
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 0;
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 1;
Binary file armada_constructionhovercraft.cob matches
Binary file armada_chainsaw.cob matches
armada_constructionbot.bos:      set INBUILDSTANCE to 0;
armada_constructionbot.bos:      set INBUILDSTANCE to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 1;
Binary file armada_dragonsclaw.cob matches
armada_commander.bos:     set INBUILDSTANCE to 1;
armada_commander.bos:     set INBUILDSTANCE to 0;
armada_commanderboss.bos: set INBUILDSTANCE to 1;
armada_commanderboss.bos: set INBUILDSTANCE to 0;
armada_consul.bos:  set INBUILDSTANCE to 1;
armada_consul.bos:  set INBUILDSTANCE to 0;
Binary file armada_turtle.cob matches
Binary file armada_paladin.cob matches
armada_constructionship.bos:      set INBUILDSTANCE to 0;
armada_constructionship.bos:      set INBUILDSTANCE to 1;
Binary file armada_constructionship.cob matches
armada_constructionseaplane.bos:     set INBUILDSTANCE to 1;
armada_constructionseaplane.bos:     set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 1;
Binary file armada_dolphin.cob matches
armada_decoyfusionreactor.bos:      set ARMORED to 1;
armada_decoyfusionreactor.bos:      set ARMORED to 0;
Binary file armada_paralyzer.cob matches
armada_epoch.bos:   set ARMORED to 1;
Binary file armada_epoch.cob matches
armada_butler.bos:    set INBUILDSTANCE to 0;
armada_butler.bos:    set INBUILDSTANCE to 1;
Binary file armada_sprinter.cob matches
Binary file armada_rover.cob matches
Binary file armada_fatboy.cob matches
armada_ferret.bos:  set ARMORED to 0;
armada_ferret.bos:  set ARMORED to 1;
Binary file armada_ferret.cob matches
Binary file armada_navalarbalest.cob matches
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 1;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 0;
Binary file armada_hound.cob matches
Binary file armada_arbalest.cob matches
Binary file armada_blitz.cob matches
Binary file armada_tick.cob matches
Binary file armada_navalnettle.cob matches
armada_fusionreactor.bos:     set ARMORED to 1;
armada_fusionreactor.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 1;
Binary file armada_gunplatform.cob matches
Binary file armada_gremlin.cob matches
Binary file armada_mace.cob matches
armada_hovercraftplatform.bos:      set YARD_OPEN to 1;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 1;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set YARD_OPEN to 0;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 0;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 1;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 0;
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 100;
Binary file armada_janus.cob matches
Binary file armada_crossbow.cob matches
Binary file armada_juno.cob matches
Binary file armada_banshee.cob matches
armada_botlab.bos:     set YARD_OPEN to 1;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 1;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set YARD_OPEN to 0;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 0;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set INBUILDSTANCE to 1;
armada_botlab.bos:     set INBUILDSTANCE to 0;
Binary file armada_jaguar.cob matches
Binary file armada_lunkhead.cob matches
Binary file armada_starlight.cob matches
Binary file armada_marauder.cob matches
fgrep: armada_marauder_lus: Is a directory
Binary file armada_compass.cob matches
Binary file armada_mauser.cob matches
Binary file armada_gunslinger.cob matches
armada_mercury.bos: set DELAY_UNIT_VAR to 0;
Binary file armada_mercury.cob matches
armada_ambassador.bos:    set ARMORED to 1;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:    set-signal-mask SIG_RESTORE;
Binary file armada_ambassador.cob matches
armada_possum.bos:      set-signal-mask SIG_RESTORE;
Binary file armada_possum.cob matches
armada_voyager.bos:     set INBUILDSTANCE to 1;
armada_voyager.bos:     set INBUILDSTANCE to 0;
Binary file armada_voyager.cob matches
armada_groundhog.bos:     set INBUILDSTANCE to 1;
armada_groundhog.bos:     set INBUILDSTANCE to 0;
armada_advancedenergyconverter.bos:    set ARMORED to 0; //Not needed as MM in BAR have no damage modif
yer tag set
armada_advancedenergyconverter.bos:    set ARMORED to 1;
Binary file armada_longbow.cob matches
armada_constructionturret.bos:  set INBUILDSTANCE to 1;
armada_constructionturret.bos:  set INBUILDSTANCE to 0;
Binary file armada_constructionturret.cob matches
armada_constructionturretplat.bos:      set INBUILDSTANCE to 1;
armada_constructionturretplat.bos:      set INBUILDSTANCE to 0;
Binary file armada_constructionturretplat.cob matches
armada_pitbull.bos:      set ARMORED to 0;
armada_pitbull.bos:      set ARMORED to 1;
armada_pitbull.bos:      set-signal-mask SIG_RESTORE;
Binary file armada_pitbull.cob matches
Binary file armada_pincer.cob matches
armada_seaplaneplatform.bos:    set ARMORED to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
armada_seaplaneplatform.bos:    set YARD_OPEN to 1;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 1;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set YARD_OPEN to 0;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 0;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 1;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
Binary file armada_ellysaw.cob matches
Binary file armada_skater.cob matches
Binary file armada_harpoon2.cob matches
armada_pawn.bos:              bAnimate = TRUE; // this sets animation started, so that
 StopAnimate knows that it should restore state quickly
Binary file armada_pawn.cob matches
armada_grimreaper.bos:    set INBUILDSTANCE to 1;
armada_grimreaper.bos:    set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 1;
armrectrt4.bos: set INBUILDSTANCE to 0;
armrectrt4.bos: set INBUILDSTANCE to 1;
Binary file armada_nettle.cob matches
Binary file armada_rocketeer.cob matches
Binary file armada_corsair.cob matches
Binary file armada_sabre.cob matches
Binary file armada_whistler.cob matches
Binary file armada_tsunami.cob matches
Binary file armada_umbrella.cob matches
Binary file armada_serpent.cob matches
Binary file armada_seeker.cob matches
armada_experimentalgantry.bos:   set YARD_OPEN to 1;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 1;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set YARD_OPEN to 0;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 0;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 1;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 0;
Binary file armada_armageddon.cob matches
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 100;
Binary file armada_bermuda.cob matches
Binary file armada_sharpshooter.cob matches
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 1;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 0;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:   set ARMORED to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:   set ARMORED to 1;
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 100;
Binary file armada_webber.cob matches
Binary file armada_recluse.cob matches
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:     set INBUILDSTANCE to 1;
armada_ghost.bos:     set INBUILDSTANCE to 0;
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:             set ACTIVATION to 100;
Binary file armada_stout.cob matches
Binary file armada_eel.cob matches
armada_shipyard.bos:      set YARD_OPEN to 1;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 1;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set YARD_OPEN to 0;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 0;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set INBUILDSTANCE to 1;
armada_shipyard.bos:      set INBUILDSTANCE to 0;
armada_pinpointer.bos:    set ARMORED to 1;
armada_pinpointer.bos:    set ACTIVATION to 0;
armada_pinpointer.bos:    set ACTIVATION to 1;
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           set BUSY to 0;
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           set BUSY to 0;
Binary file armada_bearer.cob matches
Binary file armada_harpoon.cob matches
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           set BUSY to 0;
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           set BUSY to 0;
Binary file armada_convoy.cob matches
Binary file armada_vanguard.cob matches
armada_vehicleplant.bos:      set ARMORED to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
armada_vehicleplant.bos:      set YARD_OPEN to 1;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 1;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set YARD_OPEN to 0;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 0;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set INBUILDSTANCE to 1;
armada_vehicleplant.bos:      set INBUILDSTANCE to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
Binary file armada_centurion.cob matches
armada_windturbine.bos:                     set ACTIVATION to 100;
armada_windturbine.bos:             set ACTIVATION to 0;
armada_windturbine.bos:             set ACTIVATION to 100;
Binary file armada_windturbine.cob matches
Binary file armada_shredder.cob matches
Binary file armada_welder.cob matches
Binary file cob_file.pyc matches
constants.h:#define BUGGER_OFF          19  // set or get (ask other units to cl
ear the area)
constants.h:#define CHANGE_TARGET             98 // set, the value it's set to d
etermines the affected weapon
coraap.bos:     set YARD_OPEN to 1;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 1;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set YARD_OPEN to 0;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 0;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set INBUILDSTANCE to 1;
coraap.bos:     set INBUILDSTANCE to 0;
coraca.bos:     set INBUILDSTANCE to 1;
coraca.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 1;
coracsub.bos:   set INBUILDSTANCE to 0;
coracsub.bos:   set INBUILDSTANCE to 1;
coracv.bos:     set INBUILDSTANCE to 0;
coracv.bos:     set INBUILDSTANCE to 1;
Binary file coracv.cob matches
coradvsol.bos:/*    57:*/       set ARMORED to 0;
coradvsol.bos:/*    5f:*/       set ARMORED to 1;
coradvsol.bos:/*    7d:*/       set ACTIVATION to 0;
coradvsol.bos:/*    85:*/       set ACTIVATION to 100;
corafus.bos:/*    b0:*/ set ARMORED to 1;
corafus.bos:/*    ba:*/ set ARMORED to 0;
Binary file corah.cob matches
Binary file corak.cob matches
Binary file coramph.cob matches
coramsub.bos:/*    87:*/        set YARD_OPEN to 1;
coramsub.bos:/*    92:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    9a:*/                set YARD_OPEN to 1;
coramsub.bos:/*    a1:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    a9:*/        set YARD_OPEN to 0;
coramsub.bos:/*    b3:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    bb:*/                set YARD_OPEN to 0;
coramsub.bos:/*    c2:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    d0:*/        set INBUILDSTANCE to 1;
coramsub.bos:/*    d8:*/        set INBUILDSTANCE to 0;
corap.bos:/*   17e:*/   set YARD_OPEN to 1;
corap.bos:/*   189:*/           set BUGGER_OFF to 1;
corap.bos:/*   191:*/           set YARD_OPEN to 1;
corap.bos:/*   198:*/   set BUGGER_OFF to 0;
corap.bos:/*   1a0:*/   set YARD_OPEN to 0;
corap.bos:/*   1aa:*/           set BUGGER_OFF to 1;
corap.bos:/*   1b2:*/           set YARD_OPEN to 0;
corap.bos:/*   1b9:*/   set BUGGER_OFF to 0;
corap.bos:/*   1d5:*/   set INBUILDSTANCE to 1;
corap.bos:/*   1dd:*/   set INBUILDSTANCE to 0;
Binary file corarch.cob matches
corasy.bos:     set YARD_OPEN to 1;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 1;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set YARD_OPEN to 0;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 0;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set INBUILDSTANCE to 1;
corasy.bos:     set INBUILDSTANCE to 0;
corasye.bos:    set YARD_OPEN to 1;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 1;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set YARD_OPEN to 0;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 0;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set INBUILDSTANCE to 1;
corasye.bos:    set INBUILDSTANCE to 0;
coravp.bos:     set YARD_OPEN to 1;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 1;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set YARD_OPEN to 0;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 0;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set INBUILDSTANCE to 1;
coravp.bos:     set INBUILDSTANCE to 0;
Binary file corban.cob matches
Binary file corbats.cob matches
corbhmth.bos:   set ACTIVATION to 100;
corbhmth.bos:   set ACTIVATION to 0;
corblackhy.bos: set ARMORED to 1;
Binary file corblackhy.cob matches
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 0 - 1500 + get UNK
NOWN_UNIT_VALUE(82);
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 1500 + get UNKNOWN
_UNIT_VALUE(82);
corca.bos:      set INBUILDSTANCE to 1;
corca.bos:      set INBUILDSTANCE to 0;
Binary file corcan.cob matches
Binary file corcarry.cob matches
Binary file corcat.cob matches
corch.bos:      set INBUILDSTANCE to 0;
corch.bos:      set INBUILDSTANCE to 1;
Binary file corch.cob matches
corck.bos:      set INBUILDSTANCE to 0;
corck.bos:      set INBUILDSTANCE to 1;
cortex_commander.bos:     set INBUILDSTANCE to 1;
cortex_commander.bos:     set INBUILDSTANCE to 0;
cortex_commanderboss.bos: set INBUILDSTANCE to 1;
cortex_commanderboss.bos: set INBUILDSTANCE to 0;
Binary file corcrash.cob matches
Binary file corcrus.cob matches
Binary file corcrw.cob matches
corcs.bos:      set INBUILDSTANCE to 1;
corcs.bos:      set INBUILDSTANCE to 0;
corcsa.bos:     set INBUILDSTANCE to 1;
corcsa.bos:     set INBUILDSTANCE to 0;
Binary file corcut.cob matches
corcv.bos:      set INBUILDSTANCE to 0;
corcv.bos:      set INBUILDSTANCE to 1;
cordoom.bos:    set ARMORED to 0;
cordoom.bos:    set ARMORED to 1;
Binary file corenaa.cob matches
corerad.bos:            set CHANGE_TARGET to 1;
Binary file corerad.cob matches
Binary file coresupp.cob matches
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 100;
Binary file corexp.cob matches
corfast.bos:    set INBUILDSTANCE to 1;
corfast.bos:    set INBUILDSTANCE to 0;
Binary file corfav.cob matches
corfhp.bos:/*   162:*/  set YARD_OPEN to 1;
corfhp.bos:/*   16d:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   175:*/          set YARD_OPEN to 1;
corfhp.bos:/*   17c:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   184:*/  set YARD_OPEN to 0;
corfhp.bos:/*   18e:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   196:*/          set YARD_OPEN to 0;
corfhp.bos:/*   19d:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   1bb:*/  set INBUILDSTANCE to 1;
corfhp.bos:/*   1c3:*/  set INBUILDSTANCE to 0;
Binary file corflak.cob matches
corfmkr.bos:                    set ACTIVATION to 1;
corfmkr.bos:                    set ACTIVATION to 0;
Binary file corfrock.cob matches
Binary file corfrt.cob matches
corgant.bos:    set YARD_OPEN to 1;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 1;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set YARD_OPEN to 0;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 0;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set INBUILDSTANCE to 1;
corgant.bos:    set INBUILDSTANCE to 0;
Binary file corgarp.cob matches
Binary file corgator.cob matches
Binary file corgol.cob matches
Binary file corhal.cob matches
corhp.bos:/*   162:*/   set YARD_OPEN to 1;
corhp.bos:/*   16d:*/           set BUGGER_OFF to 1;
corhp.bos:/*   175:*/           set YARD_OPEN to 1;
corhp.bos:/*   17c:*/   set BUGGER_OFF to 0;
corhp.bos:/*   184:*/   set YARD_OPEN to 0;
corhp.bos:/*   18e:*/           set BUGGER_OFF to 1;
corhp.bos:/*   196:*/           set YARD_OPEN to 0;
corhp.bos:/*   19d:*/   set BUGGER_OFF to 0;
corhp.bos:/*   1bb:*/   set INBUILDSTANCE to 1;
corhp.bos:/*   1c3:*/   set INBUILDSTANCE to 0;
Binary file corhrk.cob matches
corintr.bos:    set ARMORED to 1;
corintr.bos:            set BUSY to 1;
corintr.bos:            set BUSY to 0;
corintr.bos:    set BUSY to 1;
corintr.bos:    set BUSY to 0;
corjugg.bos:    set CHANGE_TARGET to 2;
corjugg.bos:    set CHANGE_TARGET to 3;
corjugg.bos:    set CHANGE_TARGET to 4;
Binary file corjugg.cob matches
corjugg.lua_old:        SetSignalMask( SIG_stop )
Binary file corjuno.cob matches
corkarg.lua_old:        SetSignalMask(SIG_RESTORE)
corkorg.bos:    set ARMORED to 1;
corkorg.bos:    set-signal-mask SIG_FOOTSTOMP_L;
corkorg.bos:    set-signal-mask SIG_FOOTSTOMP_R;
Binary file corkorg.cob matches
Binary file corlevlr.cob matches
Binary file cormabm.cob matches
cormakr.bos:                            set ACTIVATION to 1;
cormakr.bos:                            set ACTIVATION to 0;
cormando.bos:   set INBUILDSTANCE to 0;
cormando.bos:   set INBUILDSTANCE to 1;
Binary file cormart.cob matches
cormaw.bos:     set ARMORED to 0;
cormaw.bos:     set ARMORED to 1;
Binary file cormaw.cob matches
cormex.bos:     set ARMORED to 0;
cormex.bos:     set ARMORED to 1;
cormexp.bos:    set ARMORED to 0;
cormexp.bos:    set ARMORED to 1;
cormexp.bos:    set ACTIVATION to 100;
cormexp.bos:            set ACTIVATION to 0;
cormexp.bos:    set ARMORED to 0;
Binary file cormexp.cob matches
cormh.bos:      set-signal-mask SIG_RESTORE;
Binary file cormh.cob matches
Binary file cormist.cob matches
cormls.bos:     set INBUILDSTANCE to 1;
cormls.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 1;
cormmkr.bos:    set ARMORED to 0;  //Not needed as MM in BAR have no damage modi
fyer tag set
cormmkr.bos:    set ARMORED to 1;
cormoho.bos:    set ARMORED to 0;
cormoho.bos:    set ARMORED to 1;
cormoho.bos:    set ARMORED to 1;
Binary file cormort.cob matches
Binary file cormship.cob matches
cormuskrat.bos: set INBUILDSTANCE to 1;
cormuskrat.bos: set INBUILDSTANCE to 0;
cormuskrat.bos: set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 0;
Binary file cornanotc.cob matches
cornanotcplat.bos:      set INBUILDSTANCE to 1;
cornanotcplat.bos:      set INBUILDSTANCE to 0;
Binary file cornanotcplat.cob matches
cornecro.bos:   set INBUILDSTANCE to 0;
cornecro.bos:   set INBUILDSTANCE to 1;
Binary file corparrow.cob matches
corplat.bos:    set ARMORED to 0;
corplat.bos:    set ARMORED to 1;
corplat.bos:    set YARD_OPEN to 1;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 1;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set YARD_OPEN to 0;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 0;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set INBUILDSTANCE to 1;
corplat.bos:    set INBUILDSTANCE to 0;
corplat.bos:    set ARMORED to 1;
Binary file corpship.cob matches
Binary file corpt.cob matches
Binary file corpyro.cob matches
Binary file corraid.cob matches
Binary file correap.cob matches
correcl.bos:    set INBUILDSTANCE to 1;
correcl.bos:    set INBUILDSTANCE to 0;
Binary file corrl.cob matches
Binary file corroy.cob matches
Binary file corsb.cob matches
Binary file corscreamer.cob matches
Binary file corseal.cob matches
Binary file corsent.cob matches
Binary file corsh.cob matches
corshiva.bos:   set ARMORED to 1;
corshiva.bos:   set ARMORED to 0;
corshiva.bos:   set ARMORED to 1;
Binary file corshiva.cob matches
corshiva.lua_old:       SetSignalMask( SIG_stop )
corshiva.lua_old:       SetSignalMask( SIG_stop )
corshroud.bos:/*    80:*/               set ACTIVATION to 0;
corshroud.bos:/*   138:*/               set ACTIVATION to 0;
corshroud.bos:/*   144:*/               set ACTIVATION to 100;
Binary file corsilo.cob matches
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 100;
Binary file corsnap.cob matches
Binary file corsok.cob matches
corsolar.bos:   set YARD_OPEN to 1;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 1;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set YARD_OPEN to 0;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 0;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set ACTIVATION to 100;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:   set ARMORED to 0;
corsolar.bos:   set ARMORED to 1;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:           set ACTIVATION to 100;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 100;
Binary file corspec.cob matches
corspy.bos:     set INBUILDSTANCE to 1;
corspy.bos:     set INBUILDSTANCE to 0;
Binary file corstorm.cob matches
Binary file corsumo.cob matches
corsumo.lua_old:    SetSignalMask(SIG_RESTORE)
corsy.bos:      set YARD_OPEN to 1;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 1;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set YARD_OPEN to 0;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 0;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set INBUILDSTANCE to 1;
corsy.bos:      set INBUILDSTANCE to 0;
cortarg.bos:/*   1a6:*/ set ACTIVATION to 0;
cortarg.bos:/*   1ae:*/ set ACTIVATION to 1;
Binary file cortermite.cob matches
corthovr.bos:           set BUSY to 1;
corthovr.bos:           set BUSY to 0;
corthovr.bos:           set BUSY to 1;
corthovr.bos:           set BUSY to 0;
Binary file corthovr.cob matches
Binary file corthud.cob matches
cortoast.bos:   set ARMORED to 0;
cortoast.bos:   set ARMORED to 1;
Binary file cortoast.cob matches
Binary file cortrem.cob matches
Binary file cortron.cob matches
cortship.bos:           set BUSY to 1;
cortship.bos:           set BUSY to 0;
cortship.bos:           set BUSY to 1;
cortship.bos:           set BUSY to 0;
Binary file cortship.cob matches
coruwmme.bos:   set ARMORED to 0;
coruwmme.bos:   set ARMORED to 1;
coruwmme.bos:   set ARMORED to 1;
Binary file corvoyr.cob matches
corvp.bos:      set YARD_OPEN to 1;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 1;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set YARD_OPEN to 0;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 0;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set INBUILDSTANCE to 1;
corvp.bos:      set INBUILDSTANCE to 0;
corvroc.bos:    set-signal-mask SIG_RESTORE;
Binary file corvroc.cob matches
corwin.bos:                     set ACTIVATION to 100;
corwin.bos:             set ACTIVATION to 0;
corwin.bos:             set ACTIVATION to 100;
Binary file corwin.cob matches
Binary file corwolv.cob matches
exptype.h:#define BUGGER_OFF          19  // set or get (ask other units to clea
r the area)
exptype.h:#define CHANGE_TARGET             98 // set, the value it's set to det
ermines the affected weapon
Binary file fgrep.exe matches
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 1;
meteor.bos:     set ARMORED to 0;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 0;
fgrep: New folder: Is a directory
roost.bos:      set ARMORED to 0;
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
standard_commands_gpl.h:#define BUGGER_OFF              19      // set or get (a
sk other units to clear the area)
yard.h: set YARD_OPEN to TRUE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to TRUE;
yard.h: set BUGGER_OFF to FALSE;
yard.h: set YARD_OPEN to FALSE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to FALSE;
yard.h: set BUGGER_OFF to FALSE;

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i -E set.+to * > COB_SET.txt
fgrep: armada_marauder_lus: Is a directory
^C
C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep --help
Usage: fgrep [OPTION]... PATTERN [FILE] ...
Search for PATTERN in each FILE or standard input.

Regexp selection and interpretation:
  -E, --extended-regexp     PATTERN is an extended regular expression
  -F, --fixed-regexp        PATTERN is a fixed string separated by newlines
  -G, --basic-regexp        PATTERN is a basic regular expression
  -e, --regexp=PATTERN      use PATTERN as a regular expression
  -f, --file=FILE           obtain PATTERN from FILE
  -i, --ignore-case         ignore case distinctions
  -w, --word-regexp         force PATTERN to match only whole words
  -x, --line-regexp         force PATTERN to match only whole lines

Miscellaneous:
  -s, --no-messages         suppress error messages
  -v, --revert-match        select non-matching lines
  -V, --version             print version information and exit
      --help                display this help and exit

Output control:
  -b, --byte-offset         print the byte offset with output lines
  -n, --line-number         print line number with output lines
  -H, --with-filename       print the filename for each match
  -h, --no-filename         suppress the prefixing filename on output
  -q, --quiet, --silent     suppress all normal output
  -a, --text                do not suppress binary output
  -d, --directories=ACTION  how to handle directories
                            ACTION is 'read', 'recurse', or 'skip'.
  -r, --recursive           equivalent to --directories=recurse.
  -L, --files-without-match only print FILE names containing no match
  -l, --files-with-matches  only print FILE names containing matches
  -c, --count               only print a count of matching lines per FILE

Context control:
  -B, --before-context=NUM  print NUM lines of leading context
  -A, --after-context=NUM   print NUM lines of trailing context
  -C, --context[=NUM]       print NUM (default 2) lines of output context
                            unless overriden by -A or -B
  -NUM                      same as --context=NUM
  -U, --binary              do not strip CR characters at EOL (MSDOS)
  -u, --unix-byte-offsets   report offsets as if CRs were not there (MSDOS)

If no -[GEF], then `egrep' assumes -E, `fgrep' -F, else -G.
With no FILE, or when FILE is -, read standard input. If less than
two FILEs given, assume -h. Exit with 0 if matches, with 1 if none.
Exit with 2 if syntax errors or system errors.

Report bugs to <bug-gnu-utils@gnu.org>.

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i -E set.+to *
Binary file armada_archangel.cob matches
armada_advancedaircraftplant.bos:     set YARD_OPEN to 1;
armada_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
armada_advancedaircraftplant.bos:             set YARD_OPEN to 1;
armada_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
armada_advancedaircraftplant.bos:     set YARD_OPEN to 0;
armada_advancedaircraftplant.bos:             set BUGGER_OFF to 1;
armada_advancedaircraftplant.bos:             set YARD_OPEN to 0;
armada_advancedaircraftplant.bos:     set BUGGER_OFF to 0;
armada_advancedaircraftplant.bos:     set INBUILDSTANCE to 1;
armada_advancedaircraftplant.bos:     set INBUILDSTANCE to 0;
Binary file armada_dragonslayer.cob matches
armada_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 1;
armada_advancedconstructionaircraft.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionbot.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionbot.bos:     set INBUILDSTANCE to 1;
armada_advancedconstructionsub.bos:   set INBUILDSTANCE to 0;
armada_advancedconstructionsub.bos:   set INBUILDSTANCE to 1;
armada_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 0;
armada_advancedconstructionvehicle.bos:     set INBUILDSTANCE to 1;
Binary file armada_advancedconstructionvehicle.cob matches
armada_advancedsolarcollector.bos:  set ARMORED to 0;
armada_advancedsolarcollector.bos:  set ARMORED to 1;
armada_advancedfusionreactor.bos:    set ARMORED to 1;
armada_advancedfusionreactor.bos:    set ARMORED to 0;
Binary file armada_sweeper.cob matches
armada_advancedbotlab.bos:    set YARD_OPEN to 1;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 1;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set YARD_OPEN to 0;
armada_advancedbotlab.bos:            set BUGGER_OFF to 1;
armada_advancedbotlab.bos:            set YARD_OPEN to 0;
armada_advancedbotlab.bos:    set BUGGER_OFF to 0;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 1;
armada_advancedbotlab.bos:    set INBUILDSTANCE to 0;
armada_rattlesnake.bos:     set ARMORED to 0;
armada_rattlesnake.bos:     set ARMORED to 1;
Binary file armada_rattlesnake.cob matches
armada_twilight.bos:    set ARMORED to 0;
armada_twilight.bos:    set ARMORED to 1;
armada_twilight.bos:    set ACTIVATION to 0;
armada_twilight.bos:    set ACTIVATION to 100;
Binary file armada_amphibiousbot.cob matches
armada_amphibiouscomplex.bos:   set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 1;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:           set BUGGER_OFF to 1;
armada_amphibiouscomplex.bos:           set YARD_OPEN to 0;
armada_amphibiouscomplex.bos:   set BUGGER_OFF to 0;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 1;
armada_amphibiouscomplex.bos:   set INBUILDSTANCE to 0;
Binary file armada_crocodile.cob matches
armada_pulsar.bos:    set ARMORED to 0;
armada_pulsar.bos:    set ARMORED to 1;
armada_aircraftplant.bos:      set YARD_OPEN to 1;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 1;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set YARD_OPEN to 0;
armada_aircraftplant.bos:              set BUGGER_OFF to 1;
armada_aircraftplant.bos:              set YARD_OPEN to 0;
armada_aircraftplant.bos:      set BUGGER_OFF to 0;
armada_aircraftplant.bos:      set INBUILDSTANCE to 1;
armada_aircraftplant.bos:      set INBUILDSTANCE to 0;
Binary file armada_shellshocker.cob matches
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 0;
armada_radarjammerbot.bos:            set ACTIVATION to 100;
Binary file armada_radarjammerbot.cob matches
armada_advancedshipyard.bos:     set YARD_OPEN to 1;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 1;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set YARD_OPEN to 0;
armada_advancedshipyard.bos:             set BUGGER_OFF to 1;
armada_advancedshipyard.bos:             set YARD_OPEN to 0;
armada_advancedshipyard.bos:     set BUGGER_OFF to 0;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 1;
armada_advancedshipyard.bos:     set INBUILDSTANCE to 0;
Binary file armada_moray.cob matches
armada_advancedvehicleplant.bos:     set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 1;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:             set BUGGER_OFF to 1;
armada_advancedvehicleplant.bos:             set YARD_OPEN to 0;
armada_advancedvehicleplant.bos:     set BUGGER_OFF to 0;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 1;
armada_advancedvehicleplant.bos:     set INBUILDSTANCE to 0;
Binary file armada_titan.cob matches
Binary file armada_dreadnought.cob matches
armada_beaver.bos:  set INBUILDSTANCE to 0;
armada_beaver.bos:  set INBUILDSTANCE to 1;
Binary file armada_roughneck.cob matches
Binary file armada_bull.cob matches
armada_constructionaircraft.bos:      set INBUILDSTANCE to 1;
armada_constructionaircraft.bos:      set INBUILDSTANCE to 0;
Binary file armada_haven.cob matches
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 0;
armada_constructionhovercraft.bos:      set INBUILDSTANCE to 1;
Binary file armada_constructionhovercraft.cob matches
Binary file armada_chainsaw.cob matches
armada_constructionbot.bos:      set INBUILDSTANCE to 0;
armada_constructionbot.bos:      set INBUILDSTANCE to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 1;
armada_cloakablefusionreactor.bos:   set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 0;
armada_dragonsclaw.bos:    set ARMORED to 1;
Binary file armada_dragonsclaw.cob matches
armada_commander.bos:     set INBUILDSTANCE to 1;
armada_commander.bos:     set INBUILDSTANCE to 0;
armada_commanderboss.bos: set INBUILDSTANCE to 1;
armada_commanderboss.bos: set INBUILDSTANCE to 0;
armada_consul.bos:  set INBUILDSTANCE to 1;
armada_consul.bos:  set INBUILDSTANCE to 0;
Binary file armada_turtle.cob matches
Binary file armada_paladin.cob matches
armada_constructionship.bos:      set INBUILDSTANCE to 0;
armada_constructionship.bos:      set INBUILDSTANCE to 1;
Binary file armada_constructionship.cob matches
armada_constructionseaplane.bos:     set INBUILDSTANCE to 1;
armada_constructionseaplane.bos:     set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 0;
armada_constructionvehicle.bos:      set INBUILDSTANCE to 1;
Binary file armada_dolphin.cob matches
armada_decoyfusionreactor.bos:      set ARMORED to 1;
armada_decoyfusionreactor.bos:      set ARMORED to 0;
Binary file armada_paralyzer.cob matches
armada_epoch.bos:   set ARMORED to 1;
Binary file armada_epoch.cob matches
armada_butler.bos:    set INBUILDSTANCE to 0;
armada_butler.bos:    set INBUILDSTANCE to 1;
Binary file armada_sprinter.cob matches
Binary file armada_rover.cob matches
Binary file armada_fatboy.cob matches
armada_ferret.bos:  set ARMORED to 0;
armada_ferret.bos:  set ARMORED to 1;
Binary file armada_ferret.cob matches
Binary file armada_navalarbalest.cob matches
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 1;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:             set BUGGER_OFF to 1;
armada_navalhovercraftplatform.bos:             set YARD_OPEN to 0;
armada_navalhovercraftplatform.bos:     set BUGGER_OFF to 0;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 1;
armada_navalhovercraftplatform.bos:     set INBUILDSTANCE to 0;
Binary file armada_hound.cob matches
Binary file armada_arbalest.cob matches
Binary file armada_blitz.cob matches
Binary file armada_tick.cob matches
Binary file armada_navalnettle.cob matches
armada_fusionreactor.bos:     set ARMORED to 1;
armada_fusionreactor.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 0;
armada_prude.bos:     set ARMORED to 1;
Binary file armada_gunplatform.cob matches
Binary file armada_gremlin.cob matches
Binary file armada_mace.cob matches
armada_hovercraftplatform.bos:      set YARD_OPEN to 1;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 1;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set YARD_OPEN to 0;
armada_hovercraftplatform.bos:              set BUGGER_OFF to 1;
armada_hovercraftplatform.bos:              set YARD_OPEN to 0;
armada_hovercraftplatform.bos:      set BUGGER_OFF to 0;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 1;
armada_hovercraftplatform.bos:      set INBUILDSTANCE to 0;
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 0;
armada_umbra.bos:             set ACTIVATION to 100;
Binary file armada_janus.cob matches
Binary file armada_crossbow.cob matches
Binary file armada_juno.cob matches
Binary file armada_banshee.cob matches
armada_botlab.bos:     set YARD_OPEN to 1;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 1;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set YARD_OPEN to 0;
armada_botlab.bos:             set BUGGER_OFF to 1;
armada_botlab.bos:             set YARD_OPEN to 0;
armada_botlab.bos:     set BUGGER_OFF to 0;
armada_botlab.bos:     set INBUILDSTANCE to 1;
armada_botlab.bos:     set INBUILDSTANCE to 0;
Binary file armada_jaguar.cob matches
Binary file armada_lunkhead.cob matches
Binary file armada_starlight.cob matches
Binary file armada_marauder.cob matches
fgrep: armada_marauder_lus: Is a directory
Binary file armada_compass.cob matches
Binary file armada_mauser.cob matches
Binary file armada_gunslinger.cob matches
armada_mercury.bos: set DELAY_UNIT_VAR to 0;
Binary file armada_mercury.cob matches
armada_ambassador.bos:    set ARMORED to 1;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:    set ARMORED to 0;
armada_ambassador.bos:    set-signal-mask SIG_RESTORE;
Binary file armada_ambassador.cob matches
armada_possum.bos:      set-signal-mask SIG_RESTORE;
Binary file armada_possum.cob matches
armada_voyager.bos:     set INBUILDSTANCE to 1;
armada_voyager.bos:     set INBUILDSTANCE to 0;
Binary file armada_voyager.cob matches
armada_groundhog.bos:     set INBUILDSTANCE to 1;
armada_groundhog.bos:     set INBUILDSTANCE to 0;
armada_advancedenergyconverter.bos:    set ARMORED to 0; //Not needed as MM in BAR have no damage modif
yer tag set
armada_advancedenergyconverter.bos:    set ARMORED to 1;
Binary file armada_longbow.cob matches
armada_constructionturret.bos:  set INBUILDSTANCE to 1;
armada_constructionturret.bos:  set INBUILDSTANCE to 0;
Binary file armada_constructionturret.cob matches
armada_constructionturretplat.bos:      set INBUILDSTANCE to 1;
armada_constructionturretplat.bos:      set INBUILDSTANCE to 0;
Binary file armada_constructionturretplat.cob matches
armada_pitbull.bos:      set ARMORED to 0;
armada_pitbull.bos:      set ARMORED to 1;
armada_pitbull.bos:      set-signal-mask SIG_RESTORE;
Binary file armada_pitbull.cob matches
Binary file armada_pincer.cob matches
armada_seaplaneplatform.bos:    set ARMORED to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
armada_seaplaneplatform.bos:    set YARD_OPEN to 1;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 1;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set YARD_OPEN to 0;
armada_seaplaneplatform.bos:            set BUGGER_OFF to 1;
armada_seaplaneplatform.bos:            set YARD_OPEN to 0;
armada_seaplaneplatform.bos:    set BUGGER_OFF to 0;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 1;
armada_seaplaneplatform.bos:    set INBUILDSTANCE to 0;
armada_seaplaneplatform.bos:    set ARMORED to 1;
Binary file armada_ellysaw.cob matches
Binary file armada_skater.cob matches
Binary file armada_harpoon2.cob matches
armada_pawn.bos:              bAnimate = TRUE; // this sets animation started, so that
 StopAnimate knows that it should restore state quickly
Binary file armada_pawn.cob matches
armada_grimreaper.bos:    set INBUILDSTANCE to 1;
armada_grimreaper.bos:    set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 0;
armada_lazarus.bos:   set INBUILDSTANCE to 1;
armrectrt4.bos: set INBUILDSTANCE to 0;
armrectrt4.bos: set INBUILDSTANCE to 1;
Binary file armada_nettle.cob matches
Binary file armada_rocketeer.cob matches
Binary file armada_corsair.cob matches
Binary file armada_sabre.cob matches
Binary file armada_whistler.cob matches
Binary file armada_tsunami.cob matches
Binary file armada_umbrella.cob matches
Binary file armada_serpent.cob matches
Binary file armada_seeker.cob matches
armada_experimentalgantry.bos:   set YARD_OPEN to 1;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 1;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set YARD_OPEN to 0;
armada_experimentalgantry.bos:           set BUGGER_OFF to 1;
armada_experimentalgantry.bos:           set YARD_OPEN to 0;
armada_experimentalgantry.bos:   set BUGGER_OFF to 0;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 1;
armada_experimentalgantry.bos:   set INBUILDSTANCE to 0;
Binary file armada_armageddon.cob matches
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 0;
armada_bermuda.bos:            set ACTIVATION to 100;
Binary file armada_bermuda.cob matches
Binary file armada_sharpshooter.cob matches
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 1;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:           set BUGGER_OFF to 1;
armada_solarcollector.bos:           set YARD_OPEN to 0;
armada_solarcollector.bos:   set BUGGER_OFF to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:   set ARMORED to 0;
armada_solarcollector.bos:   set YARD_OPEN to 0;
armada_solarcollector.bos:   set ARMORED to 1;
armada_solarcollector.bos:   set YARD_OPEN to 1;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 0;
armada_solarcollector.bos:           set ACTIVATION to 100;
Binary file armada_webber.cob matches
Binary file armada_recluse.cob matches
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:     set INBUILDSTANCE to 1;
armada_ghost.bos:     set INBUILDSTANCE to 0;
armada_ghost.bos:             set ACTIVATION to 0;
armada_ghost.bos:             set ACTIVATION to 100;
Binary file armada_stout.cob matches
Binary file armada_eel.cob matches
armada_shipyard.bos:      set YARD_OPEN to 1;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 1;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set YARD_OPEN to 0;
armada_shipyard.bos:              set BUGGER_OFF to 1;
armada_shipyard.bos:              set YARD_OPEN to 0;
armada_shipyard.bos:      set BUGGER_OFF to 0;
armada_shipyard.bos:      set INBUILDSTANCE to 1;
armada_shipyard.bos:      set INBUILDSTANCE to 0;
armada_pinpointer.bos:    set ARMORED to 1;
armada_pinpointer.bos:    set ACTIVATION to 0;
armada_pinpointer.bos:    set ACTIVATION to 1;
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           set BUSY to 0;
armada_bearer.bos:           set BUSY to 1;
armada_bearer.bos:           set BUSY to 0;
Binary file armada_bearer.cob matches
Binary file armada_harpoon.cob matches
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           set BUSY to 0;
armada_convoy.bos:           set BUSY to 1;
armada_convoy.bos:           set BUSY to 0;
Binary file armada_convoy.cob matches
Binary file armada_vanguard.cob matches
armada_vehicleplant.bos:      set ARMORED to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
armada_vehicleplant.bos:      set YARD_OPEN to 1;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 1;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set YARD_OPEN to 0;
armada_vehicleplant.bos:              set BUGGER_OFF to 1;
armada_vehicleplant.bos:              set YARD_OPEN to 0;
armada_vehicleplant.bos:      set BUGGER_OFF to 0;
armada_vehicleplant.bos:      set INBUILDSTANCE to 1;
armada_vehicleplant.bos:      set INBUILDSTANCE to 0;
armada_vehicleplant.bos:      set ARMORED to 1;
Binary file armada_centurion.cob matches
armada_windturbine.bos:                     set ACTIVATION to 100;
armada_windturbine.bos:             set ACTIVATION to 0;
armada_windturbine.bos:             set ACTIVATION to 100;
Binary file armada_windturbine.cob matches
Binary file armada_shredder.cob matches
Binary file armada_welder.cob matches
Binary file cob_file.pyc matches
constants.h:#define BUGGER_OFF          19  // set or get (ask other units to cl
ear the area)
constants.h:#define CHANGE_TARGET             98 // set, the value it's set to d
etermines the affected weapon
coraap.bos:     set YARD_OPEN to 1;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 1;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set YARD_OPEN to 0;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 0;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set INBUILDSTANCE to 1;
coraap.bos:     set INBUILDSTANCE to 0;
coraca.bos:     set INBUILDSTANCE to 1;
coraca.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 1;
coracsub.bos:   set INBUILDSTANCE to 0;
coracsub.bos:   set INBUILDSTANCE to 1;
coracv.bos:     set INBUILDSTANCE to 0;
coracv.bos:     set INBUILDSTANCE to 1;
Binary file coracv.cob matches
coradvsol.bos:/*    57:*/       set ARMORED to 0;
coradvsol.bos:/*    5f:*/       set ARMORED to 1;
coradvsol.bos:/*    7d:*/       set ACTIVATION to 0;
coradvsol.bos:/*    85:*/       set ACTIVATION to 100;
corafus.bos:/*    b0:*/ set ARMORED to 1;
corafus.bos:/*    ba:*/ set ARMORED to 0;
Binary file corah.cob matches
Binary file corak.cob matches
Binary file coramph.cob matches
coramsub.bos:/*    87:*/        set YARD_OPEN to 1;
coramsub.bos:/*    92:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    9a:*/                set YARD_OPEN to 1;
coramsub.bos:/*    a1:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    a9:*/        set YARD_OPEN to 0;
coramsub.bos:/*    b3:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    bb:*/                set YARD_OPEN to 0;
coramsub.bos:/*    c2:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    d0:*/        set INBUILDSTANCE to 1;
coramsub.bos:/*    d8:*/        set INBUILDSTANCE to 0;
corap.bos:/*   17e:*/   set YARD_OPEN to 1;
corap.bos:/*   189:*/           set BUGGER_OFF to 1;
corap.bos:/*   191:*/           set YARD_OPEN to 1;
corap.bos:/*   198:*/   set BUGGER_OFF to 0;
corap.bos:/*   1a0:*/   set YARD_OPEN to 0;
corap.bos:/*   1aa:*/           set BUGGER_OFF to 1;
corap.bos:/*   1b2:*/           set YARD_OPEN to 0;
corap.bos:/*   1b9:*/   set BUGGER_OFF to 0;
corap.bos:/*   1d5:*/   set INBUILDSTANCE to 1;
corap.bos:/*   1dd:*/   set INBUILDSTANCE to 0;
Binary file corarch.cob matches
corasy.bos:     set YARD_OPEN to 1;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 1;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set YARD_OPEN to 0;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 0;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set INBUILDSTANCE to 1;
corasy.bos:     set INBUILDSTANCE to 0;
corasye.bos:    set YARD_OPEN to 1;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 1;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set YARD_OPEN to 0;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 0;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set INBUILDSTANCE to 1;
corasye.bos:    set INBUILDSTANCE to 0;
coravp.bos:     set YARD_OPEN to 1;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 1;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set YARD_OPEN to 0;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 0;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set INBUILDSTANCE to 1;
coravp.bos:     set INBUILDSTANCE to 0;
Binary file corban.cob matches
Binary file corbats.cob matches
corbhmth.bos:   set ACTIVATION to 100;
corbhmth.bos:   set ACTIVATION to 0;
corblackhy.bos: set ARMORED to 1;
Binary file corblackhy.cob matches
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 0 - 1500 + get UNK
NOWN_UNIT_VALUE(82);
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 1500 + get UNKNOWN
_UNIT_VALUE(82);
corca.bos:      set INBUILDSTANCE to 1;
corca.bos:      set INBUILDSTANCE to 0;
Binary file corcan.cob matches
Binary file corcarry.cob matches
Binary file corcat.cob matches
corch.bos:      set INBUILDSTANCE to 0;
corch.bos:      set INBUILDSTANCE to 1;
Binary file corch.cob matches
corck.bos:      set INBUILDSTANCE to 0;
corck.bos:      set INBUILDSTANCE to 1;
cortex_commander.bos:     set INBUILDSTANCE to 1;
cortex_commander.bos:     set INBUILDSTANCE to 0;
cortex_commanderboss.bos: set INBUILDSTANCE to 1;
cortex_commanderboss.bos: set INBUILDSTANCE to 0;
Binary file corcrash.cob matches
Binary file corcrus.cob matches
Binary file corcrw.cob matches
corcs.bos:      set INBUILDSTANCE to 1;
corcs.bos:      set INBUILDSTANCE to 0;
corcsa.bos:     set INBUILDSTANCE to 1;
corcsa.bos:     set INBUILDSTANCE to 0;
Binary file corcut.cob matches
corcv.bos:      set INBUILDSTANCE to 0;
corcv.bos:      set INBUILDSTANCE to 1;
cordoom.bos:    set ARMORED to 0;
cordoom.bos:    set ARMORED to 1;
Binary file corenaa.cob matches
corerad.bos:            set CHANGE_TARGET to 1;
Binary file corerad.cob matches
Binary file coresupp.cob matches
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 100;
Binary file corexp.cob matches
corfast.bos:    set INBUILDSTANCE to 1;
corfast.bos:    set INBUILDSTANCE to 0;
Binary file corfav.cob matches
corfhp.bos:/*   162:*/  set YARD_OPEN to 1;
corfhp.bos:/*   16d:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   175:*/          set YARD_OPEN to 1;
corfhp.bos:/*   17c:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   184:*/  set YARD_OPEN to 0;
corfhp.bos:/*   18e:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   196:*/          set YARD_OPEN to 0;
corfhp.bos:/*   19d:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   1bb:*/  set INBUILDSTANCE to 1;
corfhp.bos:/*   1c3:*/  set INBUILDSTANCE to 0;
Binary file corflak.cob matches
corfmkr.bos:                    set ACTIVATION to 1;
corfmkr.bos:                    set ACTIVATION to 0;
Binary file corfrock.cob matches
Binary file corfrt.cob matches
corgant.bos:    set YARD_OPEN to 1;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 1;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set YARD_OPEN to 0;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 0;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set INBUILDSTANCE to 1;
corgant.bos:    set INBUILDSTANCE to 0;
Binary file corgarp.cob matches
Binary file corgator.cob matches
Binary file corgol.cob matches
Binary file corhal.cob matches
corhp.bos:/*   162:*/   set YARD_OPEN to 1;
corhp.bos:/*   16d:*/           set BUGGER_OFF to 1;
corhp.bos:/*   175:*/           set YARD_OPEN to 1;
corhp.bos:/*   17c:*/   set BUGGER_OFF to 0;
corhp.bos:/*   184:*/   set YARD_OPEN to 0;
corhp.bos:/*   18e:*/           set BUGGER_OFF to 1;
corhp.bos:/*   196:*/           set YARD_OPEN to 0;
corhp.bos:/*   19d:*/   set BUGGER_OFF to 0;
corhp.bos:/*   1bb:*/   set INBUILDSTANCE to 1;
corhp.bos:/*   1c3:*/   set INBUILDSTANCE to 0;
Binary file corhrk.cob matches
corintr.bos:    set ARMORED to 1;
corintr.bos:            set BUSY to 1;
corintr.bos:            set BUSY to 0;
corintr.bos:    set BUSY to 1;
corintr.bos:    set BUSY to 0;
corjugg.bos:    set CHANGE_TARGET to 2;
corjugg.bos:    set CHANGE_TARGET to 3;
corjugg.bos:    set CHANGE_TARGET to 4;
Binary file corjugg.cob matches
corjugg.lua_old:        SetSignalMask( SIG_stop )
Binary file corjuno.cob matches
corkarg.lua_old:        SetSignalMask(SIG_RESTORE)
corkorg.bos:    set ARMORED to 1;
corkorg.bos:    set-signal-mask SIG_FOOTSTOMP_L;
corkorg.bos:    set-signal-mask SIG_FOOTSTOMP_R;
Binary file corkorg.cob matches
Binary file corlevlr.cob matches
Binary file cormabm.cob matches
cormakr.bos:                            set ACTIVATION to 1;
cormakr.bos:                            set ACTIVATION to 0;
cormando.bos:   set INBUILDSTANCE to 0;
cormando.bos:   set INBUILDSTANCE to 1;
Binary file cormart.cob matches
cormaw.bos:     set ARMORED to 0;
cormaw.bos:     set ARMORED to 1;
Binary file cormaw.cob matches
cormex.bos:     set ARMORED to 0;
cormex.bos:     set ARMORED to 1;
cormexp.bos:    set ARMORED to 0;
cormexp.bos:    set ARMORED to 1;
cormexp.bos:    set ACTIVATION to 100;
cormexp.bos:            set ACTIVATION to 0;
cormexp.bos:    set ARMORED to 0;
Binary file cormexp.cob matches
cormh.bos:      set-signal-mask SIG_RESTORE;
Binary file cormh.cob matches
Binary file cormist.cob matches
cormls.bos:     set INBUILDSTANCE to 1;
cormls.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 1;
cormmkr.bos:    set ARMORED to 0;  //Not needed as MM in BAR have no damage modi
fyer tag set
cormmkr.bos:    set ARMORED to 1;
cormoho.bos:    set ARMORED to 0;
cormoho.bos:    set ARMORED to 1;
cormoho.bos:    set ARMORED to 1;
Binary file cormort.cob matches
Binary file cormship.cob matches
cormuskrat.bos: set INBUILDSTANCE to 1;
cormuskrat.bos: set INBUILDSTANCE to 0;
cormuskrat.bos: set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 0;
Binary file cornanotc.cob matches
cornanotcplat.bos:      set INBUILDSTANCE to 1;
cornanotcplat.bos:      set INBUILDSTANCE to 0;
Binary file cornanotcplat.cob matches
cornecro.bos:   set INBUILDSTANCE to 0;
cornecro.bos:   set INBUILDSTANCE to 1;
Binary file corparrow.cob matches
corplat.bos:    set ARMORED to 0;
corplat.bos:    set ARMORED to 1;
corplat.bos:    set YARD_OPEN to 1;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 1;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set YARD_OPEN to 0;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 0;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set INBUILDSTANCE to 1;
corplat.bos:    set INBUILDSTANCE to 0;
corplat.bos:    set ARMORED to 1;
Binary file corpship.cob matches
Binary file corpt.cob matches
Binary file corpyro.cob matches
Binary file corraid.cob matches
Binary file correap.cob matches
correcl.bos:    set INBUILDSTANCE to 1;
correcl.bos:    set INBUILDSTANCE to 0;
Binary file corrl.cob matches
Binary file corroy.cob matches
Binary file corsb.cob matches
Binary file corscreamer.cob matches
Binary file corseal.cob matches
Binary file corsent.cob matches
Binary file corsh.cob matches
corshiva.bos:   set ARMORED to 1;
corshiva.bos:   set ARMORED to 0;
corshiva.bos:   set ARMORED to 1;
Binary file corshiva.cob matches
corshiva.lua_old:       SetSignalMask( SIG_stop )
corshiva.lua_old:       SetSignalMask( SIG_stop )
corshroud.bos:/*    80:*/               set ACTIVATION to 0;
corshroud.bos:/*   138:*/               set ACTIVATION to 0;
corshroud.bos:/*   144:*/               set ACTIVATION to 100;
Binary file corsilo.cob matches
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 100;
Binary file corsnap.cob matches
Binary file corsok.cob matches
corsolar.bos:   set YARD_OPEN to 1;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 1;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set YARD_OPEN to 0;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 0;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set ACTIVATION to 100;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:   set ARMORED to 0;
corsolar.bos:   set ARMORED to 1;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:           set ACTIVATION to 100;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 100;
Binary file corspec.cob matches
corspy.bos:     set INBUILDSTANCE to 1;
corspy.bos:     set INBUILDSTANCE to 0;
Binary file corstorm.cob matches
Binary file corsumo.cob matches
corsumo.lua_old:    SetSignalMask(SIG_RESTORE)
corsy.bos:      set YARD_OPEN to 1;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 1;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set YARD_OPEN to 0;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 0;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set INBUILDSTANCE to 1;
corsy.bos:      set INBUILDSTANCE to 0;
cortarg.bos:/*   1a6:*/ set ACTIVATION to 0;
cortarg.bos:/*   1ae:*/ set ACTIVATION to 1;
Binary file cortermite.cob matches
corthovr.bos:           set BUSY to 1;
corthovr.bos:           set BUSY to 0;
corthovr.bos:           set BUSY to 1;
corthovr.bos:           set BUSY to 0;
Binary file corthovr.cob matches
Binary file corthud.cob matches
cortoast.bos:   set ARMORED to 0;
cortoast.bos:   set ARMORED to 1;
Binary file cortoast.cob matches
Binary file cortrem.cob matches
Binary file cortron.cob matches
cortship.bos:           set BUSY to 1;
cortship.bos:           set BUSY to 0;
cortship.bos:           set BUSY to 1;
cortship.bos:           set BUSY to 0;
Binary file cortship.cob matches
coruwmme.bos:   set ARMORED to 0;
coruwmme.bos:   set ARMORED to 1;
coruwmme.bos:   set ARMORED to 1;
Binary file corvoyr.cob matches
corvp.bos:      set YARD_OPEN to 1;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 1;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set YARD_OPEN to 0;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 0;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set INBUILDSTANCE to 1;
corvp.bos:      set INBUILDSTANCE to 0;
corvroc.bos:    set-signal-mask SIG_RESTORE;
Binary file corvroc.cob matches
corwin.bos:                     set ACTIVATION to 100;
corwin.bos:             set ACTIVATION to 0;
corwin.bos:             set ACTIVATION to 100;
Binary file corwin.cob matches
Binary file corwolv.cob matches
exptype.h:#define BUGGER_OFF          19  // set or get (ask other units to clea
r the area)
exptype.h:#define CHANGE_TARGET             98 // set, the value it's set to det
ermines the affected weapon
Binary file fgrep.exe matches
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 1;
meteor.bos:     set ARMORED to 0;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 0;
fgrep: New folder: Is a directory
roost.bos:      set ARMORED to 0;
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
standard_commands_gpl.h:#define BUGGER_OFF              19      // set or get (a
sk other units to clear the area)
yard.h: set YARD_OPEN to TRUE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to TRUE;
yard.h: set BUGGER_OFF to FALSE;
yard.h: set YARD_OPEN to FALSE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to FALSE;
yard.h: set BUGGER_OFF to FALSE;

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>